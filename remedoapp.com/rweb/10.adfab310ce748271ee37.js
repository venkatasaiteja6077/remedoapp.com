(window.webpackJsonp = window.webpackJsonp || []).push([
    [10], {
        "8B32": function(e, t, n) {
            "use strict";
            n.r(t);
            var l = n("CcnG"),
                i = function() {
                    return function() {}
                }(),
                r = n("pMnS"),
                s = n("Ip0R"),
                o = n("EXYV"),
                a = n("Rg05"),
                u = n("T7iU"),
                c = n("26FU"),
                d = n("6blF"),
                f = n("VnD/"),
                p = n("P6uZ"),
                h = n("15JJ"),
                g = function() {
                    function e() {}
                    return e.prototype.create = function(e) {
                        return new u(e.videoElement, e.options)
                    }, e.prototype.updateSource = function(e) {
                        e.plyr.source = e.source
                    }, e.prototype.destroy = function(e) {
                        e.plyr.destroy()
                    }, e
                }(),
                m = function() {
                    function e(e, t, n) {
                        this.elementRef = e, this.ngZone = t, this.renderer = n, this.playerChange = new c.a(null), this.events = new Map, this.plyrType = "video", this.plyrInit = this.playerChange.pipe(Object(f.a)((function(e) {
                            return !!e
                        }))), this.plyrProgress = this.createLazyEvent("progress"), this.plyrPlaying = this.createLazyEvent("playing"), this.plyrPlay = this.createLazyEvent("play"), this.plyrPause = this.createLazyEvent("pause"), this.plyrTimeUpdate = this.createLazyEvent("timeupdate"), this.plyrVolumeChange = this.createLazyEvent("volumechange"), this.plyrSeeking = this.createLazyEvent("seeking"), this.plyrSeeked = this.createLazyEvent("seeked"), this.plyrRateChange = this.createLazyEvent("ratechange"), this.plyrEnded = this.createLazyEvent("ended"), this.plyrEnterFullScreen = this.createLazyEvent("enterfullscreen"), this.plyrExitFullScreen = this.createLazyEvent("exitfullscreen"), this.plyrCaptionsEnabled = this.createLazyEvent("captionsenabled"), this.plyrCaptionsDisabled = this.createLazyEvent("captionsdisabled"), this.plyrLanguageChange = this.createLazyEvent("languagechange"), this.plyrControlsHidden = this.createLazyEvent("controlshidden"), this.plyrControlsShown = this.createLazyEvent("controlsshown"), this.plyrReady = this.createLazyEvent("ready"), this.plyrLoadStart = this.createLazyEvent("loadstart"), this.plyrLoadedData = this.createLazyEvent("loadeddata"), this.plyrLoadedMetadata = this.createLazyEvent("loadedmetadata"), this.plyrQualityChange = this.createLazyEvent("qualitychange"), this.plyrCanPlay = this.createLazyEvent("canplay"), this.plyrCanPlayThrough = this.createLazyEvent("canplaythrough"), this.plyrStalled = this.createLazyEvent("stalled"), this.plyrWaiting = this.createLazyEvent("waiting"), this.plyrEmptied = this.createLazyEvent("emptied"), this.plyrCueChange = this.createLazyEvent("cuechange"), this.plyrError = this.createLazyEvent("error"), this.plyrStateChange = this.createLazyEvent("statechange"), this.subscriptions = []
                    }
                    return Object.defineProperty(e.prototype, "player", {
                        get: function() {
                            return this.playerChange.getValue()
                        },
                        enumerable: !0,
                        configurable: !0
                    }), e.prototype.ngOnChanges = function(e) {
                        var t = this;
                        this.subscriptions.push(this.plyrInit.pipe(Object(p.a)()).subscribe((function(n) {
                            var l = [e.plyrOptions, e.plyrPlaysInline, e.plyrCrossOrigin].filter((function(e) {
                                return !!e
                            }));
                            l.length ? l.some((function(e) {
                                return !e.firstChange
                            })) && t.initPlyr(!0) : t.updatePlyrSource(n)
                        })))
                    }, e.prototype.ngOnDestroy = function() {
                        this.destroyPlayer(), this.subscriptions.forEach((function(e) {
                            return e.unsubscribe()
                        }))
                    }, e.prototype.ngAfterViewInit = function() {
                        this.initPlyr()
                    }, e.prototype.initPlyr = function(e) {
                        var t = this;
                        void 0 === e && (e = !1), !e && this.player || this.ngZone.runOutsideAngular((function() {
                            t.destroyPlayer(), t.driver = t.plyrDriver || new g, t.ensureVideoElement();
                            var e = t.driver.create({
                                videoElement: t.videoElement,
                                options: t.plyrOptions
                            });
                            t.updatePlyrSource(e), t.playerChange.next(e)
                        }))
                    }, e.prototype.updatePlyrSource = function(e) {
                        this.driver.updateSource({
                            videoElement: this.videoElement,
                            plyr: e,
                            source: {
                                type: this.plyrType,
                                title: this.plyrTitle,
                                sources: this.plyrSources,
                                poster: this.plyrPoster,
                                tracks: this.plyrTracks
                            }
                        })
                    }, e.prototype.createLazyEvent = function(e) {
                        var t = this;
                        return this.plyrInit.pipe(Object(h.a)((function() {
                            return new d.a((function(n) {
                                return t.on(e, (function(e) {
                                    return t.ngZone.run((function() {
                                        return n.next(e)
                                    }))
                                }))
                            }))
                        })))
                    }, e.prototype.destroyPlayer = function() {
                        var e = this;
                        this.player && (Array.from(this.events.keys()).forEach((function(t) {
                            return e.off(t)
                        })), this.driver.destroy({
                            plyr: this.player
                        }), this.videoElement = null)
                    }, Object.defineProperty(e.prototype, "hostElement", {
                        get: function() {
                            return this.elementRef.nativeElement
                        },
                        enumerable: !0,
                        configurable: !0
                    }), e.prototype.ensureVideoElement = function() {
                        var e = this.hostElement.querySelector("video");
                        e ? this.videoElement = e : (this.videoElement = this.renderer.createElement("video"), this.videoElement.controls = !0, this.plyrCrossOrigin && this.videoElement.setAttribute("crossorigin", ""), this.plyrPlaysInline && this.videoElement.setAttribute("playsinline", ""), this.renderer.appendChild(this.hostElement, this.videoElement))
                    }, e.prototype.on = function(e, t) {
                        this.events.set(e, t), this.player.on(e, t)
                    }, e.prototype.off = function(e) {
                        this.player.off(e, this.events.get(e)), this.events.delete(e)
                    }, e
                }(),
                v = function() {
                    return function() {}
                }(),
                y = l["\u0275crt"]({
                    encapsulation: 0,
                    styles: [""],
                    data: {}
                });

            function b(e) {
                return l["\u0275vid"](0, [l["\u0275qud"](402653184, 1, {
                    vr: 0
                })], null, null)
            }
            var T = n("bTu8"),
                w = n("K9Ia"),
                S = n("F/XL");

            function E(e) {
                return "object" == typeof e && null !== e && e.constructor && "Object" === Object.prototype.toString.call(e).slice(8, -1)
            }

            function _(e, t, n) {
                return !0 === R(e) && t && !t.el || !("boolean" != typeof t && t.el !== (null == n ? void 0 : n.nativeElement) && ("string" == typeof t.el || "object" == typeof t.el))
            }

            function C(e, t) {
                const n = ["__proto__", "constructor", "prototype"];
                Object.keys(t).filter(e => n.indexOf(e) < 0).forEach(n => {
                    void 0 !== e[n] ? e[n] && !t[n] || (E(t[n]) && E(e[n]) && Object.keys(t[n]).length > 0 ? t[n].__swiper__ ? e[n] = t[n] : C(e[n], t[n]) : e[n] = t[n]) : e[n] = t[n]
                })
            }

            function R(e) {
                return null != e && "" + e != "false"
            }
            const I = ["pagination", "navigation", "scrollbar", "virtual"];

            function k(e, t = {}) {
                return E(e) ? e : !0 === R(e) && t
            }
            const A = ["init", "_direction", "touchEventsTarget", "initialSlide", "_speed", "cssMode", "updateOnWindowResize", "resizeObserver", "nested", "focusableElements", "_width", "_height", "preventInteractionOnTransition", "userAgent", "url", "_edgeSwipeDetection", "_edgeSwipeThreshold", "_freeMode", "_freeModeMomentum", "_freeModeMomentumRatio", "_freeModeMomentumBounce", "_freeModeMomentumBounceRatio", "_freeModeMomentumVelocityRatio", "_freeModeSticky", "_freeModeMinimumVelocity", "_autoHeight", "setWrapperSize", "virtualTranslate", "_effect", "breakpoints", "_spaceBetween", "_slidesPerView", "_slidesPerColumn", "_slidesPerColumnFill", "_slidesPerGroup", "_slidesPerGroupSkip", "_centeredSlides", "_centeredSlidesBounds", "_slidesOffsetBefore", "_slidesOffsetAfter", "normalizeSlideIndex", "_centerInsufficientSlides", "_watchOverflow", "roundLengths", "touchRatio", "touchAngle", "simulateTouch", "_shortSwipes", "_longSwipes", "longSwipesRatio", "longSwipesMs", "_followFinger", "allowTouchMove", "_threshold", "touchMoveStopPropagation", "touchStartPreventDefault", "touchStartForcePreventDefault", "touchReleaseOnEdges", "uniqueNavElements", "_resistance", "_resistanceRatio", "_watchSlidesProgress", "_watchSlidesVisibility", "_grabCursor", "preventClicks", "preventClicksPropagation", "_slideToClickedSlide", "_preloadImages", "updateOnImagesReady", "_loop", "_loopAdditionalSlides", "_loopedSlides", "_loopFillGroupWithBlank", "loopPreventsSlide", "_allowSlidePrev", "_allowSlideNext", "_swipeHandler", "_noSwiping", "noSwipingClass", "noSwipingSelector", "passiveListeners", "containerModifierClass", "slideClass", "slideBlankClass", "slideActiveClass", "slideDuplicateActiveClass", "slideVisibleClass", "slideDuplicateClass", "slideNextClass", "slideDuplicateNextClass", "slidePrevClass", "slideDuplicatePrevClass", "wrapperClass", "runCallbacksOnInit", "observer", "observeParents", "observeSlideChildren", "a11y", "autoplay", "_controller", "coverflowEffect", "cubeEffect", "fadeEffect", "flipEffect", "hashNavigation", "history", "keyboard", "lazy", "mousewheel", "_navigation", "_pagination", "parallax", "_scrollbar", "_thumbs", "virtual", "zoom"].map(e => e.replace(/_/, ""));

            function P(e = {}) {
                const t = {
                        on: {}
                    },
                    n = {};
                C(t, T.a.defaults), C(t, T.a.extendedDefaults), t._emitClasses = !0;
                const l = {};
                return Object.keys(e).forEach(i => {
                    const r = i.replace(/^_/, "");
                    void 0 !== e[r] && (A.indexOf(r) >= 0 ? E(e[r]) ? (t[r] = {}, n[r] = {}, C(t[r], e[r]), C(n[r], e[r])) : (t[r] = e[r], n[r] = e[r]) : l[r] = e[r])
                }), {
                    params: t,
                    passedParams: n,
                    rest: l
                }
            }
            class x {
                constructor(e) {
                    this.template = e, this.class = "", this.slideData = {
                        isActive: !1,
                        isPrev: !1,
                        isNext: !1,
                        isVisible: !1,
                        isDuplicate: !1
                    }
                }
                set zoom(e) {
                    this._zoom = R(e)
                }
                get zoom() {
                    return this._zoom
                }
                get classNames() {
                    return this._classNames
                }
                set classNames(e) {
                    this._classNames !== e && (this._classNames = e, this.slideData = {
                        isActive: this._hasClass(["swiper-slide-active", "swiper-slide-duplicate-active"]),
                        isVisible: this._hasClass(["swiper-slide-visible"]),
                        isDuplicate: this._hasClass(["swiper-slide-duplicate"]),
                        isPrev: this._hasClass(["swiper-slide-prev", "swiper-slide-duplicate-prev"]),
                        isNext: this._hasClass(["swiper-slide-next", "swiper-slide-duplicate-next"])
                    })
                }
                _hasClass(e) {
                    return e.some(e => this._classNames.indexOf(e) >= 0)
                }
            }
            class D {
                constructor(e, t, n, i) {
                    this._ngZone = e, this.elementRef = t, this._changeDetectorRef = n, this._platformId = i, this.slideClass = "swiper-slide", this.wrapperClass = "swiper-wrapper", this.showNavigation = !0, this.showPagination = !0, this.showScrollbar = !0, this.s__beforeBreakpoint = new l.EventEmitter, this.s__containerClasses = new l.EventEmitter, this.s__slideClass = new l.EventEmitter, this.s__swiper = new l.EventEmitter, this.s_activeIndexChange = new l.EventEmitter, this.s_afterInit = new l.EventEmitter, this.s_autoplay = new l.EventEmitter, this.s_autoplayStart = new l.EventEmitter, this.s_autoplayStop = new l.EventEmitter, this.s_beforeDestroy = new l.EventEmitter, this.s_beforeInit = new l.EventEmitter, this.s_beforeLoopFix = new l.EventEmitter, this.s_beforeResize = new l.EventEmitter, this.s_beforeSlideChangeStart = new l.EventEmitter, this.s_beforeTransitionStart = new l.EventEmitter, this.s_breakpoint = new l.EventEmitter, this.s_changeDirection = new l.EventEmitter, this.s_click = new l.EventEmitter, this.s_doubleTap = new l.EventEmitter, this.s_doubleClick = new l.EventEmitter, this.s_destroy = new l.EventEmitter, this.s_fromEdge = new l.EventEmitter, this.s_hashChange = new l.EventEmitter, this.s_hashSet = new l.EventEmitter, this.s_imagesReady = new l.EventEmitter, this.s_init = new l.EventEmitter, this.s_keyPress = new l.EventEmitter, this.s_lazyImageLoad = new l.EventEmitter, this.s_lazyImageReady = new l.EventEmitter, this.s_loopFix = new l.EventEmitter, this.s_momentumBounce = new l.EventEmitter, this.s_navigationHide = new l.EventEmitter, this.s_navigationShow = new l.EventEmitter, this.s_observerUpdate = new l.EventEmitter, this.s_orientationchange = new l.EventEmitter, this.s_paginationHide = new l.EventEmitter, this.s_paginationRender = new l.EventEmitter, this.s_paginationShow = new l.EventEmitter, this.s_paginationUpdate = new l.EventEmitter, this.s_progress = new l.EventEmitter, this.s_reachBeginning = new l.EventEmitter, this.s_reachEnd = new l.EventEmitter, this.s_realIndexChange = new l.EventEmitter, this.s_resize = new l.EventEmitter, this.s_scroll = new l.EventEmitter, this.s_scrollbarDragEnd = new l.EventEmitter, this.s_scrollbarDragMove = new l.EventEmitter, this.s_scrollbarDragStart = new l.EventEmitter, this.s_setTransition = new l.EventEmitter, this.s_setTranslate = new l.EventEmitter, this.s_slideChange = new l.EventEmitter, this.s_slideChangeTransitionEnd = new l.EventEmitter, this.s_slideChangeTransitionStart = new l.EventEmitter, this.s_slideNextTransitionEnd = new l.EventEmitter, this.s_slideNextTransitionStart = new l.EventEmitter, this.s_slidePrevTransitionEnd = new l.EventEmitter, this.s_slidePrevTransitionStart = new l.EventEmitter, this.s_slideResetTransitionStart = new l.EventEmitter, this.s_slideResetTransitionEnd = new l.EventEmitter, this.s_sliderMove = new l.EventEmitter, this.s_sliderFirstMove = new l.EventEmitter, this.s_slidesLengthChange = new l.EventEmitter, this.s_slidesGridLengthChange = new l.EventEmitter, this.s_snapGridLengthChange = new l.EventEmitter, this.s_snapIndexChange = new l.EventEmitter, this.s_tap = new l.EventEmitter, this.s_toEdge = new l.EventEmitter, this.s_touchEnd = new l.EventEmitter, this.s_touchMove = new l.EventEmitter, this.s_touchMoveOpposite = new l.EventEmitter, this.s_touchStart = new l.EventEmitter, this.s_transitionEnd = new l.EventEmitter, this.s_transitionStart = new l.EventEmitter, this.s_update = new l.EventEmitter, this.s_zoomChange = new l.EventEmitter, this.s_swiper = new l.EventEmitter, this.indexChange = new l.EventEmitter, this._activeSlides = new w.a, this.containerClasses = "swiper-container", this.slidesChanges = e => {
                        this.slides = e.map((e, t) => (e.slideIndex = t, e.classNames = this.slideClass, e)), this.loop && !this.loopedSlides && this.calcLoopedSlides(), this.virtual ? this.swiperRef && this.swiperRef.virtual && this._ngZone.runOutsideAngular(() => {
                            this.swiperRef.virtual.slides = this.slides, this.swiperRef.virtual.update(!0)
                        }) : (this.prependSlides = Object(S.a)(this.slides.slice(this.slides.length - this.loopedSlides)), this.appendSlides = Object(S.a)(this.slides.slice(0, this.loopedSlides))), this._changeDetectorRef.detectChanges()
                    }, this.style = null, this.updateVirtualSlides = e => {
                        !this.swiperRef || this.currentVirtualData && this.currentVirtualData.from === e.from && this.currentVirtualData.to === e.to && this.currentVirtualData.offset === e.offset || (this.style = this.swiperRef.isHorizontal() ? {
                            [this.swiperRef.rtlTranslate ? "right" : "left"]: e.offset + "px"
                        } : {
                            top: e.offset + "px"
                        }, this.currentVirtualData = e, this._activeSlides.next(e.slides), this._ngZone.run(() => {
                            this._changeDetectorRef.detectChanges()
                        }), this._ngZone.runOutsideAngular(() => {
                            this.swiperRef.updateSlides(), this.swiperRef.updateProgress(), this.swiperRef.updateSlidesClasses(), this.swiperRef.lazy && this.swiperRef.params.lazy.enabled && this.swiperRef.lazy.load(), this.swiperRef.virtual.update(!0)
                        }))
                    }
                }
                set navigation(e) {
                    var t, n, l;
                    const i = "boolean" != typeof this._navigation ? null === (t = this._navigation) || void 0 === t ? void 0 : t.nextEl : null,
                        r = "boolean" != typeof this._navigation ? null === (n = this._navigation) || void 0 === n ? void 0 : n.prevEl : null;
                    this._navigation = k(e, {
                        nextEl: i || null,
                        prevEl: r || null
                    }), this.showNavigation = !(!0 !== R(e) || this._navigation && "boolean" != typeof this._navigation && this._navigation.prevEl !== (null === (l = this._prevElRef) || void 0 === l ? void 0 : l.nativeElement) && (null !== this._navigation.prevEl || null !== this._navigation.nextEl) && ("string" == typeof this._navigation.nextEl || "string" == typeof this._navigation.prevEl || "object" == typeof this._navigation.nextEl || "object" == typeof this._navigation.prevEl))
                }
                get navigation() {
                    return this._navigation
                }
                set pagination(e) {
                    var t;
                    const n = "boolean" != typeof this._pagination ? null === (t = this._pagination) || void 0 === t ? void 0 : t.el : null;
                    this._pagination = k(e, {
                        el: n || null
                    }), this.showPagination = _(e, this._pagination, this._paginationElRef)
                }
                get pagination() {
                    return this._pagination
                }
                set scrollbar(e) {
                    var t;
                    const n = "boolean" != typeof this._scrollbar ? null === (t = this._scrollbar) || void 0 === t ? void 0 : t.el : null;
                    this._scrollbar = k(e, {
                        el: n || null
                    }), this.showScrollbar = _(e, this._scrollbar, this._scrollbarElRef)
                }
                get scrollbar() {
                    return this._scrollbar
                }
                set virtual(e) {
                    this._virtual = k(e)
                }
                get virtual() {
                    return this._virtual
                }
                set index(e) {
                    this.setIndex(e)
                }
                set config(e) {
                    this.updateSwiper(e);
                    const {
                        params: t
                    } = P(e);
                    Object.assign(this, t)
                }
                set prevElRef(e) {
                    this._prevElRef = e, this._setElement(e, this.navigation, "navigation", "prevEl")
                }
                set nextElRef(e) {
                    this._nextElRef = e, this._setElement(e, this.navigation, "navigation", "nextEl")
                }
                set scrollbarElRef(e) {
                    this._scrollbarElRef = e, this._setElement(e, this.scrollbar, "scrollbar")
                }
                set paginationElRef(e) {
                    this._paginationElRef = e, this._setElement(e, this.pagination, "pagination")
                }
                get activeSlides() {
                    return this.virtual ? this._activeSlides : Object(S.a)(this.slides)
                }
                get zoomContainerClass() {
                    return "boolean" != typeof this.zoom ? this.zoom.containerClass : "swiper-zoom-container"
                }
                _setElement(e, t, n, l = "el") {
                    if (!e || !t) return;
                    if (t && e.nativeElement) {
                        if (t[l] === e.nativeElement) return;
                        t[l] = e.nativeElement
                    }
                    const i = {};
                    i[n] = !0, this.updateInitSwiper(i)
                }
                ngOnInit() {
                    const {
                        params: e
                    } = P(this);
                    Object.assign(this, e)
                }
                ngAfterViewInit() {
                    this.childrenSlidesInit(), this.initSwiper(), this._changeDetectorRef.detectChanges(), setTimeout(() => {
                        this.s_swiper.emit(this.swiperRef)
                    })
                }
                childrenSlidesInit() {
                    this.slidesChanges(this.slidesEl), this.slidesEl.changes.subscribe(this.slidesChanges)
                }
                get isSwiperActive() {
                    return this.swiperRef && !this.swiperRef.destroyed
                }
                initSwiper() {
                    const {
                        params: e
                    } = P(this);
                    Object.assign(this, e), this._ngZone.runOutsideAngular(() => {
                        e.init = !1, e.virtual || (e.observer = !0), e.onAny = (e, ...t) => {
                            const n = this["s_" + e];
                            n && n.emit(...t)
                        }, Object.assign(e.on, {
                            _containerClasses(e, t) {
                                this.containerClasses = t
                            },
                            _slideClasses: (e, t) => {
                                t.forEach(({
                                    slideEl: e,
                                    classNames: t
                                }, n) => {
                                    const l = parseInt(e.getAttribute("data-swiper-slide-index")) || n;
                                    if (this.virtual) {
                                        const e = this.slides.find(e => e.virtualIndex && e.virtualIndex === l);
                                        if (e) return void(e.classNames = t)
                                    }
                                    this.slides[l] && (this.slides[l].classNames = t)
                                }), this._changeDetectorRef.detectChanges()
                            }
                        });
                        const t = new T.a(e);
                        if (t.loopCreate = () => {}, t.loopDestroy = () => {}, e.loop && (t.loopedSlides = this.loopedSlides), t.virtual && t.params.virtual.enabled) {
                            t.virtual.slides = this.slides;
                            const e = {
                                cache: !1,
                                renderExternal: this.updateVirtualSlides,
                                renderExternalUpdate: !1
                            };
                            C(t.params.virtual, e), C(t.originalParams.virtual, e)
                        }
                        Object(s.isPlatformBrowser)(this._platformId) && (this.swiperRef = t.init(this.elementRef.nativeElement), this.swiperRef.virtual && this.swiperRef.params.virtual.enabled && this.swiperRef.virtual.update(!0), this._changeDetectorRef.detectChanges(), t.on("slideChange", () => {
                            this.indexChange.emit(this.swiperRef.realIndex)
                        }))
                    })
                }
                ngOnChanges(e) {
                    this.updateSwiper(e), this._changeDetectorRef.detectChanges()
                }
                updateInitSwiper(e) {
                    e && this.swiperRef && !this.swiperRef.destroyed && this._ngZone.runOutsideAngular(() => {
                        const {
                            pagination: t,
                            navigation: n,
                            scrollbar: l,
                            thumbs: i
                        } = this.swiperRef;
                        e.pagination && (this.pagination && "boolean" != typeof this.pagination && this.pagination.el && t && !t.el ? (this.updateParameter("pagination", this.pagination), t.init(), t.render(), t.update()) : (t.destroy(), t.el = null)), e.scrollbar && (this.scrollbar && "boolean" != typeof this.scrollbar && this.scrollbar.el && l && !l.el ? (this.updateParameter("scrollbar", this.scrollbar), l.init(), l.updateSize(), l.setTranslate()) : (l.destroy(), l.el = null)), e.navigation && (this.navigation && "boolean" != typeof this.navigation && this.navigation.prevEl && this.navigation.nextEl && n && !n.prevEl && !n.nextEl ? (this.updateParameter("navigation", this.navigation), n.init(), n.update()) : n.prevEl && n.nextEl && (n.destroy(), n.nextEl = null, n.prevEl = null)), e.thumbs && this.thumbs && this.thumbs.swiper && (this.updateParameter("thumbs", this.thumbs), i.init() && i.update(!0)), e.controller && this.controller && this.controller.control && (this.swiperRef.controller.control = this.controller.control), this.swiperRef.update()
                    })
                }
                updateSwiper(e) {
                    this._ngZone.runOutsideAngular(() => {
                        var t, n;
                        if (!e.config && e && this.swiperRef && !this.swiperRef.destroyed) {
                            for (const l in e) {
                                if (I.indexOf(l) >= 0) continue;
                                const i = null !== (n = null === (t = e[l]) || void 0 === t ? void 0 : t.currentValue) && void 0 !== n ? n : e[l];
                                this.updateParameter(l, i)
                            }
                            e.allowSlideNext && (this.swiperRef.allowSlideNext = this.allowSlideNext), e.allowSlidePrev && (this.swiperRef.allowSlidePrev = this.allowSlidePrev), e.direction && this.swiperRef.changeDirection(this.direction, !1), e.breakpoints && (this.loop && !this.loopedSlides && this.calcLoopedSlides(), this.swiperRef.currentBreakpoint = null, this.swiperRef.setBreakpoint()), (e.thumbs || e.controller) && this.updateInitSwiper(e), this.swiperRef.update()
                        }
                    })
                }
                calcLoopedSlides() {
                    if (!this.loop) return;
                    let e = this.slidesPerView;
                    if (this.breakpoints) {
                        const t = T.a.prototype.getBreakpoint(this.breakpoints),
                            n = t in this.breakpoints ? this.breakpoints[t] : void 0;
                        n && n.slidesPerView && (e = n.slidesPerView)
                    }
                    if ("auto" === e) return this.loopedSlides = this.slides.length, this.slides.length;
                    let t = this.loopedSlides || e;
                    return t += this.loopAdditionalSlides, t > this.slides.length && (t = this.slides.length), this.loopedSlides = t, t
                }
                updateParameter(e, t) {
                    if (!this.swiperRef || this.swiperRef.destroyed) return;
                    const n = e.replace(/^_/, ""),
                        l = E(this.swiperRef.params[n]);
                    if (Object.keys(this.swiperRef.modules).indexOf(n) >= 0) {
                        const e = this.swiperRef.modules[n].params[n];
                        l ? C(this.swiperRef.params[n], e) : this.swiperRef.params[n] = e
                    }
                    l && E(t) ? C(this.swiperRef.params[n], t) : this.swiperRef.params[n] = t
                }
                setIndex(e, t, n) {
                    this.isSwiperActive ? e !== this.swiperRef.activeIndex && this._ngZone.runOutsideAngular(() => {
                        this.loop ? this.swiperRef.slideToLoop(e, t, !n) : this.swiperRef.slideTo(e, t, !n)
                    }) : this.initialSlide = e
                }
                ngOnDestroy() {
                    this._ngZone.runOutsideAngular(() => {
                        var e;
                        null === (e = this.swiperRef) || void 0 === e || e.destroy(!0, !1)
                    })
                }
            }
            class O {}
            var L = l["\u0275crt"]({
                encapsulation: 2,
                styles: ["\n      swiper {\n        display: block;\n      }\n    "],
                data: {}
            });

            function M(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 2, null, null, null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, [
                    [1, 0],
                    ["prevElRef", 1]
                ], null, 0, "div", [
                    ["class", "swiper-button-prev"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, [
                    [2, 0],
                    ["nextElRef", 1]
                ], null, 0, "div", [
                    ["class", "swiper-button-next"]
                ], null, null, null, null, null))], null, null)
            }

            function N(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, [
                    [3, 0],
                    ["scrollbarElRef", 1]
                ], null, 0, "div", [
                    ["class", "swiper-scrollbar"]
                ], null, null, null, null, null))], null, null)
            }

            function F(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, [
                    [4, 0],
                    ["paginationElRef", 1]
                ], null, 0, "div", [
                    ["class", "swiper-pagination"]
                ], null, null, null, null, null))], null, null)
            }

            function j(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function B(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0, null, j))], null, null)
            }

            function U(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function V(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0, null, U))], null, null)
            }

            function G(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function K(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0, null, G))], null, null)
            }

            function H(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function q(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 4, "div", [], null, null, null, null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngClass: [0, "ngClass"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 2, null, H)), l["\u0275did"](3, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutletContext: [0, "ngTemplateOutletContext"],
                    ngTemplateOutlet: [1, "ngTemplateOutlet"]
                }, null), l["\u0275pod"](4, {
                    $implicit: 0
                })], (function(e, t) {
                    e(t, 1, 0, t.component.zoomContainerClass);
                    var n = e(t, 4, 0, t.parent.context.$implicit.slideData);
                    e(t, 3, 0, n, t.parent.context.$implicit.template)
                }), null)
            }

            function Y(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function $(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 3, null, null, null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 2, null, Y)), l["\u0275did"](2, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutletContext: [0, "ngTemplateOutletContext"],
                    ngTemplateOutlet: [1, "ngTemplateOutlet"]
                }, null), l["\u0275pod"](3, {
                    $implicit: 0
                }), (e()(), l["\u0275and"](0, null, null, 0))], (function(e, t) {
                    var n = e(t, 3, 0, t.parent.context.$implicit.slideData);
                    e(t, 2, 0, n, t.parent.context.$implicit.template)
                }), null)
            }

            function z(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 6, "div", [], [
                    [1, "data-swiper-slide-index", 0],
                    [8, "style", 2]
                ], null, null, null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngClass: [0, "ngClass"]
                }, null), l["\u0275did"](2, 16384, null, 0, s.NgSwitch, [], {
                    ngSwitch: [0, "ngSwitch"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, q)), l["\u0275did"](4, 278528, null, 0, s.NgSwitchCase, [l.ViewContainerRef, l.TemplateRef, s.NgSwitch], {
                    ngSwitchCase: [0, "ngSwitchCase"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, $)), l["\u0275did"](6, 16384, null, 0, s.NgSwitchDefault, [l.ViewContainerRef, l.TemplateRef, s.NgSwitch], null, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, (t.context.$implicit.class ? t.context.$implicit.class + " " : "") + n.slideClass + ("" !== t.parent.context.key ? " " + n.slideDuplicateClass : "")), e(t, 2, 0, t.context.$implicit.zoom), e(t, 4, 0, !0)
                }), (function(e, t) {
                    e(t, 0, 0, t.context.$implicit.virtualIndex ? t.context.$implicit.virtualIndex : t.context.$implicit.slideIndex, t.component.style)
                }))
            }

            function W(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](16777216, null, null, 2, null, z)), l["\u0275did"](1, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null), l["\u0275pid"](131072, s.AsyncPipe, [l.ChangeDetectorRef]), (e()(), l["\u0275and"](0, null, null, 0))], (function(e, t) {
                    e(t, 1, 0, l["\u0275unv"](t, 1, 0, l["\u0275nov"](t, 2).transform(t.context.loopSlides)))
                }), null)
            }

            function X(e) {
                return l["\u0275vid"](2, [l["\u0275qud"](671088640, 1, {
                    prevElRef: 0
                }), l["\u0275qud"](671088640, 2, {
                    nextElRef: 0
                }), l["\u0275qud"](671088640, 3, {
                    scrollbarElRef: 0
                }), l["\u0275qud"](671088640, 4, {
                    paginationElRef: 0
                }), l["\u0275ncd"](null, 0), (e()(), l["\u0275and"](16777216, null, null, 1, null, M)), l["\u0275did"](6, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, N)), l["\u0275did"](8, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, F)), l["\u0275did"](10, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](11, 0, null, null, 12, "div", [], [
                    [1, "id", 0]
                ], null, null, null, null)), l["\u0275did"](12, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngClass: [0, "ngClass"]
                }, null), l["\u0275ncd"](null, 1), (e()(), l["\u0275and"](16777216, null, null, 2, null, B)), l["\u0275did"](15, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutletContext: [0, "ngTemplateOutletContext"],
                    ngTemplateOutlet: [1, "ngTemplateOutlet"]
                }, null), l["\u0275pod"](16, {
                    loopSlides: 0,
                    key: 1
                }), (e()(), l["\u0275and"](16777216, null, null, 2, null, V)), l["\u0275did"](18, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutletContext: [0, "ngTemplateOutletContext"],
                    ngTemplateOutlet: [1, "ngTemplateOutlet"]
                }, null), l["\u0275pod"](19, {
                    loopSlides: 0,
                    key: 1
                }), (e()(), l["\u0275and"](16777216, null, null, 2, null, K)), l["\u0275did"](21, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutletContext: [0, "ngTemplateOutletContext"],
                    ngTemplateOutlet: [1, "ngTemplateOutlet"]
                }, null), l["\u0275pod"](22, {
                    loopSlides: 0,
                    key: 1
                }), l["\u0275ncd"](null, 2), l["\u0275ncd"](null, 3), (e()(), l["\u0275and"](0, [
                    ["slidesTemplate", 2]
                ], null, 0, null, W))], (function(e, t) {
                    var n = t.component;
                    e(t, 6, 0, n.navigation && n.showNavigation), e(t, 8, 0, n.scrollbar && n.showScrollbar), e(t, 10, 0, n.pagination && n.showPagination), e(t, 12, 0, n.wrapperClass);
                    var i = e(t, 16, 0, n.prependSlides, "prepend");
                    e(t, 15, 0, i, l["\u0275nov"](t, 25));
                    var r = e(t, 19, 0, n.activeSlides, "");
                    e(t, 18, 0, r, l["\u0275nov"](t, 25));
                    var s = e(t, 22, 0, n.appendSlides, "append");
                    e(t, 21, 0, s, l["\u0275nov"](t, 25))
                }), (function(e, t) {
                    e(t, 11, 0, t.component.id)
                }))
            }
            var Z = n("sF7c"),
                J = n("ARwZ"),
                Q = n("gIcY"),
                ee = n("0VuF"),
                te = n("Fzqc"),
                ne = n("dWZg"),
                le = n("qAlS"),
                ie = n("7LN8"),
                re = l["\u0275crt"]({
                    encapsulation: 2,
                    styles: ["cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:0}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:0}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}"],
                    data: {}
                });

            function se(e) {
                return l["\u0275vid"](2, [l["\u0275qud"](402653184, 1, {
                    _contentWrapper: 0
                }), (e()(), l["\u0275eld"](1, 0, [
                    [1, 0],
                    ["contentWrapper", 1]
                ], null, 1, "div", [
                    ["class", "cdk-virtual-scroll-content-wrapper"]
                ], null, null, null, null, null)), l["\u0275ncd"](null, 0), (e()(), l["\u0275eld"](3, 0, null, null, 0, "div", [
                    ["class", "cdk-virtual-scroll-spacer"]
                ], [
                    [4, "transform", null]
                ], null, null, null, null))], null, (function(e, t) {
                    e(t, 3, 0, t.component._totalContentSizeTransform)
                }))
            }
            var oe = l["\u0275crt"]({
                encapsulation: 2,
                styles: [],
                data: {}
            });

            function ae(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "div", [
                    ["class", "ui-virtualscroller-header ui-widget-header ui-corner-top"]
                ], null, null, null, null, null)), l["\u0275ncd"](null, 0)], null, null)
            }

            function ue(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, null, null, null, null, null, null, null))], null, null)
            }

            function ce(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 6, null, null, null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 5, "li", [], null, null, null, null, null)), l["\u0275did"](2, 278528, null, 0, s.NgStyle, [l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngStyle: [0, "ngStyle"]
                }, null), l["\u0275pod"](3, {
                    height: 0
                }), (e()(), l["\u0275and"](16777216, null, null, 2, null, ue)), l["\u0275did"](5, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutletContext: [0, "ngTemplateOutletContext"],
                    ngTemplateOutlet: [1, "ngTemplateOutlet"]
                }, null), l["\u0275pod"](6, {
                    $implicit: 0,
                    index: 1,
                    count: 2,
                    first: 3,
                    last: 4,
                    even: 5,
                    odd: 6
                })], (function(e, t) {
                    var n = t.component,
                        l = e(t, 3, 0, n.itemSize + "px");
                    e(t, 2, 0, l);
                    var i = e(t, 6, 0, t.context.$implicit, t.context.index, t.context.count, t.context.first, t.context.last, t.context.even, t.context.odd);
                    e(t, 5, 0, i, t.context.$implicit ? n.itemTemplate : n.loadingItemTemplate)
                }), null)
            }

            function de(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "div", [
                    ["class", "ui-virtualscroller-footer ui-widget-header ui-corner-bottom"]
                ], null, null, null, null, null)), l["\u0275ncd"](null, 1)], null, null)
            }

            function fe(e) {
                return l["\u0275vid"](0, [l["\u0275qud"](402653184, 1, {
                    viewPortViewChild: 0
                }), (e()(), l["\u0275eld"](1, 0, null, null, 17, "div", [], null, null, null, null, null)), l["\u0275did"](2, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275did"](3, 278528, null, 0, s.NgStyle, [l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngStyle: [0, "ngStyle"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, ae)), l["\u0275did"](5, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](6, 0, [
                    ["content", 1]
                ], null, 10, "div", [
                    ["class", "ui-virtualscroller-content ui-widget-content"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](7, 0, null, null, 9, "ul", [
                    ["class", "ui-virtualscroller-list"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](8, 0, null, null, 8, "cdk-virtual-scroll-viewport", [
                    ["class", "cdk-virtual-scroll-viewport"]
                ], [
                    [2, "cdk-virtual-scroll-orientation-horizontal", null],
                    [2, "cdk-virtual-scroll-orientation-vertical", null]
                ], [
                    [null, "scrolledIndexChange"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "scrolledIndexChange" === t && (l = !1 !== e.component.onScrollIndexChange(n) && l), l
                }), se, re)), l["\u0275prd"](6144, null, le.CdkScrollable, null, [le.CdkVirtualScrollViewport]), l["\u0275did"](10, 278528, null, 0, s.NgStyle, [l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngStyle: [0, "ngStyle"]
                }, null), l["\u0275pod"](11, {
                    height: 0
                }), l["\u0275did"](12, 540672, null, 0, le.CdkFixedSizeVirtualScroll, [], {
                    itemSize: [0, "itemSize"]
                }, null), l["\u0275prd"](1024, null, le.VIRTUAL_SCROLL_STRATEGY, le._fixedSizeVirtualScrollStrategyFactory, [le.CdkFixedSizeVirtualScroll]), l["\u0275did"](14, 245760, [
                    [1, 4],
                    ["viewport", 4]
                ], 0, le.CdkVirtualScrollViewport, [l.ElementRef, l.ChangeDetectorRef, l.NgZone, [2, le.VIRTUAL_SCROLL_STRATEGY],
                    [2, te.b], le.ScrollDispatcher
                ], null, {
                    scrolledIndexChange: "scrolledIndexChange"
                }), (e()(), l["\u0275and"](16777216, null, 0, 1, null, ce)), l["\u0275did"](16, 409600, null, 0, le.CdkVirtualForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers, [1, le.CdkVirtualScrollViewport], l.NgZone], {
                    cdkVirtualForOf: [0, "cdkVirtualForOf"],
                    cdkVirtualForTrackBy: [1, "cdkVirtualForTrackBy"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, de)), l["\u0275did"](18, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 2, 0, n.styleClass, "ui-virtualscroller ui-widget"), e(t, 3, 0, n.style), e(t, 5, 0, n.header);
                    var l = e(t, 11, 0, n.scrollHeight);
                    e(t, 10, 0, l), e(t, 12, 0, n.itemSize), e(t, 14, 0), e(t, 16, 0, n.value, n.trackBy), e(t, 18, 0, n.footer)
                }), (function(e, t) {
                    e(t, 8, 0, "horizontal" === l["\u0275nov"](t, 14).orientation, "horizontal" !== l["\u0275nov"](t, 14).orientation)
                }))
            }
            var pe = n("EjV3"),
                he = l["\u0275crt"]({
                    encapsulation: 2,
                    styles: [],
                    data: {}
                });

            function ge(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 4, "div", [
                    ["class", "ui-progress-spinner"]
                ], null, null, null, null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275did"](2, 278528, null, 0, s.NgStyle, [l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngStyle: [0, "ngStyle"]
                }, null), (e()(), l["\u0275eld"](3, 0, null, null, 1, ":svg:svg", [
                    ["class", "ui-progress-spinner-svg"],
                    ["viewBox", "25 25 50 50"]
                ], [
                    [4, "animation-duration", null]
                ], null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 0, ":svg:circle", [
                    ["class", "ui-progress-spinner-circle"],
                    ["cx", "50"],
                    ["cy", "50"],
                    ["r", "20"],
                    ["stroke-miterlimit", "10"]
                ], [
                    [1, "fill", 0],
                    [1, "stroke-width", 0]
                ], null, null, null, null))], (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, "ui-progress-spinner", n.styleClass), e(t, 2, 0, n.style)
                }), (function(e, t) {
                    var n = t.component;
                    e(t, 3, 0, n.animationDuration), e(t, 4, 0, n.fill, n.strokeWidth)
                }))
            }
            var me = n("N+K7"),
                ve = n("AytR"),
                ye = function() {
                    function e(e, t, n) {
                        this.httpService = e, this.route = t, this.router = n
                    }
                    return e.prototype.ngOnInit = function() {
                        this.domainUrl = ve.a.serviceUser.urlImg, this.getComments = this.commnts, this.getRoutes()
                    }, e.prototype.getRoutes = function() {
                        var e = this;
                        this.route.queryParams.subscribe((function(t) {
                            e.routes = t
                        })), console.log("routesroutes", this.routes)
                    }, e.prototype.onShowMore = function() {
                        var e = "doctors/comments/" + this.route.params.value.doctorName + "/" + localStorage.getItem("userId");
                        this.router.navigate([e]), this.httpService.setHeader("Patient Stories")
                    }, e
                }(),
                be = n("ZYCi"),
                Te = l["\u0275crt"]({
                    encapsulation: 0,
                    styles: [
                        [".f-10[_ngcontent-%COMP%]{font-size:10px}.f-12[_ngcontent-%COMP%]{font-size:12px}.f-14[_ngcontent-%COMP%]{font-size:14px}.f-16[_ngcontent-%COMP%]{font-size:12px}.color-grey[_ngcontent-%COMP%]{color:#948e8e}.commntUsrImg[_ngcontent-%COMP%]{border-radius:50%;height:43px;width:43px;-o-object-fit:contain;object-fit:contain}.cmmntProfilePic[_ngcontent-%COMP%]{height:13px;padding-left:2px}.ratingBox[_ngcontent-%COMP%]{border:1px solid #90ce5f;color:#fff;height:16px;padding-left:7px;border-radius:6px;padding-right:7px;background-color:#90ce5f}.cursor[_ngcontent-%COMP%]{cursor:pointer}.mob-border-bottom[_ngcontent-%COMP%]{border-bottom:1px solid #e5e5e5!important}.readMore[_ngcontent-%COMP%]{color:#0176c4;cursor:pointer}"]
                    ],
                    data: {}
                });

            function we(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "u", [
                    ["class", "f-10 readMore cursor"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.onShowMore() && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, ["Show More"]))], null, null)
            }

            function Se(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "img", [
                    ["alt", ""],
                    ["class", "commntUsrImg"]
                ], [
                    [8, "src", 4]
                ], null, null, null, null))], null, (function(e, t) {
                    e(t, 0, 0, t.component.domainUrl + t.parent.context.$implicit.patientThumbnailImageUrl)
                }))
            }

            function Ee(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "img", [
                    ["alt", ""],
                    ["class", "commntUsrImg"],
                    ["src", "assets/default/images/patient-male.png"]
                ], null, null, null, null, null))], null, null)
            }

            function _e(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 2, "div", [
                    ["class", "pr-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 1, "div", [
                    ["class", "f-10 ratingBox"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](2, null, [" ", " "]))], null, (function(e, t) {
                    e(t, 2, 0, t.parent.context.$implicit.doctorRating)
                }))
            }

            function Ce(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "img", [
                    ["class", "cmmntProfilePic"],
                    ["src", "assets/doctor-article/star_1.svg"]
                ], null, null, null, null, null))], null, null)
            }

            function Re(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "img", [
                    ["class", "cmmntProfilePic"],
                    ["src", "assets/doctor-article/star_1 (1).svg"]
                ], null, null, null, null, null))], null, null)
            }

            function Ie(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "div", [
                    ["class", "pt-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 0, "img", [
                    ["alt", ""],
                    ["class", "img-fluid"],
                    ["style", "max-height: 300px;"]
                ], [
                    [8, "src", 4]
                ], null, null, null, null))], null, (function(e, t) {
                    e(t, 1, 0, t.component.domainUrl + t.context.$implicit.imageUrl)
                }))
            }

            function ke(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "mob-border-bottom row"]
                ], null, null, null, null, null))], null, null)
            }

            function Ae(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 28, "div", [
                    ["class", "mt-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 20, "div", [
                    ["class", "d-flex flex-row justify-content-between"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 11, "div", [
                    ["class", "d-flex flex-row"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Se)), l["\u0275did"](4, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Ee)), l["\u0275did"](6, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](7, 0, null, null, 6, "div", [
                    ["class", "d-flex"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](8, 0, null, null, 5, "div", [
                    ["class", "d-flex flex-column pl-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](9, 0, null, null, 1, "b", [
                    ["class", "f-14"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](10, null, ["", ""])), (e()(), l["\u0275eld"](11, 0, null, null, 2, "span", [
                    ["class", "f-12 color-grey"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](12, null, ["", ""])), l["\u0275ppd"](13, 2), (e()(), l["\u0275eld"](14, 0, null, null, 7, "div", [
                    ["class", "d-flex"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, _e)), l["\u0275did"](16, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](17, 0, null, null, 4, "div", [
                    ["class", "d-flex"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Ce)), l["\u0275did"](19, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Re)), l["\u0275did"](21, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null), (e()(), l["\u0275eld"](22, 0, null, null, 4, "div", [
                    ["class", "pt-2 pb-3 d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](23, 0, null, null, 1, "div", [
                    ["class", "f-14"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](24, null, [" ", " "])), (e()(), l["\u0275and"](16777216, null, null, 1, null, Ie)), l["\u0275did"](26, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, ke)), l["\u0275did"](28, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 4, 0, t.context.$implicit.patientThumbnailImageUrl), e(t, 6, 0, !t.context.$implicit.patientThumbnailImageUrl), e(t, 16, 0, t.context.$implicit.doctorRating), e(t, 19, 0, n.httpService.getIterratedArray(t.context.$implicit.doctorRating)), e(t, 21, 0, n.httpService.getIterratedArray(5 - t.context.$implicit.doctorRating)), e(t, 26, 0, t.context.$implicit.feedbackImages), e(t, 28, 0, !(n.getComments.entities.length - 1 == t.context.index))
                }), (function(e, t) {
                    e(t, 10, 0, null == t.context.$implicit ? null : t.context.$implicit.patientFullName);
                    var n = l["\u0275unv"](t, 12, 0, e(t, 13, 0, l["\u0275nov"](t.parent, 0), null == t.context.$implicit ? null : t.context.$implicit.feedbackCreationDate, "MMM d, y, h:mm a"));
                    e(t, 12, 0, n), e(t, 24, 0, null == t.context.$implicit ? null : t.context.$implicit.feedbackMessage)
                }))
            }

            function Pe(e) {
                return l["\u0275vid"](0, [l["\u0275pid"](0, s.DatePipe, [l.LOCALE_ID]), (e()(), l["\u0275eld"](1, 0, null, null, 8, "section", [], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 7, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 4, "div", [
                    ["class", "d-flex justify-content-between"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 1, "b", [], null, null, null, null, null)), (e()(), l["\u0275ted"](5, null, ["Patient Stories(", ")"])), (e()(), l["\u0275and"](16777216, null, null, 1, null, we)), l["\u0275did"](7, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Ae)), l["\u0275did"](9, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 7, 0, (null == n.getComments ? null : n.getComments.totalCount) > 3), e(t, 9, 0, null == n.getComments ? null : n.getComments.entities)
                }), (function(e, t) {
                    var n = t.component;
                    e(t, 5, 0, null == n.getComments ? null : n.getComments.totalCount)
                }))
            }
            var xe = n("81p8"),
                De = n("j8B3"),
                Oe = n("PilI"),
                Le = n("E5AT"),
                Me = n("A7o+"),
                Ne = n("jvCn"),
                Fe = n("miAi"),
                je = n("mrSG"),
                Be = n("g0Ox"),
                Ue = n("Xchd"),
                Ve = n("2Rin"),
                Ge = n("ulZh"),
                Ke = function() {
                    function e(e) {
                        this.autoload = e, this.hls = new Ge, this.loaded = !1
                    }
                    return e.prototype.create = function(e) {
                        return this.hls.attachMedia(e.videoElement), new u(e.videoElement, e.options)
                    }, e.prototype.updateSource = function(e) {
                        this.autoload ? this.load(e.source.sources[0].src) : e.videoElement.poster = e.source.poster
                    }, e.prototype.destroy = function(e) {
                        e.plyr.destroy(), this.hls.detachMedia(), this.hls.destroy()
                    }, e.prototype.load = function(e) {
                        if (Ge.isSupported()) this.loaded || (this.loaded = !0, this.hls.loadSource(e));
                        else {
                            var t = document.getElementsByTagName("video");
                            t[0].src = e, t[0].addEventListener("loadedmetadata", (function() {
                                t[0].play()
                            })), t[1] && (t[1].src = e)
                        }
                    }, e
                }(),
                He = n("wd/R");
            T.a.use([Be.a, Ue.a]);
            var qe = function() {
                    function e(e, t, n, l, i, r, s, o, a) {
                        this.translate = e, this.route = t, this.httpService = n, this.modalService = l, this.router = i, this.util = r, this.title = s, this.meta = o, this.spinner = a, this.doctorProfile = {}, this.slotType = {}, this.cnteBtnMob = !1, this.showMoreGal = 3, this.showMoreClicnicInf = 1, this.doctorId = "", this.serviceCount = 2, this.isFromInstant = !1, this.slotsAvailable = !1, this.isFirstAddressSelected = !0, this.sources = [], this.options = {
                            captions: {
                                active: !0,
                                update: !0,
                                language: "en"
                            }
                        }, this.hlsjsDriver1 = new Ke(!0), this.paytmAuthId = "", this.paytmOpenId = "", this.edit = !1, this.isPaytm = !1, this.isDisplayLoader = !1, this.docsToShow = [], this.allAddresses = [], this.paramIsconsult = !1, this.isInconsultLoad = !1, this.isVideoconsult = !1, this.isTeleconsult = !1, this.slideDateIndex = 0, this.disableBook = !1, this.lastCallClinicEventTime = 0, this.lastDirectionEventTime = 0, this.screenVisible = !1, this.isBookingPopup = !1, this.isDateSwipSet = !1, this.isDataSet = !1, this.slideIndex = 0, this.ua = this.getAppcontainer(), this.ua && (this.isPaytm = !0)
                    }
                    return e.prototype.ngOnInit = function() {
                        var e = this;
                        this.scrollTop(), this.slotType.type = "morning", this.onGetProfile(), this.getRoutes();
                        var t = this.route.snapshot.params.doctorName;
                        this.route.queryParams.subscribe((function(n) {
                            e.paramsTime = n.time, e.util.saveUTMParameters(n), console.info(n), e.doctorId = n.doctor_id ? n.doctor_id : t, n.instantConsultation && (e.isFromInstant = !0), n.time && (e.date = n.time.split("T")[0], e.time = n.time.split("T")[1].substr(0, 12)), n.addressId && (e.selectedAddress = n.addressId), n.isInconsult && (e.paramIsconsult = !0), n.consultType && (e.selectConsult = n.consultType, e.consultType = n.consultType), n.activeIndex && (e.slideDateIndex = parseInt(n.activeIndex))
                        })), this.route.params.value.doctorName && window.gtag("config", window.gtagAppId, {
                            page_title: this.route.params.value.doctorName,
                            page_path: "/doctors/" + this.route.params.value.doctorName
                        })
                    }, e.prototype.logAnalytics = function(e, t) {
                        try {
                            window.gtag("event", e, {
                                event_category: "bookAppointment",
                                event_label: this.route.params.value.doctorName + " : " + t
                            })
                        } catch (n) {
                            console.log(n)
                        }
                    }, e.prototype.getVideoStuff = function() {
                        var e = this;
                        setTimeout((function() {
                            e.sources[0] = {
                                type: "video",
                                src: e.getInfoValue("intro", !0)
                            }, setTimeout((function() {
                                e.play(), setTimeout((function() {
                                    e.play()
                                }), 3e3)
                            }), 3e3)
                        }), 1e3)
                    }, e.prototype.languageChanged = function(e, t) {
                        setTimeout((function() {
                            return e.hls.subtitleTrack = t.currentTrack
                        }), 50)
                    }, e.prototype.videoThing = function() {}, e.prototype.played = function() {
                        this.hlsjsDriver2.load(this.sources[0].src)
                    }, e.prototype.play = function() {
                        this.plyr1 && this.plyr1.play() && (this.plyr1.play(), this.plyr1.muted = !0, this.plyr1.loop = !0)
                    }, e.prototype.play2 = function() {
                        this.plyr2.play(), this.plyr2.muted = !1
                    }, e.prototype.volume = function(e) {
                        console.log("event", e)
                    }, e.prototype.getConsultType = function(e) {
                        if (!e) return null;
                        switch (e.toLowerCase()) {
                            case "inconsult":
                                return "inconsult";
                            case "teleconsult":
                                return "teleConsult";
                            case "videoconsult":
                                return "videoConsult"
                        }
                    }, e.prototype.swiper = function() {
                        var e = this;
                        if (!this.isDateSwipSet || "inconsult" == this.consultType)
                            if (this.isDateSwipSet = !0, this.swiperView && this.swiperView.destroy(!0, !0), this.swiperView = new T.a("#dateswiper", {
                                    slidesPerView: 3,
                                    spaceBetween: 0,
                                    slidesPerGroup: 3,
                                    loop: !1,
                                    loopFillGroupWithBlank: !0,
                                    pagination: {
                                        el: ".swiper-pagination",
                                        clickable: !0
                                    },
                                    navigation: {
                                        nextEl: ".swiper-button-next",
                                        prevEl: ".swiper-button-prev"
                                    }
                                }), this.isDataSet)
                                for (var t = this.getConsultType(this.consultType), n = 0; n < this.scrollSlots[t].length; n++) this.seletedSlotScroll.date === this.scrollSlots[t][n].date && this.swiperView.slideTo(3 * (Math.ceil((n + 1) / 3) - 1));
                            else {
                                this.isDataSet = !0;
                                var l = this.route.queryParams._value;
                                l.time && (this.consultType = l.consultType || this.consultType, this.date = l.time.split("T")[0], this.time = l.time.split("T")[1].substr(0, 12), console.info("activeIndex", this.swiperView.activeIndex), setTimeout((function() {
                                    if (e.scrollSlots)
                                        for (var t = e.getConsultType(e.consultType), n = 0; n < e.scrollSlots[t].length; n++) e.date === e.scrollSlots[t][n].date && (e.seletedScrollSlot(e.scrollSlots[t][n]), e.selectDate(), e.selectTime(), e.swiperView.slideTo(3 * (Math.ceil((n + 1) / 3) - 1)))
                                }), 500))
                            }
                    }, e.prototype.swipNext = function() {
                        if (!(this.slideIndex >= this.serviceDetails.plans.length / 3.5 - 1)) {
                            var e = new T.a("#swip")[0];
                            this.slideIndex = this.slideIndex < 0 ? 1 : this.slideIndex + 1, e.slideTo(this.slideIndex), this.util.increaseInstantConsultTime()
                        }
                    }, e.prototype.swipPrev = function() {
                        var e = new T.a("#swip")[0];
                        this.slideIndex -= 1, e.slideTo(this.slideIndex < 0 ? 0 : this.slideIndex), this.util.increaseInstantConsultTime()
                    }, e.prototype.viewMore = function(e, t) {
                        document.getElementById(e).removeAttribute("style"), document.getElementById(t).style.display = "none", document.getElementById(e).classList.remove("hidelist"), this.util.increaseInstantConsultTime()
                    }, e.prototype.addTrackingEvent = function() {
                        this.doctorId = this.doctorProfile.userName, this.route.snapshot && this.route.snapshot.queryParams && this.route.snapshot.queryParams.doc_web_user_id && !this.date && !this.time ? (sessionStorage.setItem("doc_web_user_id", JSON.stringify(this.route.snapshot.queryParams.doc_web_user_id)), this.util.loginUser()) : this.route.snapshot.queryParams.doc_web_user_id || this.date || this.time || sessionStorage.removeItem("doc_web_user_id"), this.route.snapshot && this.route.snapshot.queryParams && this.route.snapshot.queryParams.utm_source ? this.util.saveEvent("Main Page Direct", "Main Page Direct View", "Main Page", {
                            self_url: window.location.href,
                            doctor_id: this.doctorId
                        }) : this.util.saveEvent("Main Page Direct", "Main Page Visited", "General", {
                            self_url: window.location.href,
                            doctor_id: this.doctorId
                        })
                    }, e.prototype.onGetProfile = function() {
                        var e = this;
                        this.spinner.show(), this.httpService.fetchDoctorDetails(this.route.params.value.doctorName).subscribe((function(t) {
                            if (console.log("res of fetchDoctorDetails", t.body[0]), e.doctorProfile = t.body[0], e.doctorProfile.appointmentTypes.inconsult = {
                                    name: "In-Clinic",
                                    key: "inconsult",
                                    fees: "Pay at Clinic"
                                }, e.doctorProfile.profile && e.doctorProfile.profile.sefUrlV2 && (e.shareUrl = e.doctorProfile.profile.sefUrlV2), e.addTrackingEvent(), localStorage.setItem("userId", e.doctorProfile.userName), e.doctorGoogleRating(e.doctorProfile.userName), e.slotType.docName = e.doctorProfile.name, e.slotType.docInfo = e.doctorProfile.specialityName, e.slotType.location = e.doctorProfile.address.city || "India", e.slotType.docImg = {
                                    gender: e.doctorProfile.gender,
                                    url: e.doctorProfile.imageUrl
                                }, localStorage.setItem("time", JSON.stringify(e.slotType)), e.doctorProfile.profile && e.doctorProfile.profile.sefUrlV2 && e.doctorProfile.profile.sefUrlV2.toString().search("getmy.clinic") > -1) {
                                if (!e.time && !e.date) {
                                    var n = e.router.url.split("?")[0];
                                    e.router.navigate([n], {
                                        queryParams: {
                                            param: "booking"
                                        }
                                    })
                                }
                            } else e.getDrFeedBack(3), e.services();
                            e.getClosestAddresses(), console.log("getInfoValue('intro', true)", e.getInfoValue("intro", !0)), e.getVideoStuff(), e.title.setTitle("" + e.doctorProfile.name.name), e.meta.updateTag({
                                name: "description",
                                content: e.doctorProfile.name.name + ", Book your consultation online, Download Remedo to see your prescription"
                            })
                        }), (function(t) {
                            e.screenVisible = !0, e.spinner.hide(), t && t.status && 404 == t.status && e.router.navigate([""]), console.log("err of fetchDoctorDetails", t)
                        }))
                    }, e.prototype.selectConsultType = function() {
                        this.consultType = this.selectConsult ? "inconsult" == this.selectConsult && this.doctorProfile.appointmentTypes.inconsult ? "inconsult" : "inconsult" == this.selectConsult && this.doctorProfile.appointmentTypes.videoconsult || "videoconsult" == this.selectConsult && this.doctorProfile.appointmentTypes.videoconsult ? "videoconsult" : "videoconsult" == this.selectConsult && this.doctorProfile.appointmentTypes.inconsult ? "inconsult" : "teleconsult" : this.doctorProfile.appointmentTypes.inconsult ? "inconsult" : this.doctorProfile.appointmentTypes.videoconsult ? "videoconsult" : "teleconsult"
                    }, e.prototype.handleBack = function() {
                        if (this.route.params.value.id) {
                            var e = "doctors/" + this.route.params.value.doctorName;
                            this.isFromInstant ? this.router.navigate([e], {
                                queryParams: {
                                    instantConsultation: "yes"
                                }
                            }) : this.router.navigate([e])
                        } else this.router.navigate([e = "doctors/instant-consultation"])
                    }, e.prototype.getRoutes = function() {
                        var e = this;
                        this.route.queryParams.subscribe((function(t) {
                            e.paramRoutes = t, console.log("change detection routes", e.paramRoutes)
                        }))
                    }, e.prototype.getInClinicSlots = function() {
                        var e = this;
                        this.isInconsultLoad = !0, this.inClinicSlots = this.httpService.getScrollSlots(this.doctorProfile.userName, !0, this.selectedAddress).subscribe((function(t) {
                            e.isInconsultLoad = !1, e.inClinicSlots = t.inconsult, e.isFirstAddressSelected || (e.scrollSlots.inconsult = e.inClinicSlots), e.getInconsultSlots(e.selectedAddress)
                        }), (function(t) {
                            e.isInconsultLoad = !1, console.log("err of getInClinicSlots", t)
                        }))
                    }, e.prototype.selectAddress = function(e) {
                        var t = this;
                        this.isFirstAddressSelected = !1, this.addressDetails = e, this.selectedAddress = e.mappingId, setTimeout((function() {
                            t.swiper()
                        }), 1e3), this.getInClinicSlots()
                    }, e.prototype.scrollerSlots = function() {
                        var e = this;
                        this.spinner.show(), this.httpService.getScrollSlots(this.doctorProfile.userName, !1, null).subscribe((function(t) {
                            e.spinner.hide(), e.inClinicSlots && e.inClinicSlots.length > 0 && (t.inconsult = e.inClinicSlots), e.scrollSlots = t, e.doctorProfile.appointmentTypes.teleconsult || (e.scrollSlots.teleConsult = []), e.doctorProfile.appointmentTypes.videoconsult || (e.scrollSlots.videoConsult = []), console.info("this.scrollSlots=======", e.scrollSlots), e.slotsAvailable = e.scrollSlots.videoConsult.length || e.scrollSlots.inconsult.length || e.scrollSlots.teleConsult.length, console.info("this.consultType1212", e.consultType, e.seletedSlotScroll), e.setSwipData(), e.isTeleconsult = !!(e.doctorProfile.appointmentTypes && e.doctorProfile.appointmentTypes.teleconsult && e.scrollSlots && e.scrollSlots.teleConsult && e.scrollSlots.teleConsult.length > 0), e.isVideoconsult = !!(e.doctorProfile.appointmentTypes && e.doctorProfile.appointmentTypes.videoconsult && e.scrollSlots && e.scrollSlots.videoConsult && e.scrollSlots.videoConsult.length > 0), "inconsult" == e.consultType && 0 == e.allAddresses.length ? e.isVideoconsult ? e.consultType = "videoconsult" : e.isTeleconsult && (e.consultType = "teleconsult") : "videoconsult" != e.consultType || e.isVideoconsult ? "teleconsult" != e.consultType || e.isTeleconsult || (e.allAddresses.length > 0 ? e.consultType = "inconsult" : e.isVideoconsult && (e.consultType = "videoconsult")) : e.allAddresses.length > 0 ? e.consultType = "inconsult" : e.isTeleconsult && (e.consultType = "teleconsult")
                        }), (function(t) {
                            e.spinner.hide(), console.log("err of getScrollSlots", t)
                        }))
                    }, e.prototype.setSwipData = function() {
                        this.spinner.hide(), this.seletedSlotScroll || ("teleconsult" === this.consultType ? this.seletedSlotScroll = this.scrollSlots.teleConsult[0] : "inconsult" === this.consultType ? this.seletedSlotScroll = this.scrollSlots.inconsult[0] : this.scrollSlots.videoConsult.length > 0 ? (this.consultType = "videoconsult", this.seletedSlotScroll = this.scrollSlots.videoConsult[0]) : (this.consultType = "teleconsult", this.seletedSlotScroll = this.scrollSlots.teleConsult[0])), console.info("this.consultType1212", this.consultType, this.seletedSlotScroll), this.spinner.hide(), this.getSlots(), console.log("scrollSlots", this.scrollSlots)
                    }, e.prototype.getAddresses = function() {
                        var e = this;
                        this.httpService.getAddresses(this.doctorProfile.userName).subscribe((function(t) {
                            if (e.allAddresses = t.addresses, e.allAddresses.length > 0) {
                                if (e.paramIsconsult) {
                                    var n = e.allAddresses.filter((function(t) {
                                        return t.mappingId == e.selectedAddress
                                    }));
                                    e.addressDetails = n[0]
                                } else {
                                    e.selectConsultType();
                                    var l = e;
                                    (l.allClosestAddresses || []).forEach((function(e) {
                                        (l.allAddresses || []).forEach((function(t) {
                                            !e.closestSlot || l.addressDetails || l.selectedAddress || e.address != t.address || (l.addressDetails = t, l.selectedAddress = t.mappingId, l.closestDetails = t)
                                        }))
                                    })), l.addressDetails || l.selectedAddress || (e.addressDetails = e.allAddresses[0], e.selectedAddress = e.allAddresses[0].mappingId)
                                }
                                e.getInClinicSlots()
                            } else e.selectType(), e.scrollerSlots()
                        }), (function(t) {
                            e.spinner.hide(), console.log("err of getAddresses", t)
                        }))
                    }, e.prototype.getClosestAddresses = function() {
                        var e = this;
                        this.httpService.getClossestAddresses(this.doctorProfile.userName).subscribe((function(t) {
                            e.allClosestAddresses = t.addresses, e.getAddresses()
                        }), (function(t) {
                            e.getAddresses(), console.log("err of getAddresses", t)
                        }))
                    }, e.prototype.selectType = function() {
                        this.consultType = this.selectConsult ? "inconsult" == this.selectConsult && this.doctorProfile.appointmentTypes.videoconsult || "videoconsult" == this.selectConsult && this.doctorProfile.appointmentTypes.videoconsult ? "videoconsult" : "teleconsult" : this.doctorProfile.appointmentTypes.videoconsult ? "videoconsult" : "teleconsult"
                    }, e.prototype.slotFormat = function(e) {
                        return window.moment().format("YYYY-MM-DD") == e ? "Today" : window.moment().add(1, "day").format("YYYY-MM-DD") == e ? "Tomorrow" : window.moment(e).format("ddd, DD MMM")
                    }, e.prototype.seletedScrollSlot = function(e) {
                        this.slotType.time = null, this.isFirstAddressSelected = !1, this.bookedDate = e.date, this.seletedSlotScroll = e, "inconsult" == this.consultType ? this.getInconsultSlots(this.selectedAddress) : this.getSlots(), console.log("seletedScrollSlot", e), this.util.increaseInstantConsultTime()
                    }, e.prototype.selectTime = function() {
                        for (var e = 0; e < this.slots.userSlots[this.consultType].timeslots.length; e++) {
                            var t = this.slots.userSlots[this.consultType].timeslots[e];
                            if (console.info(t.startTime, this.time, t.available), t.startTime == this.time && t.available) {
                                this.selectSetTime((this.time || "").substr(0, 2) < 17 ? "morning" : "evening", t);
                                break
                            }
                        }
                    }, e.prototype.getSlots = function() {
                        var e = this,
                            t = function() {
                                if (e.slots && e.slots.userSlots && e.slots.userSlots[e.consultType] && e.slots.userSlots[e.consultType].timeslots)
                                    for (var t = 0; t < e.slots.userSlots[e.consultType].timeslots.length; t++) {
                                        var n = e.slots.userSlots[e.consultType].timeslots[t];
                                        if (console.info(n.startTime, e.time, n.available), n.startTime == e.time && n.available) {
                                            e.selectSetTime((e.time || "").substr(0, 2) < 17 ? "morning" : "evening", n);
                                            break
                                        }
                                    }
                                e.time = null
                            };
                        if (this.seletedSlotScroll && this.seletedSlotScroll.date && this.isFirstAddressSelected || this.seletedSlotScroll && this.seletedSlotScroll.date && !this.paramIsconsult && this.isFirstAddressSelected || "inconsult" == this.consultType && this.paramIsconsult && this.isFirstAddressSelected || this.isFirstAddressSelected || this.seletedSlotScroll && this.seletedSlotScroll.date && "inconsult" !== this.consultType || "inconsult" == this.consultType && this.slots.userSlots.inconsult && this.slots.userSlots.inconsult.timeslots && 0 == this.slots.userSlots.inconsult.timeslots.length) {
                            var n = void 0;
                            this.seletedSlotScroll && this.seletedSlotScroll.date ? n = this.seletedSlotScroll.date : (n = He().format("YYYY-MM-DD"), this.seletedSlotScroll = {}, this.seletedSlotScroll.date = He().format("YYYY-MM-DD")), console.log("datteeee", n), this.httpService.getTimeSlotsByDate(this.doctorProfile.userName, n, null).subscribe((function(n) {
                                e.screenVisible = !0, e.slots = n.body, e.setSlotsData(), t(), e.setDate(), e.swiper()
                            }), (function(t) {
                                e.screenVisible = !0, console.log("err of getSlots", t)
                            }))
                        } else this.screenVisible = !0, this.setSlotsData(), t()
                    }, e.prototype.setSlotsData = function() {
                        this.slots.userSlots.inconsult = this.inConsultSlots && this.inConsultSlots.userSlots && this.inConsultSlots.userSlots.inconsult ? this.inConsultSlots.userSlots.inconsult : {}, this.slots.userSlots.teleconsult && (this.slots.userSlots.teleconsult.timeslots = this.slots.userSlots.teleconsult.timeslots.filter((function(e) {
                            return 1 == e.available
                        }))), this.slots.userSlots.videoconsult && (this.slots.userSlots.videoconsult.timeslots = this.slots.userSlots.videoconsult.timeslots.filter((function(e) {
                            return 1 == e.available
                        }))), this.slots && this.slots.userSlots && this.slots.userSlots.inconsult && this.slots.userSlots.inconsult.timeslots && (this.slots.userSlots.inconsult.timeslots = this.slots.userSlots.inconsult.timeslots.filter((function(e) {
                            return 1 == e.available
                        }))), this.feeUpdate(), this.slotType.fee = this.fee, console.log("res of getSlots", this.slots), this.slotEveMorShowLogic(), !this.doctorProfile.appointmentTypes.teleconsult && this.slots.userSlots.teleconsult && this.slots.userSlots.teleconsult.timeslots && (this.slots.userSlots.teleconsult.timeslots = []), !this.doctorProfile.appointmentTypes.videoconsult && this.slots.userSlots.videoconsult && this.slots.userSlots.videoconsult.timeslots && (this.slots.userSlots.videoconsult.timeslots = [])
                    }, e.prototype.feeUpdate = function() {
                        this.fee = this.doctorProfile.appointmentTypes && this.doctorProfile.appointmentTypes[this.consultType] && this.doctorProfile.appointmentTypes[this.consultType].fee || this.doctorProfile.appointmentTypes && this.doctorProfile.appointmentTypes[this.consultType] && this.doctorProfile.appointmentTypes[this.consultType].fee ? this.doctorProfile.appointmentTypes[this.consultType].fee / 100 : ""
                    }, e.prototype.getInconsultSlots = function(e) {
                        var t, n = this;
                        t = this.seletedSlotScroll && this.seletedSlotScroll.date ? this.seletedSlotScroll.date : this.date && this.paramIsconsult || this.date ? He(this.date).format("YYYY-MM-DD") : He().format("YYYY-MM-DD"), this.isInconsultLoad = !0, this.httpService.getTimeSlotsByDate(this.doctorProfile.userName, t, e).subscribe((function(e) {
                            n.isInconsultLoad = !1, n.spinner.hide(), n.inConsultSlots = e.body, n.isFirstAddressSelected ? n.scrollerSlots() : n.setSwipData()
                        }), (function(e) {
                            n.isInconsultLoad = !1, console.log("err of getSlots", e)
                        }))
                    }, e.prototype.setDate = function() {
                        if (this.date)
                            for (var e = "videoconsult" == this.consultType ? "videoConsult" : "inconsult" == this.consultType ? "inconsult" : "teleConsult", t = 0; t < this.scrollSlots[e].length; t++) {
                                var n = this.scrollSlots[e][t];
                                if (this.date === n.date) {
                                    this.seletedSlotScroll = n, this.date = null;
                                    break
                                }
                            }
                    }, e.prototype.selectDate = function() {
                        for (var e = this.getConsultType(this.consultType), t = 0; t < this.scrollSlots[e].length; t++) {
                            var n = this.scrollSlots[e][t];
                            if (this.date === n.date) {
                                this.seletedSlotScroll = n, this.date = null;
                                break
                            }
                        }
                    }, e.prototype.callClinic = function(e) {
                        location.href = "tel:" + e;
                        var t = (new Date).getTime();
                        t - this.lastCallClinicEventTime > 5e3 && (this.lastCallClinicEventTime = t, this.util.saveEvent("Call Clinic Started", "Call Clinic button clicked", "Call", {
                            clinic_number: e,
                            doctor_id: this.doctorId,
                            self_url: window.location.href,
                            screen_name: "home"
                        }))
                    }, e.prototype.slotEveMorShowLogic = function() {
                        this.slots && this.slots.userSlots && this.slots.userSlots[this.consultType] && this.slots.userSlots[this.consultType].timeslots && (this.mornSlotAv = this.slots.userSlots[this.consultType].timeslots.find((function(e) {
                            return e.startTime[0] + "" + e.startTime[1] > "00" && e.startTime[0] + "" + e.startTime[1] < "17"
                        })), this.evenSlotAv = this.slots.userSlots[this.consultType].timeslots.find((function(e) {
                            return e.startTime[0] + "" + e.startTime[1] >= "17"
                        })), console.log("this.mornSlotAv", this.mornSlotAv, this.evenSlotAv))
                    }, e.prototype.extractTime = function(e) {
                        return window.moment(e, "HH:mm:ss").format("hh:mm A")
                    }, e.prototype.arrayToString = function(e) {
                        return (e = e || []).map((function(t, n) {
                            e[n] = t.trim()
                        })), e.join(", ")
                    }, e.prototype.getInfoValue = function(e, t) {
                        return t ? this.doctorProfile.profile ? this.doctorProfile.profile.info[e] : void 0 : this.doctorProfile.profile && (this.doctorProfile.profile.info[e] || {})[e] || []
                    }, e.prototype.onSwiper = function(e) {
                        console.log(e)
                    }, e.prototype.onSlideChange = function() {
                        console.log("slide change")
                    }, e.prototype.abc = function(e) {
                        console.log("value", e)
                    }, e.prototype.getAppcontainer = function() {
                        var e = window.navigator.userAgent;
                        return /AppContainer/i.test(e)
                    }, e.prototype.ready = function(e) {
                        JSBridge ? e && e() : document.addEventListener("JSBridgeReady", e, !1)
                    }, e.prototype.completeLoginFlowForPaytm = function() {
                        var e = this,
                            t = ve.a.paytmClientId;
                        this.ready((function() {
                            var e = this;
                            JSBridge.call("paytmFetchAuthCode", {
                                clientId: t
                            }, (function(t) {
                                return je.__awaiter(e, void 0, void 0, (function() {
                                    return je.__generator(this, (function(e) {
                                        switch (e.label) {
                                            case 0:
                                                return t.data ? [4, n(t.data.authId, t.data.openId)] : [3, 2];
                                            case 1:
                                                return e.sent(), [3, 4];
                                            case 2:
                                                return [4, l()];
                                            case 3:
                                                e.sent(), e.label = 4;
                                            case 4:
                                                return [2]
                                        }
                                    }))
                                }))
                            }))
                        }));
                        var n = function(t, n) {
                                var l;
                                e.httpService.getTokenFromPaytm(t, n).subscribe((function(t) {
                                    l = t, e.httpService.getUserDetailFormPaytm(t).subscribe((function(n) {
                                        localStorage.setItem("token", t.token), localStorage.setItem("remedo-token", l.token), localStorage.setItem("remedo-patient-userId", t.userId), e.spinner.hide(), e.doLoginForPaytm(n.patientInfo.phoneNumber.split("+91-")[1], n.patientInfo.userName)
                                    }), (function(t) {
                                        e.spinner.hide(), alert("Something went wrong, Please try again")
                                    }))
                                }), (function(t) {
                                    e.spinner.hide(), alert("Something went wrong, Please try again")
                                }))
                            },
                            l = function() {
                                return e.spinner.hide(), !1
                            }
                    }, e.prototype.loginByPassForPaytm = function() {
                        var e = this;
                        console.info("inside loginByPassForPaytm function");
                        var t = localStorage.getItem("remedo-token") ? localStorage.getItem("remedo-token") : null,
                            n = localStorage.getItem("remedo-patient-userId") ? localStorage.getItem("remedo-patient-userId") : null;
                        this.spinner.show();
                        try {
                            t && n ? this.httpService.getUserDetailFormPaytm({
                                userId: n
                            }).subscribe((function(l) {
                                console.log("getuserDetailFormPaytm", l), l && l.patientInfo ? (localStorage.setItem("token", t), localStorage.setItem("remedo-token", t), localStorage.setItem("remedo-patient-userId", n), e.spinner.hide(), e.doLoginForPaytm(l.patientInfo.phoneNumber.split("+91-")[1], l.patientInfo.userName), e.headerValue()) : e.completeLoginFlowForPaytm()
                            }), (function(t) {
                                401 == t.status ? e.completeLoginFlowForPaytm() : (e.spinner.hide(), alert("Something went wrong, Please try again later"))
                            })) : this.completeLoginFlowForPaytm()
                        } catch (l) {
                            console.info(l), this.spinner.hide(), this.spinner.hide(), alert("Something went wrong, Please try again later")
                        }
                    }, e.prototype.selectSetTime = function(e, t) {
                        this.bookedTime = t.startTime, console.info(e, t), this.slotType.type = e, this.slotType.consultType = this.consultType, this.slotType.docName = this.doctorProfile.name, this.slotType.docInfo = this.doctorProfile.specialityName, this.slotType.time = t, this.slotType.date = this.seletedSlotScroll.date, this.slotType.docId = this.doctorProfile.userName, this.slotType.appointmntBookingNo = this.doctorProfile.profile.info.aptBookingNumber[0], this.slotType.addressDetails = this.addressDetails, this.selectedAddress && (this.slotType.addressId = this.selectedAddress), this.paramRoutes.reason && (this.slotType.reason = this.paramRoutes.reason), this.slotType.averageRating = this.averageRating || 0, this.slotType.shareUrl = this.shareUrl, this.feeUpdate(), this.slotType.fee = this.fee, this.slotType.activeIndex = this.slideDateIndex, this.doctorProfile.appointmentTypes[this.consultType] && this.doctorProfile.appointmentTypes[this.consultType].repeatFee ? (this.slotType.repeatFee = this.doctorProfile.appointmentTypes[this.consultType].repeatFee / 100, this.slotType.repeatValidDuration = this.doctorProfile.appointmentTypes[this.consultType].repeatValidDuration) : (this.slotType.repeatFee = null, this.slotType.repeatValidDuration = null), this.slotType.inclinicFees = this.inclinicFees, this.doctorProfile.profile && this.doctorProfile.profile.sefUrlV2 && this.doctorProfile.profile.sefUrlV2.toString().search("getmy.clinic") > -1 && (this.slotType.sefurlNew = !0), localStorage.setItem("time", JSON.stringify(this.slotType))
                    }, e.prototype.selectedSlot = function(e, t, n) {
                        this.bookingAppointments = "", "inconsult" == this.consultType ? this.checkBookingAppointments(e, t, n) : (this.isBookingPopup = !1, this.selectToSlot(e, t))
                    }, e.prototype.selectToSlot = function(e, t) {
                        this.bookedTime = t.startTime, t && (this.ua = this.getAppcontainer(), console.info("isPaytm: " + this.ua), this.selectSetTime(e, t), this.logAnalytics("slotSelected", this.consultType + ":" + this.seletedSlotScroll.date + " " + t.startTime), this.util.increaseInstantConsultTime())
                    }, e.prototype.doLogin = function(e) {
                        var t = this;
                        this.disableBook = !0;
                        var n = {
                            appointment_type: this.consultType,
                            appointment_date: this.bookedDate,
                            appointment_time: this.bookedTime,
                            doctor_id: this.doctorId
                        };
                        if ("inconsult" == this.consultType && (n.appointment_address = this.addressDetails.address), e ? this.util.saveEvent("Appt Modal Book Clicked", "When user clicks on Book button over pop up", "Book Appointment", {
                                doctor_id: this.doctorId,
                                doctor_name: this.doctorProfile.name.name,
                                patient_id: this.bookingAppointments[0].patientId,
                                Appoinment_status: this.bookingAppointments[0].status
                            }) : this.util.saveEvent("Booking Appointment Started", "Book Appointment button clicked", "Book Appointment", n), !this.cnteBtnMob) {
                            var l = "doctors/" + this.route.params.value.doctorName + "/" + this.doctorProfile.userName;
                            this.isFromInstant ? this.router.navigate([l], this.doctorId ? {
                                queryParams: {
                                    instantConsultation: "yes",
                                    doctor_id: this.doctorId
                                }
                            } : {
                                queryParams: {
                                    instantConsultation: "yes"
                                }
                            }) : this.router.navigate([l]), this.headerValue()
                        }
                        console.log(this.bookedDate, this.bookedTime), this.util.increaseInstantConsultTime(), setTimeout((function() {
                            t.util.saveEvent("Booking Appointment Slot selected", "Book Appointment button clicked after slot selected", "Book Appointment", n)
                        }), 3e3)
                    }, e.prototype.doLoginForPaytm = function(e, t) {
                        void 0 === e && (e = null), void 0 === t && (t = null), console.info("inside doLoginForPaytm"), localStorage.setItem("number", e), console.info(this.bookedTime), null == this.bookedTime ? this.router.navigate(["/doctors/" + this.route.params.value.doctorName], {
                            queryParams: {
                                param: "booking",
                                instantConsultation: "yes",
                                time: this.paramsTime
                            }
                        }) : (this.router.navigate(["/doctors/" + this.route.params.value.doctorName + "/" + this.doctorProfile.userName], this.isFromInstant ? {
                            queryParams: {
                                instantConsultation: "yes",
                                param: "details",
                                number: e,
                                userid: t
                            }
                        } : {
                            queryParams: {
                                param: "details",
                                number: e,
                                userid: t
                            }
                        }), this.headerValue())
                    }, e.prototype.headerValue = function() {
                        this.httpService.setHeader("videoconsult" == this.consultType ? "Video Consultation" : "inconsult" == this.consultType ? "In-Clinic Consultation" : "Tele Consultation")
                    }, e.prototype.consultSelected = function(e) {
                        var t = this;
                        this.slotType.time = null, this.slideDateIndex = 0, this.isDateSwipSet = !1, this.inConsultSlots && this.inConsultSlots.userSlots && this.inConsultSlots.userSlots.inconsult && (this.slots.userSlots.inconsult = this.inConsultSlots.userSlots.inconsult), this.consultType = e, "inconsult" != e ? (this.feeUpdate(), setTimeout((function() {
                            t.swiper()
                        }), 500)) : (this.fee = "", this.paramIsconsult || this.getInClinicSlots(), setTimeout((function() {
                            t.swiper()
                        }), 1e3)), this.headerValue(), this.slots && this.slotEveMorShowLogic(), this.util.increaseInstantConsultTime()
                    }, e.prototype.openModal = function(e) {
                        var t = this;
                        this.modalRefImage = this.modalService.show(e, {
                            class: "my-modal"
                        }), this.hlsjsDriver2 = new Ke(!1), setTimeout((function() {
                            t.sources[0] = {
                                type: "video",
                                src: t.getInfoValue("intro", !0)
                            }, setTimeout((function() {
                                t.play2()
                            }), 2e3)
                        }), 1e3), this.util.increaseInstantConsultTime()
                    }, e.prototype.services = function() {
                        var e = this;
                        this.httpService.getServices(this.doctorProfile.userName).subscribe((function(t) {
                            e.serviceDetails = t, console.log("res of getServices", t)
                        }), (function(e) {
                            console.log("res of getServices", e)
                        }))
                    }, e.prototype.reDirectToEnquiry = function(e) {
                        console.log("i====>", e), this.router.navigate(["doctors/" + this.route.params.value.doctorName + "/services/" + this.doctorProfile.userName], this.isFromInstant ? {
                            queryParams: {
                                planId: e.planId,
                                instantConsultation: "yes",
                                doctorId: this.doctorProfile.userName
                            }
                        } : {
                            queryParams: {
                                planId: e.planId,
                                doctorId: this.doctorProfile.userName
                            }
                        }), this.httpService.setHeader(e.planName), this.util.increaseInstantConsultTime(), this.util.saveEvent("Services clicked", "Services clicked", "Services", {
                            service_name: e.planName,
                            doctor_id: this.doctorId
                        })
                    }, e.prototype.getDrFeedBack = function(e) {
                        var t = this;
                        this.httpService.fetchDoctorFeedBack(this.doctorProfile.userName, e).subscribe((function(e) {
                            t.getComments = e, console.log("res of getDrFeedBack", e)
                        }))
                    }, e.prototype.showMore = function(e) {
                        "gallery" == e ? this.showMoreGal = void 0 : this.showMoreClicnicInf = void 0, this.util.increaseInstantConsultTime(), this.util.saveEvent('Gallery "Show more" clicked', "", "", {
                            doctor_id: this.doctorId
                        })
                    }, e.prototype.openGetDirectionLink = function(e, t) {
                        if (this.ua) this.openLinkOnPaytmMiniApp('https://maps.google.com/?api=1&destination=" + ' + (t || e));
                        else {
                            this.util.openGetDirection(e, t), this.util.increaseInstantConsultTime();
                            var n = (new Date).getTime();
                            n - this.lastDirectionEventTime > 5e3 && (this.lastDirectionEventTime = n, this.util.saveEvent("Get Directions Done", "Get Directions button clicked", "direction", {
                                maps_url: e,
                                doctor_id: this.doctorId
                            }))
                        }
                    }, e.prototype.onMobProfile = function(e) {
                        this.disableBook = !0, console.info("onMobProfile function top level");
                        var t = {
                            appointment_type: this.consultType,
                            doctor_id: this.doctorId
                        };
                        if ("inconsult" == this.consultType && (t.appointment_address = this.addressDetails.address), "slots" == e ? this.util.saveEvent("Book Appointment Home Page", "When user click on book appointment button on home page visible in mobile", "Book Appointment", t) : (t.appointment_date = this.bookedDate, t.appointment_time = this.bookedTime, this.util.saveEvent("Booking Appointment Slot selected", "Book Appointment button clicked after slot selected", "Book Appointment", t)), this.cnteBtnMob = !0, this.headerValue(), this.ua) console.info("inside onmobProfile function"), this.loginByPassForPaytm();
                        else if ("slots" == e) {
                            var n = this.router.url.split("?")[0],
                                l = this.route.queryParams._value;
                            if (this.isFromInstant) {
                                var i = {
                                    param: "booking",
                                    instantConsultation: "yes"
                                };
                                l && l.consultType && (i.consultType = l.consultType), this.router.navigate([n], {
                                    queryParams: i
                                })
                            } else i = {
                                param: "booking"
                            }, l && l.consultType && (i.consultType = l.consultType), this.router.navigate([n], {
                                queryParams: i
                            });
                            this.getRoutes()
                        } else n = "doctors/" + this.route.params.value.doctorName + "/" + this.doctorProfile.userName, this.isFromInstant ? this.router.navigate([n], {
                            queryParams: {
                                instantConsultation: "yes"
                            }
                        }) : "booking" == this.paramRoutes.param ? this.router.navigate([n], {
                            queryParams: {
                                param: i = {
                                    param: "booking"
                                }
                            }
                        }) : this.router.navigate([n]);
                        this.scrollTop(), this.util.increaseInstantConsultTime()
                    }, e.prototype.viewProfile = function() {
                        var e = "doctors/" + this.route.params.value.doctorName,
                            t = {},
                            n = this.route.queryParams._value;
                        n && n.consultType && (t.consultType = n.consultType), this.isFromInstant ? (t.instantConsultation = "yes", this.router.navigate([e], {
                            queryParams: t
                        })) : t && t.consultType ? this.router.navigate([e], {
                            queryParams: t
                        }) : this.router.navigate([e]), this.util.increaseInstantConsultTime()
                    }, e.prototype.openWhatsApp = function() {
                        this.ua ? this.openLinkOnPaytmMiniApp("whatsapp://send?phone=+91-8879797976&text=Hi. I have a query regarding Dr.  " + this.doctorProfile.name.name) : this.util.openWhatsApp("Hi. I have a query regarding Dr.  " + this.doctorProfile.name.name, "+91-8879797976")
                    }, e.prototype.openLinkOnPaytmMiniApp = function(e) {
                        var t, n = {
                            url: e
                        };
                        t = function() {
                            JSBridge.call("openInBrowser", n)
                        }, JSBridge ? t && t() : document.addEventListener("JSBridgeReady", t, !1)
                    }, e.prototype.showMoreServices = function() {
                        this.serviceCount = 500
                    }, e.prototype.scrollTop = function() {
                        window.scroll(0, 0)
                    }, e.prototype.callClinicByPatient = function(e) {
                        this.isBookingPopup = !1, location.href = "tel:" + e;
                        var t = (new Date).getTime();
                        t - this.lastCallClinicEventTime > 5e3 && (this.lastCallClinicEventTime = t, this.util.saveEvent("Call Clinic Started", "Call Clinic button clicked", "Call", {
                            clinic_number: e,
                            doctor_id: this.doctorId,
                            self_url: window.location.href,
                            screen_name: "appoinment_modal"
                        }))
                    }, e.prototype.closePopPup = function() {
                        this.isBookingPopup = !1, this.util.saveEvent("Appt Modal Cancel Clicked", "When user clicks on cross button over popup ", "Book Appoinment", {
                            doctor_id: this.doctorId,
                            doctor_name: this.doctorProfile.name.name,
                            patient_id: this.bookingAppointments[0].patientId,
                            Appoinment_status: this.bookingAppointments[0].status
                        })
                    }, e.prototype.opengalleryImgModal = function(e, t) {
                        this.viewImage(t), this.modalRefImage = this.modalService.show(e, {
                            class: "my-modal"
                        }), this.util.increaseInstantConsultTime()
                    }, e.prototype.isShowVisible = function(e) {
                        return ((this.doctorProfile.profile.info[e] || {}).galleries || []).length > 1
                    }, e.prototype.viewImage = function(e) {
                        for (var t = this.getInfoValue("galleries", !0).galleries, n = [], l = e; l < (t || []).length; l++) n.push({
                            url: t[l].image
                        });
                        for (l = 0; l < e; l++) n.push({
                            url: t[l].image
                        });
                        this.docsToShow = (n || []).map((function(e) {
                            return e.url
                        })), console.log(this.docsToShow)
                    }, e.prototype.doctorGoogleRating = function(e) {
                        var t = this;
                        this.httpService.doctorGoogleRating(e).subscribe((function(e) {
                            t.averageRating = (Math.round(10 * e.averageRating) / 10).toFixed(1)
                        }), (function(e) {}))
                    }, e.prototype.gotoViewProfile = function() {
                        this.util.saveEvent("view profile clicked", "null", "Book Appointment", {
                            doctor_name: this.doctorProfile.name.name,
                            doctor_id: this.doctorId,
                            profile_url: this.shareUrl,
                            page_name: "Booking"
                        })
                    }, e.prototype.checkBookingAppointments = function(e, t, n) {
                        var l = this;
                        if (localStorage.getItem("token")) {
                            var i, r = void 0;
                            if (window.moment(this.bookedDate).format("YYYY-MM-DD") == window.moment().format("YYYY-MM-DD")) r = window.moment().format("YYYY-MM-DD");
                            else {
                                var s = window.moment(this.bookedDate).format("YYYY-MM-DD");
                                r = He(s).subtract(1, "days").toDate()
                            }
                            i = He(this.bookedDate).add(1, "days").toDate() || window.moment(t.startTime, "HH:mm:ss").format("YYYY-MM-DD"), this.httpService.fetchLatestAppointmentClinic(this.doctorId, window.moment(r).format("YYYY-MM-DD"), window.moment(i).format("YYYY-MM-DD")).subscribe((function(i) {
                                i.body.appointments.length > 0 ? (l.selectedTime = {
                                    type: e,
                                    time: t
                                }, l.modalRef = l.modalService.show(n), l.bookingAppointments = i.body.appointments, l.isBookingPopup = !0, console.info(i)) : l.isBookingPopup = !1, l.selectToSlot(e, t)
                            }), (function(n) {
                                console.info(n), l.isBookingPopup = !1, l.selectToSlot(e, t)
                            }))
                        } else this.isBookingPopup = !1, this.selectToSlot(e, t)
                    }, e.prototype.getAppointmentName = function(e) {
                        return e.toLowerCase() == "INCONSULT".toLowerCase() ? "CLINIC" : e.toLowerCase() == "videoconsult".toLowerCase() ? "VIDEO" : "AUDIO "
                    }, e.prototype.extractTimeAppntmnt = function(e) {
                        return He(e).format("h:mm A")
                    }, e.prototype.slotFormatDate = function(e) {
                        return window.moment().format("YYYY-MM-DD") == window.moment(e).format("YYYY-MM-DD") ? "Today" : window.moment().add(1, "day").format("YYYY-MM-DD") == window.moment(e).format("YYYY-MM-DD") ? "Tomorrow" : window.moment(e).format("DD MMM, YYYY")
                    }, e.prototype.getInClinicFees = function() {
                        if (this.inclinicFees = "", this.addressDetails && this.addressDetails.feeDetails && this.addressDetails.feeDetails.amount) return this.inclinicFees = "Fees \u20b9 " + this.addressDetails.feeDetails.amount, this.inclinicFees;
                        if (this.doctorProfile.appointmentTypes && (this.doctorProfile.appointmentTypes.teleconsult && this.doctorProfile.appointmentTypes.teleconsult.fee || this.doctorProfile.appointmentTypes.videoconsult && this.doctorProfile.appointmentTypes.videoconsult.fee)) {
                            if (this.inclinicFees = "Fees approx \u20b9 ", this.doctorProfile.appointmentTypes && this.doctorProfile.appointmentTypes.teleconsult && this.doctorProfile.appointmentTypes.teleconsult.fee) {
                                var e = void 0;
                                e = (this.doctorProfile.appointmentTypes.teleconsult.fee - this.doctorProfile.appointmentTypes.teleconsult.fee * (4.76 / 100)) / 100, this.inclinicFees = this.inclinicFees + parseInt(e)
                            } else e = void 0, e = (this.doctorProfile.appointmentTypes.videoconsult.fee - this.doctorProfile.appointmentTypes.videoconsult.fee * (4.76 / 100)) / 100, this.inclinicFees = this.inclinicFees + parseInt(e);
                            return this.inclinicFees
                        }
                        return this.inclinicFees = "Fees : Pay at clinic", this.inclinicFees
                    }, e
                }(),
                Ye = n("DQlY"),
                $e = n("ZYjt"),
                ze = l["\u0275crt"]({
                    encapsulation: 0,
                    styles: [
                        ['@import url(https://fonts.googleapis.com/css?family=Poppins&display=swap);@import url(https://fonts.googleapis.com/css?family=Poppins&display=swap);[_ngcontent-%COMP%]:root{--primary-color:#254886;--secondary-color:#254886;--primary-color-light:#f2e5f2;--body-background-color:#f2f2f2;--block-gray-background:#e4e4e4;--primary-green-color:#02a77a;--primary-font:"Roboto";--primary-active:#1a4694}.google-box[_ngcontent-%COMP%]{padding:0 10px}.google-box[_ngcontent-%COMP%]   .inside[_ngcontent-%COMP%]{border:1px solid #ddf1ff;background:#ddf1ff;border-radius:4px;padding:5px 10px;max-height:80px;min-height:80px}.google-box[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:13px}.google-box[_ngcontent-%COMP%]   .elipsis[_ngcontent-%COMP%]{font-size:12px!important;margin:5px 0!important}.screen-hide[_ngcontent-%COMP%]{visibility:hidden}.web-apt-button[_ngcontent-%COMP%]{float:right;font-size:small;margin-top:24px}.bold[_ngcontent-%COMP%]{font-weight:700}.watch-button[_ngcontent-%COMP%]{position:absolute;cursor:pointer;left:80%;top:88%}.watch-button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#0176c4;font-size:15px;font-weight:600}.borders[_ngcontent-%COMP%]{border:1px solid #d0d0d0;border-radius:5px}.dr-dp[_ngcontent-%COMP%]{width:100%}.service-card[_ngcontent-%COMP%]{position:relative}.service-card[_ngcontent-%COMP%]   .readMore[_ngcontent-%COMP%]{position:absolute;left:10px;bottom:0}.service-card-m[_ngcontent-%COMP%]{position:relative;padding-bottom:20px}.service-card-m[_ngcontent-%COMP%]   .readMore[_ngcontent-%COMP%]{position:absolute;left:10px;bottom:10px}.main-imgDiv[_ngcontent-%COMP%]{border-radius:50%;overflow:hidden;height:75px;width:75px;min-height:75px;min-width:75px;background-size:cover;background-position:center;max-height:75px;max-width:75px}.tc_slot[_ngcontent-%COMP%]   .tc_time[_ngcontent-%COMP%]{padding:10px;text-align:center;border:1px solid #948e8e;border-radius:50px;margin-top:30px;width:100%;background:#fff;color:var(--primary-color)}.tc_slot[_ngcontent-%COMP%]{width:100%;font-size:9px}.W-90[_ngcontent-%COMP%]{width:90%}.slotBtn[_ngcontent-%COMP%]{background:#fff;color:#000;width:100%;font-size:12px;padding:8px 0}.tc_slotbutton[_ngcontent-%COMP%]{background:#fff;color:#000}.active-slot[_ngcontent-%COMP%]{background:#64bc6e;color:#fff}.active-slot[_ngcontent-%COMP%]:focus{border-color:#90ce5f!important}.color-grey[_ngcontent-%COMP%]{color:#948e8e}.color-green[_ngcontent-%COMP%]{color:#90ce5f}.active-slot-tab[_ngcontent-%COMP%]{color:#64bc6e}.color-navy-back[_ngcontent-%COMP%]{color:#fff;background:#0176c4}.color-navy-outline[_ngcontent-%COMP%]{color:#0176c4;border-color:#0176c4}.color-white[_ngcontent-%COMP%]{color:#fff}.f-10[_ngcontent-%COMP%]{font-size:10px}.f-12[_ngcontent-%COMP%]{font-size:12px}.f-14[_ngcontent-%COMP%]{font-size:14px}.f-16[_ngcontent-%COMP%]{font-size:16px}.w-48[_ngcontent-%COMP%]{width:48%}.m--11[_ngcontent-%COMP%]{margin-top:-11px}.call-box[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;margin:auto;padding:20px 25px 10px}.call-box[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:24px}.active-call[_ngcontent-%COMP%]{background-color:#90ce5f}.active-box[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], .active-call[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#fff}.box-call[_ngcontent-%COMP%]{cursor:pointer;position:relative}.box-call[_ngcontent-%COMP%]   .in-clnc[_ngcontent-%COMP%]{position:absolute;top:62%;right:18%}.box-call[_ngcontent-%COMP%]   .span-txt[_ngcontent-%COMP%]{position:absolute;top:60%;right:28%}.upper-section-background[_ngcontent-%COMP%]{background-color:#fff;overflow:hidden}.main-background[_ngcontent-%COMP%]{background-color:#fff;min-height:100vh;max-height:100%}.swipper-active[_ngcontent-%COMP%]{border-bottom:3px solid #64bc6e}.educate-bottom-border[_ngcontent-%COMP%]{border-bottom:1px solid #e5e5e5!important}.gallery-img-div[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{padding:7px;height:80px;width:80px;-o-object-fit:cover;object-fit:cover;border-radius:10px}.pad-btm[_ngcontent-%COMP%]{padding-bottom:5rem}.butonDisabled[_ngcontent-%COMP%]{background:#ccc!important}.video-text[_ngcontent-%COMP%]{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto;padding-top:15px}.gradient-video-div[_ngcontent-%COMP%]{bottom:-2px;height:100%;width:100%;background-image:linear-gradient(to top,#fff,rgba(255,255,255,.9),rgba(255,255,255,.8),rgba(255,255,255,.7),rgba(255,255,255,.6),rgba(255,255,255,.5),rgba(255,255,255,.4),rgba(255,255,255,.3),rgba(255,255,255,.2),rgba(255,255,255,.1),rgba(255,255,255,0))}.special-commnt-above[_ngcontent-%COMP%]{background-color:#fff}@media screen and (max-width:1023px) and (min-width:0px){.my-modal[_ngcontent-%COMP%]{max-width:100%!important}.my-modal[_ngcontent-%COMP%]   .modal-content[_ngcontent-%COMP%]{max-width:100%!important;height:5rem!important;background:0 0}.gallery-modal[_ngcontent-%COMP%]   .img-css[_ngcontent-%COMP%]{height:248px!important;width:100%!important}.gallery-modal[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{height:300px!important}.gallery-modal[_ngcontent-%COMP%]   .card-align[_ngcontent-%COMP%]{padding:0 25px!important;margin-left:1%!important}.gallery-modal[_ngcontent-%COMP%]   .colm-align[_ngcontent-%COMP%]{margin:0!important}.gallery-modal[_ngcontent-%COMP%]   .left-icon[_ngcontent-%COMP%]{cursor:pointer;position:relative;top:45%;right:38%}.gallery-modal[_ngcontent-%COMP%]   .rigt-icon[_ngcontent-%COMP%]{cursor:pointer;position:relative;bottom:47%;left:36%}.fix-width[_ngcontent-%COMP%]{max-width:50%}.watch-button[_ngcontent-%COMP%]{position:absolute;left:55%!important;top:75%!important}.d-none-mob[_ngcontent-%COMP%]{display:none!important}.mob-border-bottom[_ngcontent-%COMP%]{border-bottom:1px solid #e5e5e5!important}.f-n[_ngcontent-%COMP%]{float:none!important}.col-align[_ngcontent-%COMP%]{flex:0 0 41.666667%!important;max-width:41.666667%!important}.big-borders[_ngcontent-%COMP%]{background-color:#fff}.only-mob-eve[_ngcontent-%COMP%]{padding-bottom:1rem}.p-mob[_ngcontent-%COMP%], .p-mob-edu-gal[_ngcontent-%COMP%]{padding:0!important}video[_ngcontent-%COMP%]{width:100%;height:auto}.google-box[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:12px}.video-div[_ngcontent-%COMP%]{height:auto;width:100%}.col-12-mob[_ngcontent-%COMP%]{flex:0 0 100%;max-width:100%}}@media screen and (min-width:1023px){.min-top-height[_ngcontent-%COMP%]{min-height:400px}.main-background[_ngcontent-%COMP%]{background-color:#e5e5e5;min-height:100vh;max-height:100%}.gradient-video-div[_ngcontent-%COMP%]{top:0;height:1500px;width:50%;background-image:linear-gradient(to right,#fff,rgba(255,255,255,0));left:-1px}video[_ngcontent-%COMP%]{width:100%;float:right}.video-text[_ngcontent-%COMP%]{position:absolute;top:20%;left:0;max-width:45%;padding-left:153px}.google-box[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:17px}.tc_slot[_ngcontent-%COMP%]{font-size:10px}.d-none-lap[_ngcontent-%COMP%]{display:none!important}.d-none-lap[_ngcontent-%COMP%]   .left-align[_ngcontent-%COMP%]{padding-left:0!important}.big-borders[_ngcontent-%COMP%]{border-radius:5px;background-color:#fff}.p-mob[_ngcontent-%COMP%]{padding:1rem!important}.p-mob-edu-gal[_ngcontent-%COMP%]{padding:.5rem 1rem 0!important}}@media screen and (min-width:1024px){.video-text[_ngcontent-%COMP%]{position:absolute;top:100px;left:0;padding-left:153px}.plyr[_ngcontent-%COMP%]   video[_ngcontent-%COMP%], .video[_ngcontent-%COMP%]{min-height:500px!important;max-height:500px!important}.video-div[_ngcontent-%COMP%]{height:500px}}.readMore[_ngcontent-%COMP%]{color:#0176c4;cursor:pointer}.close[_ngcontent-%COMP%]{top:-3px;right:11px;font-weight:100}.readMoreText[_ngcontent-%COMP%]{display:-webkit-box;-webkit-line-clamp:2;overflow:hidden}.readMoreTextService[_ngcontent-%COMP%]{display:-webkit-box;-webkit-line-clamp:1;overflow:hidden}ul.hidelist[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:nth-of-type(1n+5){display:none}ul.hidelist[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:nth-child(4){cursor:pointer;pointer-events:unset}.elipsis[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.swiper-container[_ngcontent-%COMP%]{width:100%;height:100%}.swiper-slide[_ngcontent-%COMP%]{text-align:center;font-size:18px;background:#fff;display:flex;justify-content:center;align-items:center}.watsAppImg[_ngcontent-%COMP%]{position:fixed;z-index:5;bottom:70px;right:4%}.green[_ngcontent-%COMP%]{color:#64bc6e}#swip[_ngcontent-%COMP%]   .swiper-button-next[_ngcontent-%COMP%], #swip[_ngcontent-%COMP%]   .swiper-button-prev[_ngcontent-%COMP%]{display:none}.disabledSlotTime[_ngcontent-%COMP%]{background:#f4f1f1;display:none}.swiper-button-next[_ngcontent-%COMP%], .swiper-button-prev[_ngcontent-%COMP%]{font-size:30px}.videoDivModal[_ngcontent-%COMP%]{height:500px}.loader[_ngcontent-%COMP%]{border:4px solid #f3f3f3;border-top:4px solid #3498db;border-radius:50%;width:40px;height:40px;animation:2s linear infinite spin;-webkit-animation:2s linear infinite spin;margin:40px auto}.card-img[_ngcontent-%COMP%]{border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px);height:100px!important}.fR[_ngcontent-%COMP%]{float:right}.blue-col[_ngcontent-%COMP%]{color:#0c72b8!important}.tab-align[_ngcontent-%COMP%]{padding:0 1rem}.black[_ngcontent-%COMP%]{color:#02a77a!important}.fw[_ngcontent-%COMP%]{font-weight:600}.border-cons[_ngcontent-%COMP%]{border-radius:10px!important}.f15[_ngcontent-%COMP%]{font-size:15px}.h-fix[_ngcontent-%COMP%]{height:250px}.gallery-modal[_ngcontent-%COMP%]   .img-css[_ngcontent-%COMP%]{height:470px;width:575px}.gallery-modal[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{height:522px}.gallery-modal[_ngcontent-%COMP%]   .left-icon[_ngcontent-%COMP%]{cursor:pointer;margin-right:10%}.gallery-modal[_ngcontent-%COMP%]   .rigt-icon[_ngcontent-%COMP%]{cursor:pointer;margin-left:10%}.product-item[_ngcontent-%COMP%]   .product-item-content[_ngcontent-%COMP%]{border:1px solid var(--surface-d);border-radius:3px;margin:.3rem;text-align:center;padding:2rem 0}.product-item[_ngcontent-%COMP%]   .product-image[_ngcontent-%COMP%]{max-height:100%;max-width:100%;margin:auto}.product-item[_ngcontent-%COMP%]   .pdf-img[_ngcontent-%COMP%]{margin-top:9rem;width:30%;height:40%}.color-blue[_ngcontent-%COMP%]{color:#715ac4}.in-clinic[_ngcontent-%COMP%]{font-size:12px;font-weight:600}.circle[_ngcontent-%COMP%]{height:20px;width:20px;background-color:#64bc6e;border-radius:50%;display:inline-block;cursor:pointer;position:absolute}.white-circle[_ngcontent-%COMP%]{height:10px;width:10px;background-color:#fff;display:inline-block;border-radius:50%;cursor:pointer;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.circle-white[_ngcontent-%COMP%]{height:20px;width:20px;background-color:#fff;border-radius:50%;display:inline-block;border:1px solid #abb5be;cursor:pointer;position:absolute}.white-gray[_ngcontent-%COMP%]{height:10px;width:10px;background-color:#abb5be;display:inline-block;border-radius:50%;cursor:pointer;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.white-gray-text[_ngcontent-%COMP%]{color:#bdbdbd;cursor:pointer}.white-circle-text[_ngcontent-%COMP%]{color:#333;cursor:pointer}.gray[_ngcontent-%COMP%]{color:#948e8e}.align-text-img[_ngcontent-%COMP%]{top:0;left:0;contain:content;font-size:14px}.display-set[_ngcontent-%COMP%]{display:block}.align-box[_ngcontent-%COMP%]{margin:0 5%}.web-border-bottom[_ngcontent-%COMP%]{border-bottom:1px solid #e5e5e5}.valid-day[_ngcontent-%COMP%]{color:#969696;font-size:10px}.txt-alg[_ngcontent-%COMP%]{text-align:center}.call-clinic[_ngcontent-%COMP%]{background:#649ec4;color:#fff;height:45px;font-size:15px;width:100%;border-radius:10px;font-weight:600}.cursor-pt[_ngcontent-%COMP%]{cursor:pointer}.book-button[_ngcontent-%COMP%]{background:#fff;color:#649ec4;height:45px;font-size:15px;width:100%;font-weight:600;border-radius:10px;border:2px solid #649ec4}.button-ui[_ngcontent-%COMP%]{height:40px!important;font-size:12px}.appointment-txt[_ngcontent-%COMP%]{color:#414141;font-weight:600;font-size:14px;line-height:25px}.appointment-confirm-txt[_ngcontent-%COMP%]{color:#414141;font-size:14px}.confirm-txt[_ngcontent-%COMP%]{color:#00c142}.apt-no[_ngcontent-%COMP%]{cursor:pointer;color:#3591dd}']
                    ],
                    data: {}
                });

            function We(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function Xe(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0, null, We))], null, null)
            }

            function Ze(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 9, "div", [
                    ["class", "main-background"]
                ], null, null, null, null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    "screen-hide": 0
                }), (e()(), l["\u0275eld"](3, 0, null, null, 3, "div", [
                    ["class", "container"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 2, null, null, null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Xe)), l["\u0275did"](6, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutlet: [0, "ngTemplateOutlet"]
                }, null), (e()(), l["\u0275eld"](7, 0, null, null, 2, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](8, 0, null, null, 1, "app-faq", [
                    ["id", "target"]
                ], null, null, null, o.b, o.a)), l["\u0275did"](9, 114688, null, 0, a.a, [], {
                    location: [0, "location"],
                    consultType: [1, "consultType"]
                }, null)], (function(e, t) {
                    var n = t.component,
                        i = e(t, 2, 0, !n.screenVisible);
                    e(t, 1, 0, "main-background", i), e(t, 6, 0, l["\u0275nov"](t.parent, 12)), e(t, 9, 0, n.slotType.location, n.consultType)
                }), null)
            }

            function Je(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "main-imgDiv"],
                    ["style", "\n              background-image: url('assets/default/images/doctor_male.svg');\n            "]
                ], null, null, null, null, null))], null, null)
            }

            function Qe(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "main-imgDiv"],
                    ["style", "\n              background-image: url('assets/default/images/doctor_female.svg');\n            "]
                ], null, null, null, null, null))], null, null)
            }

            function et(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "main-imgDiv"]
                ], [
                    [4, "background-image", null]
                ], null, null, null, null))], null, (function(e, t) {
                    e(t, 0, 0, "url(" + t.component.doctorProfile.thumbnail + ")")
                }))
            }

            function tt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 0, "img", [
                    ["height", "18px"],
                    ["src", "assets/images/verified.png"],
                    ["width", "18px"]
                ], null, null, null, null, null))], null, null)
            }

            function nt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 3, "h4", [
                    ["class", "font-weight-bold"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, [" Dr. ", " "])), (e()(), l["\u0275and"](16777216, null, null, 1, null, tt)), l["\u0275did"](3, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 3, 0, n.doctorProfile.registrationNumber || (null == n.doctorProfile.profile || null == n.doctorProfile.profile.info ? null : n.doctorProfile.profile.info.mciRegistrationNumber))
                }), (function(e, t) {
                    e(t, 1, 0, (t.component.doctorProfile.name || l["\u0275EMPTY_MAP"]).name)
                }))
            }

            function lt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "h6", [], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, [" ", " "]))], null, (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, (null == n.doctorProfile.profile || null == n.doctorProfile.profile.info ? null : n.doctorProfile.profile.info.mciRegistrationNumber) || n.doctorProfile.registrationNumber)
                }))
            }

            function it(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 3, "u", [
                    ["class", "readMore"],
                    ["id", "briefInfoV"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.viewMore("briefInfo", "briefInfoV") && l), l
                }), null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    "d-none-lap": 0
                }), (e()(), l["\u0275ted"](-1, null, ["read more"]))], (function(e, t) {
                    var n = e(t, 2, 0, !t.component.getInfoValue("intro", !0));
                    e(t, 1, 0, "readMore", n)
                }), null)
            }

            function rt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 4, null, null, null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 1, "h6", [
                    ["class", "pt-3 readMoreText"],
                    ["id", "briefInfo"],
                    ["style", "-webkit-box-orient: vertical"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](2, null, [" ", " "])), (e()(), l["\u0275and"](16777216, null, null, 1, null, it)), l["\u0275did"](4, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](0, null, null, 0))], (function(e, t) {
                    var n = t.component;
                    e(t, 4, 0, n.getInfoValue("briefInformation", !0) && n.getInfoValue("briefInformation", !0).length > 50)
                }), (function(e, t) {
                    e(t, 2, 0, t.component.getInfoValue("briefInformation", !0))
                }))
            }

            function st(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 11, "div", [
                    ["class", "col-4 fix-width"]
                ], null, null, null, null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    "col-12-mob": 0
                }), (e()(), l["\u0275eld"](3, 0, null, null, 8, "div", [
                    ["class", "google-box"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 7, "div", [
                    ["class", "inside"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 1, "div", [
                    ["class", "d-flex justify-content-end"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](6, 0, null, null, 0, "img", [
                    ["src", "assets/default/images/suitcase.svg"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](7, 0, null, null, 4, "div", [
                    ["class", "d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](8, 0, null, null, 1, "span", [
                    ["class", "bold"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](9, null, ["", ""])), (e()(), l["\u0275eld"](10, 0, null, null, 1, "span", [
                    ["class", "elipsis"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Practice Experience"]))], (function(e, t) {
                    var n = t.component,
                        l = e(t, 2, 0, !(null != n.getComments && n.getComments.totalCount));
                    e(t, 1, 0, "col-4 fix-width", l)
                }), (function(e, t) {
                    e(t, 9, 0, t.component.getInfoValue("experience", !0))
                }))
            }

            function ot(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 11, "div", [
                    ["class", "col-4 fix-width"]
                ], null, null, null, null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    "col-12-mob": 0
                }), (e()(), l["\u0275eld"](3, 0, null, null, 8, "div", [
                    ["class", "google-box"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 7, "div", [
                    ["class", "inside"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 1, "div", [
                    ["class", "d-flex justify-content-end"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](6, 0, null, null, 0, "img", [
                    ["src", "assets/default/images/book.svg"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](7, 0, null, null, 4, "div", [
                    ["class", "d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](8, 0, null, null, 1, "span", [
                    ["class", "bold"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](9, null, ["", ""])), (e()(), l["\u0275eld"](10, 0, null, null, 1, "span", [
                    ["class", "elipsis"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Patient stories"]))], (function(e, t) {
                    var n = e(t, 2, 0, !t.component.getInfoValue("experience", !0));
                    e(t, 1, 0, "col-4 fix-width", n)
                }), (function(e, t) {
                    var n = t.component;
                    e(t, 9, 0, null == n.getComments ? null : n.getComments.totalCount)
                }))
            }

            function at(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 26, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 25, "div", [
                    ["class", "container"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 24, "div", [
                    ["class", "d-flex flex-column big-borders p-3 p-mob"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 11, "div", [
                    ["class", "d-flex mt-3"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Je)), l["\u0275did"](5, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Qe)), l["\u0275did"](7, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, et)), l["\u0275did"](9, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](10, 0, null, null, 4, "div", [
                    ["class", "pl-2 pt-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, nt)), l["\u0275did"](12, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, lt)), l["\u0275did"](14, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](15, 0, null, null, 1, "h6", [
                    ["class", "pt-3"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](16, null, [" ", " "])), (e()(), l["\u0275eld"](17, 0, null, null, 1, "h6", [], null, null, null, null, null)), (e()(), l["\u0275ted"](18, null, ["", ""])), (e()(), l["\u0275and"](16777216, null, null, 1, null, rt)), l["\u0275did"](20, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](21, 0, null, null, 5, "div", [
                    ["class", "my-3"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](22, 0, null, null, 4, "div", [
                    ["class", "form-row"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, st)), l["\u0275did"](24, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, ot)), l["\u0275did"](26, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 5, 0, !n.doctorProfile.thumbnail && "male" == n.doctorProfile.gender), e(t, 7, 0, !n.doctorProfile.thumbnail && "male" !== n.doctorProfile.gender), e(t, 9, 0, n.doctorProfile.thumbnail), e(t, 12, 0, n.doctorProfile.name), e(t, 14, 0, n.doctorProfile.registrationNumber || (null == n.doctorProfile.profile || null == n.doctorProfile.profile.info ? null : n.doctorProfile.profile.info.mciRegistrationNumber)), e(t, 20, 0, n.getInfoValue("briefInformation", !0)), e(t, 24, 0, n.getInfoValue("experience", !0)), e(t, 26, 0, null == n.getComments ? null : n.getComments.totalCount)
                }), (function(e, t) {
                    var n = t.component;
                    e(t, 16, 0, n.arrayToString(n.getInfoValue("degrees", !1))), e(t, 18, 0, n.doctorProfile.specialityName)
                }))
            }

            function ut(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "div", [
                    ["disabled", ""],
                    ["id", "aaaa"],
                    ["loop", ""],
                    ["mat-card-image", ""],
                    ["mute", ""],
                    ["plyr", ""]
                ], null, [
                    [null, "plyrInit"],
                    [null, "plyrLanguageChange"],
                    [null, "plyrVolumeChange"]
                ], (function(e, t, n) {
                    var l = !0,
                        i = e.component;
                    return "plyrInit" === t && (l = !1 !== (i.plyr1 = n) && l), "plyrLanguageChange" === t && (l = !1 !== i.languageChanged(i.hlsjsDriver1, i.plyr1) && l), "plyrVolumeChange" === t && (l = !1 !== i.volume(n) && l), l
                }), b, y)), l["\u0275did"](1, 4898816, [
                    ["maincontent", 4]
                ], 0, m, [l.ElementRef, l.NgZone, l.Renderer2], {
                    plyrDriver: [0, "plyrDriver"],
                    plyrSources: [1, "plyrSources"],
                    plyrCrossOrigin: [2, "plyrCrossOrigin"],
                    plyrPlaysInline: [3, "plyrPlaysInline"]
                }, {
                    plyrInit: "plyrInit",
                    plyrVolumeChange: "plyrVolumeChange",
                    plyrLanguageChange: "plyrLanguageChange"
                })], (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, n.hlsjsDriver1, n.sources, !0, !0)
                }), null)
            }

            function ct(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "main-imgDiv"],
                    ["style", "\n                    background-image: url('assets/default/images/doctor_male.svg');\n                  "]
                ], null, null, null, null, null))], null, null)
            }

            function dt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "main-imgDiv"],
                    ["style", "\n                    background-image: url('assets/default/images/doctor_female.svg');\n                  "]
                ], null, null, null, null, null))], null, null)
            }

            function ft(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "main-imgDiv"]
                ], [
                    [4, "background-image", null]
                ], null, null, null, null))], null, (function(e, t) {
                    e(t, 0, 0, "url(" + t.component.doctorProfile.thumbnail + ")")
                }))
            }

            function pt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 0, "img", [
                    ["height", "18px"],
                    ["src", "assets/images/verified.png"],
                    ["width", "18px"]
                ], null, null, null, null, null))], null, null)
            }

            function ht(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 3, "h4", [
                    ["class", "font-weight-bold"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, [" Dr. ", " "])), (e()(), l["\u0275and"](16777216, null, null, 1, null, pt)), l["\u0275did"](3, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 3, 0, n.doctorProfile.registrationNumber || (null == n.doctorProfile.profile || null == n.doctorProfile.profile.info ? null : n.doctorProfile.profile.info.mciRegistrationNumber))
                }), (function(e, t) {
                    e(t, 1, 0, (t.component.doctorProfile.name || l["\u0275EMPTY_MAP"]).name)
                }))
            }

            function gt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "h6", [], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, [" ", " "]))], null, (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, (null == n.doctorProfile.profile || null == n.doctorProfile.profile.info ? null : n.doctorProfile.profile.info.mciRegistrationNumber) || n.doctorProfile.registrationNumber)
                }))
            }

            function mt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "u", [
                    ["class", "readMore"],
                    ["id", "briefInfoV"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.viewMore("briefInfo", "briefInfoV") && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, ["read more"]))], null, null)
            }

            function vt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 4, null, null, null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 1, "h6", [
                    ["class", "pt-3 readMoreText"],
                    ["id", "briefInfo"],
                    ["style", "-webkit-box-orient: vertical"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](2, null, [" ", " "])), (e()(), l["\u0275and"](16777216, null, null, 1, null, mt)), l["\u0275did"](4, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](0, null, null, 0))], (function(e, t) {
                    var n = t.component;
                    e(t, 4, 0, n.getInfoValue("briefInformation", !0) && n.getInfoValue("briefInformation", !0).length > 50)
                }), (function(e, t) {
                    e(t, 2, 0, t.component.getInfoValue("briefInformation", !0))
                }))
            }

            function yt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 11, "div", [
                    ["class", ""]
                ], null, null, null, null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    "col-12-mob": 0
                }), (e()(), l["\u0275eld"](3, 0, null, null, 8, "div", [
                    ["class", "google-box"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 7, "div", [
                    ["class", "inside"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 1, "div", [
                    ["class", "d-flex justify-content-end"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](6, 0, null, null, 0, "img", [
                    ["src", "assets/default/images/suitcase.svg"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](7, 0, null, null, 4, "div", [
                    ["class", "d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](8, 0, null, null, 1, "span", [
                    ["class", "bold"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](9, null, ["", ""])), (e()(), l["\u0275eld"](10, 0, null, null, 1, "span", [
                    ["class", "elipsis"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Practice Experience"]))], (function(e, t) {
                    var n = t.component,
                        l = e(t, 2, 0, !(null != n.getComments && n.getComments.totalCount));
                    e(t, 1, 0, "", l)
                }), (function(e, t) {
                    e(t, 9, 0, t.component.getInfoValue("experience", !0))
                }))
            }

            function bt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 11, "div", [], null, null, null, null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngClass: [0, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    "col-12-mob": 0
                }), (e()(), l["\u0275eld"](3, 0, null, null, 8, "div", [
                    ["class", "google-box"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 7, "div", [
                    ["class", "inside"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 1, "div", [
                    ["class", "d-flex justify-content-end"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](6, 0, null, null, 0, "img", [
                    ["src", "assets/default/images/book.svg"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](7, 0, null, null, 4, "div", [
                    ["class", "d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](8, 0, null, null, 1, "span", [
                    ["class", "bold"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](9, null, ["", ""])), (e()(), l["\u0275eld"](10, 0, null, null, 1, "span", [
                    ["class", "elipsis"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Patient stories"]))], (function(e, t) {
                    var n = e(t, 2, 0, !t.component.getInfoValue("experience", !0));
                    e(t, 1, 0, n)
                }), (function(e, t) {
                    var n = t.component;
                    e(t, 9, 0, null == n.getComments ? null : n.getComments.totalCount)
                }))
            }

            function Tt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 40, "section", [
                    ["class", "upper-section-background"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 39, "section", [
                    ["class", "w-100 d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 11, "div", [
                    ["class", "video-div"],
                    ["style", "background-color: rgba(255, 255, 255, 0)"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 10, "div", [
                    ["class", "float-right video-div position-relative"]
                ], null, null, null, null, null)), l["\u0275did"](4, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](5, {
                    "min-top-height": 0
                }), (e()(), l["\u0275eld"](6, 0, null, null, 3, "div", [
                    ["style", "background: transparent; width: 100%; min-height: 220px"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, ut)), l["\u0275did"](8, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](9, 0, null, null, 0, "div", [
                    ["class", "position-absolute gradient-video-div"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](10, 0, null, null, 3, "div", [
                    ["class", "d-flex watch-button"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var i = !0;
                    return "click" === t && (i = !1 !== e.component.openModal(l["\u0275nov"](e.parent.parent.parent, 18)) && i), i
                }), null, null)), (e()(), l["\u0275eld"](11, 0, null, null, 0, "img", [
                    ["src", "assets/default/images/play-button.svg"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](12, 0, null, null, 1, "span", [
                    ["class", "ml-2 mt-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Watch intro"])), (e()(), l["\u0275eld"](14, 0, null, null, 26, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](15, 0, null, null, 25, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](16, 0, null, null, 24, "div", [
                    ["class", "video-text d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](17, 0, null, null, 11, "div", [
                    ["class", "d-flex"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, ct)), l["\u0275did"](19, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, dt)), l["\u0275did"](21, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, ft)), l["\u0275did"](23, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](24, 0, null, null, 4, "div", [
                    ["class", "pl-2 pt-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, ht)), l["\u0275did"](26, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, gt)), l["\u0275did"](28, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](29, 0, null, null, 1, "h6", [
                    ["class", "pt-3"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](30, null, [" ", " "])), (e()(), l["\u0275eld"](31, 0, null, null, 1, "h6", [], null, null, null, null, null)), (e()(), l["\u0275ted"](32, null, ["", ""])), (e()(), l["\u0275and"](16777216, null, null, 1, null, vt)), l["\u0275did"](34, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](35, 0, null, null, 5, "div", [
                    ["class", "my-3"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](36, 0, null, null, 4, "div", [
                    ["class", "form-row"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, yt)), l["\u0275did"](38, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, bt)), l["\u0275did"](40, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component,
                        l = e(t, 5, 0, !n.getInfoValue("intro", !0));
                    e(t, 4, 0, "float-right video-div position-relative", l), e(t, 8, 0, n.sources.length), e(t, 19, 0, !n.doctorProfile.thumbnail && "male" == n.doctorProfile.gender), e(t, 21, 0, !n.doctorProfile.thumbnail && "male" !== n.doctorProfile.gender), e(t, 23, 0, n.doctorProfile.thumbnail), e(t, 26, 0, n.doctorProfile.name), e(t, 28, 0, n.doctorProfile.registrationNumber || (null == n.doctorProfile.profile || null == n.doctorProfile.profile.info ? null : n.doctorProfile.profile.info.mciRegistrationNumber)), e(t, 34, 0, n.getInfoValue("briefInformation", !0)), e(t, 38, 0, n.getInfoValue("experience", !0)), e(t, 40, 0, null == n.getComments ? null : n.getComments.totalCount)
                }), (function(e, t) {
                    var n = t.component;
                    e(t, 30, 0, n.arrayToString(n.getInfoValue("degrees", !1))), e(t, 32, 0, n.doctorProfile.specialityName)
                }))
            }

            function wt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](16777216, null, null, 1, null, Tt)), l["\u0275did"](1, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](0, null, null, 0))], (function(e, t) {
                    e(t, 1, 0, t.component.getInfoValue("intro", !0))
                }), null)
            }

            function St(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function Et(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0, null, St))], null, null)
            }

            function _t(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 12, "div", [
                    ["class", "main-background"]
                ], null, null, null, null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    "screen-hide": 0
                }), (e()(), l["\u0275and"](16777216, null, null, 1, null, at)), l["\u0275did"](4, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"],
                    ngIfElse: [1, "ngIfElse"]
                }, null), (e()(), l["\u0275eld"](5, 0, null, null, 0, "div", [
                    ["class", "mob-border-bottom"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](0, [
                    ["show_video", 2]
                ], null, 0, null, wt)), (e()(), l["\u0275eld"](7, 0, null, null, 3, "section", [
                    ["class", "pt-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](8, 0, null, null, 2, null, null, null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Et)), l["\u0275did"](10, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutlet: [0, "ngTemplateOutlet"]
                }, null), (e()(), l["\u0275eld"](11, 0, null, null, 1, "div", [
                    ["class", "watsAppImg cursor"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.openWhatsApp() && l), l
                }), null, null)), (e()(), l["\u0275eld"](12, 0, null, null, 0, "img", [
                    ["src", "assets/default/images/whatsapp.svg"]
                ], null, null, null, null, null))], (function(e, t) {
                    var n = t.component,
                        i = e(t, 2, 0, !n.screenVisible);
                    e(t, 1, 0, "main-background", i), e(t, 4, 0, !n.getInfoValue("intro", !0), l["\u0275nov"](t, 6)), e(t, 10, 0, l["\u0275nov"](t.parent, 9))
                }), null)
            }

            function Ct(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "img", [
                    ["height", "85px"],
                    ["src", "assets/default/images/svg-img/new-img/In-Clinic_b.png"]
                ], null, null, null, null, null))], null, null)
            }

            function Rt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "img", [
                    ["height", "85px"],
                    ["src", "assets/default/images/svg-img/new-img/In-Clinic.png"]
                ], null, null, null, null, null))], null, null)
            }

            function It(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 9, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 8, "div", [
                    ["class", "box-call"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.consultSelected("inconsult") && l), l
                }), null, null)), l["\u0275did"](2, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](3, {
                    "active-box": 0
                }), (e()(), l["\u0275and"](16777216, null, null, 1, null, Ct)), l["\u0275did"](5, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Rt)), l["\u0275did"](7, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](8, 0, null, null, 1, "span", [
                    ["class", "f-14 pt-2 in-clnc"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["In-Clinic"]))], (function(e, t) {
                    var n = t.component,
                        l = e(t, 3, 0, "inconsult" === n.consultType);
                    e(t, 2, 0, "box-call", l), e(t, 5, 0, "inconsult" != n.consultType), e(t, 7, 0, "inconsult" == n.consultType)
                }), null)
            }

            function kt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "img", [
                    ["height", "85px"],
                    ["src", "assets/default/images/svg-img/new-img/Audio.png"]
                ], null, null, null, null, null))], null, null)
            }

            function At(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "img", [
                    ["height", "85px"],
                    ["src", "assets/default/images/svg-img/new-img/Audio_b.png"]
                ], null, null, null, null, null))], null, null)
            }

            function Pt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 11, "div", [], null, null, null, null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngClass: [0, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    "ml-4": 0
                }), (e()(), l["\u0275eld"](3, 0, null, null, 8, "div", [
                    ["class", "box-call"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.consultSelected("teleconsult") && l), l
                }), null, null)), l["\u0275did"](4, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](5, {
                    "active-box": 0
                }), (e()(), l["\u0275and"](16777216, null, null, 1, null, kt)), l["\u0275did"](7, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, At)), l["\u0275did"](9, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](10, 0, null, null, 1, "span", [
                    ["class", "f-14 pt-2 span-txt"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Audio"]))], (function(e, t) {
                    var n = t.component,
                        l = e(t, 2, 0, 0 !== n.allAddresses.length);
                    e(t, 1, 0, l);
                    var i = e(t, 5, 0, "teleconsult" === n.consultType);
                    e(t, 4, 0, "box-call", i), e(t, 7, 0, "teleconsult" == n.consultType), e(t, 9, 0, "teleconsult" !== n.consultType)
                }), null)
            }

            function xt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "img", [
                    ["height", "85px"],
                    ["src", "assets/default/images/svg-img/new-img/video_b.png"]
                ], null, null, null, null, null))], null, null)
            }

            function Dt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "img", [
                    ["height", "85px"],
                    ["src", "assets/default/images/svg-img/new-img/video.png"]
                ], null, null, null, null, null))], null, null)
            }

            function Ot(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 11, "div", [], null, null, null, null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngClass: [0, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    "ml-4": 0
                }), (e()(), l["\u0275eld"](3, 0, null, null, 8, "div", [
                    ["class", "box-call"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.consultSelected("videoconsult") && l), l
                }), null, null)), l["\u0275did"](4, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](5, {
                    "active-box": 0
                }), (e()(), l["\u0275and"](16777216, null, null, 1, null, xt)), l["\u0275did"](7, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Dt)), l["\u0275did"](9, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](10, 0, null, null, 1, "span", [
                    ["class", "f-14 pt-2 span-txt"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Video"]))], (function(e, t) {
                    var n = t.component,
                        l = e(t, 2, 0, 0 !== n.allAddresses.length || n.isTeleconsult);
                    e(t, 1, 0, l);
                    var i = e(t, 5, 0, "videoconsult" === n.consultType);
                    e(t, 4, 0, "box-call", i), e(t, 7, 0, "videoconsult" !== n.consultType), e(t, 9, 0, "videoconsult" == n.consultType)
                }), null)
            }

            function Lt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 7, "div", [
                    ["class", "d-flex"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, It)), l["\u0275did"](2, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Pt)), l["\u0275did"](4, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Ot)), l["\u0275did"](6, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](7, 0, null, null, 0, "div", [], null, null, null, null, null))], (function(e, t) {
                    var n = t.component;
                    e(t, 2, 0, n.allAddresses.length > 0), e(t, 4, 0, n.isTeleconsult), e(t, 6, 0, n.isVideoconsult)
                }), null)
            }

            function Mt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function Nt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0, null, Mt))], null, null)
            }

            function Ft(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function jt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0, null, Ft))], null, null)
            }

            function Bt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function Ut(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0, null, Bt))], null, null)
            }

            function Vt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function Gt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0, null, Vt))], null, null)
            }

            function Kt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function Ht(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0, null, Kt))], null, null)
            }

            function qt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "u", [
                    ["class", "f-10 readMore"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.showMore("gallery") && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, ["Show more"]))], null, null)
            }

            function Yt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "div", [
                    ["class", "mt-2 p-0"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var i = !0;
                    return "click" === t && (i = !1 !== e.component.opengalleryImgModal(l["\u0275nov"](e.parent.parent.parent, 21), e.context.index) && i), i
                }), null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 0, "img", [
                    ["class", "img-fluid cursor"]
                ], [
                    [8, "src", 4]
                ], null, null, null, null))], null, (function(e, t) {
                    e(t, 1, 0, null == t.context.$implicit ? null : t.context.$implicit.thumbnail)
                }))
            }

            function $t(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 14, "div", [
                    ["class", "gallery p-mob-edu-gal"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 13, "div", [
                    ["class", "big-borders row d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 12, "div", [
                    ["class", "p-3"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 11, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 10, "div", [
                    ["class", "d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 4, "div", [
                    ["class", "d-flex justify-content-between"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](6, 0, null, null, 1, "b", [
                    ["class", "f-16"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Gallery"])), (e()(), l["\u0275and"](16777216, null, null, 1, null, qt)), l["\u0275did"](9, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](10, 0, null, null, 4, "div", [
                    ["class", "gallery-img-div"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](11, 0, null, null, 3, "div", [
                    ["class", "form-row"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 2, null, Yt)), l["\u0275did"](13, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null), l["\u0275pid"](0, s.SlicePipe, [])], (function(e, t) {
                    var n, i = t.component;
                    e(t, 9, 0, i.showMoreGal && i.isShowVisible("galleries")), e(t, 13, 0, l["\u0275unv"](t, 13, 0, l["\u0275nov"](t, 14).transform(null == (n = i.getInfoValue("galleries", !0)) ? null : n.galleries, 0, i.showMoreGal)))
                }), null)
            }

            function zt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function Wt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0, null, zt))], null, null)
            }

            function Xt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 31, "div", [
                    ["class", "container"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 30, "div", [
                    ["class", "form-row"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 14, "div", [
                    ["class", "col-md-8 d-flex flex-column"]
                ], null, null, null, null, null)), l["\u0275did"](3, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](4, {
                    "col-md-12": 0
                }), (e()(), l["\u0275eld"](5, 0, null, null, 3, "div", [
                    ["class", "d-none-lap"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](6, 0, null, null, 2, null, null, null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Nt)), l["\u0275did"](8, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutlet: [0, "ngTemplateOutlet"]
                }, null), (e()(), l["\u0275eld"](9, 0, null, null, 3, "div", [
                    ["class", "d-none-mob"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](10, 0, null, null, 2, null, null, null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, jt)), l["\u0275did"](12, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutlet: [0, "ngTemplateOutlet"]
                }, null), (e()(), l["\u0275eld"](13, 0, null, null, 3, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](14, 0, null, null, 2, null, null, null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Ut)), l["\u0275did"](16, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutlet: [0, "ngTemplateOutlet"]
                }, null), (e()(), l["\u0275eld"](17, 0, null, null, 14, "div", [
                    ["class", "col-md-4 d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](18, 0, null, null, 3, "div", [
                    ["class", "d-none-mob"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](19, 0, null, null, 2, null, null, null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Gt)), l["\u0275did"](21, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutlet: [0, "ngTemplateOutlet"]
                }, null), (e()(), l["\u0275eld"](22, 0, null, null, 3, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](23, 0, null, null, 2, null, null, null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Ht)), l["\u0275did"](25, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutlet: [0, "ngTemplateOutlet"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, $t)), l["\u0275did"](27, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](28, 0, null, null, 3, "div", [
                    ["class", "d-none-lap pad-btm"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](29, 0, null, null, 2, null, null, null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Wt)), l["\u0275did"](31, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutlet: [0, "ngTemplateOutlet"]
                }, null)], (function(e, t) {
                    var n, i, r = t.component,
                        s = e(t, 4, 0, !(null != (n = r.getInfoValue("clinicLocations", !0)) && n.clinicLocations));
                    e(t, 3, 0, "col-md-8 d-flex flex-column", s), e(t, 8, 0, l["\u0275nov"](t.parent, 11)), e(t, 12, 0, l["\u0275nov"](t.parent, 12)), e(t, 16, 0, l["\u0275nov"](t.parent, 10)), e(t, 21, 0, l["\u0275nov"](t.parent, 11)), e(t, 25, 0, l["\u0275nov"](t.parent, 13)), e(t, 27, 0, null == (i = r.getInfoValue("galleries", !0)) ? null : i.galleries), e(t, 31, 0, l["\u0275nov"](t.parent, 19))
                }), null)
            }

            function Zt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 4, "div", [
                    ["class", "d-flex"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 1, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 0, "img", [
                    ["height", "11px"],
                    ["src", "assets/images/verified.png"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 1, "span", [
                    ["class", "f-12 pl-2 readMoreTextService"],
                    ["style", "-webkit-box-orient: vertical"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](4, null, ["", ""]))], null, (function(e, t) {
                    e(t, 4, 0, t.context.$implicit)
                }))
            }

            function Jt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "a", [
                    ["class", "f-12 readMore"]
                ], [
                    [8, "href", 4]
                ], null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Know more"]))], null, (function(e, t) {
                    e(t, 0, 0, t.parent.parent.context.$implicit.redirectUrl)
                }))
            }

            function Qt(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "a", [
                    ["class", "f-12 readMore"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.reDirectToEnquiry(e.parent.parent.context.$implicit) && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, ["Know more"]))], null, null)
            }

            function en(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 16, "div", [
                    ["class", "mt-4 cursor"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.reDirectToEnquiry(e.parent.context.$implicit) && l), l
                }), null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 15, "div", [
                    ["class", "card service-card"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 0, "img", [
                    ["alt", "Card image cap"],
                    ["class", "card-img"]
                ], [
                    [8, "src", 4]
                ], null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 13, "div", [
                    ["class", "d-flex flex-column mb-2 text-left p-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 4, "div", [
                    ["class", "mb-1"],
                    ["style", "height: 82px"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 1, "b", [
                    ["class", "f-14"],
                    ["style", "\n                        display: -webkit-box;\n                        -webkit-line-clamp: 1;\n                        overflow: hidden;\n                        -webkit-box-orient: vertical;\n                      "]
                ], [
                    [8, "title", 0]
                ], null, null, null, null)), (e()(), l["\u0275ted"](6, null, ["", ""])), (e()(), l["\u0275eld"](7, 0, null, null, 1, "span", [
                    ["class", "f-10 color-grey"],
                    ["style", "\n                        display: -webkit-box;\n                        -webkit-line-clamp: 2;\n                        overflow: hidden;\n                        -webkit-box-orient: vertical;\n                      "]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](8, null, ["", ""])), (e()(), l["\u0275eld"](9, 0, null, null, 7, "div", [
                    ["class", "mb-2 flex-column d-flex"],
                    ["style", "height: 88px"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 2, null, Zt)), l["\u0275did"](11, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null), l["\u0275pid"](0, s.SlicePipe, []), (e()(), l["\u0275and"](16777216, null, null, 1, null, Jt)), l["\u0275did"](14, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Qt)), l["\u0275did"](16, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    e(t, 11, 0, l["\u0275unv"](t, 11, 0, l["\u0275nov"](t, 12).transform(null == t.parent.context.$implicit ? null : t.parent.context.$implicit.keyPoints, 0, 3))), e(t, 14, 0, t.parent.context.$implicit.redirectUrl), e(t, 16, 0, !t.parent.context.$implicit.redirectUrl)
                }), (function(e, t) {
                    e(t, 2, 0, t.parent.context.$implicit.thumbnailImage), e(t, 5, 0, l["\u0275inlineInterpolate"](1, "", t.parent.context.$implicit.planName, "")), e(t, 6, 0, t.parent.context.$implicit.planName), e(t, 8, 0, t.parent.context.$implicit.description)
                }))
            }

            function tn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 1, null, en)), l["\u0275did"](1, 16384, [
                    [1, 4]
                ], 0, x, [l.TemplateRef], null, null)], null, null)
            }

            function nn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "u", [
                    ["class", "f-10 readMore"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.showMoreServices() && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, ["Show more"]))], null, null)
            }

            function ln(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 5, "div", [
                    ["class", "d-flex"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 1, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 0, "img", [
                    ["height", "11px"],
                    ["src", "assets/images/verified.png"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 2, "div", [
                    ["class", "pt-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 1, "span", [
                    ["class", "f-12 pl-2 readMoreTextService"],
                    ["style", "-webkit-box-orient: vertical"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](5, null, ["", ""]))], null, (function(e, t) {
                    e(t, 5, 0, t.context.$implicit)
                }))
            }

            function rn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "a", [
                    ["class", "f-12 readMore pt-1"]
                ], [
                    [8, "href", 4]
                ], null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Know more"]))], null, (function(e, t) {
                    e(t, 0, 0, t.parent.context.$implicit.redirectUrl)
                }))
            }

            function sn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "a", [
                    ["class", "f-12 readMore pt-1"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.reDirectToEnquiry(e.parent.context.$implicit) && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, ["Know more"]))], null, null)
            }

            function on(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 17, "div", [
                    ["class", "col-6"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 16, "div", [
                    ["class", "my-3 cursor"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.reDirectToEnquiry(e.context.$implicit) && l), l
                }), null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 15, "div", [
                    ["class", "card service-card-m"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 0, "img", [
                    ["alt", "Card image cap"],
                    ["class", "card-img"]
                ], [
                    [8, "src", 4]
                ], null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 13, "div", [
                    ["class", "d-flex flex-column text-left p-2 res-h-fix"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 4, "div", [
                    ["class", "mb-1"],
                    ["style", "height: 50px"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](6, 0, null, null, 1, "b", [
                    ["class", "f-14"],
                    ["style", "\n                      display: -webkit-box;\n                      -webkit-line-clamp: 1;\n                      overflow: hidden;\n                      -webkit-box-orient: vertical;\n                    "]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](7, null, ["", ""])), (e()(), l["\u0275eld"](8, 0, null, null, 1, "span", [
                    ["class", "f-10 color-grey"],
                    ["style", "\n                      display: -webkit-box;\n                      -webkit-line-clamp: 2;\n                      overflow: hidden;\n                      -webkit-box-orient: vertical;\n                    "]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](9, null, ["", ""])), (e()(), l["\u0275eld"](10, 0, null, null, 7, "div", [
                    ["class", "d-flex flex-column"],
                    ["style", "height: 72px"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 2, null, ln)), l["\u0275did"](12, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null), l["\u0275pid"](0, s.SlicePipe, []), (e()(), l["\u0275and"](16777216, null, null, 1, null, rn)), l["\u0275did"](15, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, sn)), l["\u0275did"](17, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    e(t, 12, 0, l["\u0275unv"](t, 12, 0, l["\u0275nov"](t, 13).transform(null == t.context.$implicit ? null : t.context.$implicit.keyPoints, 0, 3))), e(t, 15, 0, t.context.$implicit.redirectUrl), e(t, 17, 0, !t.context.$implicit.redirectUrl)
                }), (function(e, t) {
                    e(t, 3, 0, t.context.$implicit.thumbnailImage), e(t, 7, 0, t.context.$implicit.planName), e(t, 9, 0, t.context.$implicit.description)
                }))
            }

            function an(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 9, "div", [
                    ["class", "form-row d-none-lap"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 5, "div", [
                    ["class", "col-12"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 4, "div", [
                    ["class", "d-flex justify-content-between"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 1, "b", [
                    ["class", "f-14"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Doctor Services"])), (e()(), l["\u0275and"](16777216, null, null, 1, null, nn)), l["\u0275did"](6, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 2, null, on)), l["\u0275did"](8, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null), l["\u0275pid"](0, s.SlicePipe, [])], (function(e, t) {
                    var n = t.component;
                    e(t, 6, 0, (null == n.serviceDetails ? null : n.serviceDetails.plans.length) > 2 && n.serviceCount <= 2), e(t, 8, 0, l["\u0275unv"](t, 8, 0, l["\u0275nov"](t, 9).transform(null == n.serviceDetails ? null : n.serviceDetails.plans, 0, n.serviceCount)))
                }), null)
            }

            function un(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 17, "div", [
                    ["class", "mt-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 16, "div", [
                    ["class", "big-borders"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 13, "div", [
                    ["class", "p-mob d-none-mob"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 7, "div", [
                    ["class", ""]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 1, "b", [
                    ["class", "f-16"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Doctor Services"])), (e()(), l["\u0275eld"](6, 0, null, null, 4, "div", [
                    ["class", "float-right"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](7, 0, null, null, 1, "span", [
                    ["style", "cursor: pointer"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.swipPrev() && l), l
                }), null, null)), (e()(), l["\u0275eld"](8, 0, null, null, 0, "img", [
                    ["height", "20px"],
                    ["src", "assets/images/c_chevron_left.png"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](9, 0, null, null, 1, "span", [
                    ["style", "cursor: pointer; margin-left: 10px"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.swipNext() && l), l
                }), null, null)), (e()(), l["\u0275eld"](10, 0, null, null, 0, "img", [
                    ["height", "20px"],
                    ["src", "assets/images/c_chevron_right.png"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](11, 0, null, null, 4, "swiper", [
                    ["id", "swip"]
                ], [
                    [8, "className", 0]
                ], [
                    [null, "swiper"],
                    [null, "slideChange"]
                ], (function(e, t, n) {
                    var l = !0,
                        i = e.component;
                    return "swiper" === t && (l = !1 !== i.onSwiper(n) && l), "slideChange" === t && (l = !1 !== i.onSlideChange() && l), l
                }), X, L)), l["\u0275did"](12, 4964352, null, 1, D, [l.NgZone, l.ElementRef, l.ChangeDetectorRef, l.PLATFORM_ID], {
                    spaceBetween: [0, "spaceBetween"],
                    slidesPerView: [1, "slidesPerView"],
                    id: [2, "id"],
                    navigation: [3, "navigation"]
                }, {
                    s_slideChange: "slideChange",
                    s_swiper: "swiper"
                }), l["\u0275qud"](603979776, 1, {
                    slidesEl: 1
                }), (e()(), l["\u0275and"](16777216, null, null, 1, null, tn)), l["\u0275did"](15, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, an)), l["\u0275did"](17, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 12, 0, 15, 3.5, "swip", l["\u0275EMPTY_MAP"]), e(t, 15, 0, null == n.serviceDetails ? null : n.serviceDetails.plans), e(t, 17, 0, null == n.serviceDetails ? null : n.serviceDetails.plans.length)
                }), (function(e, t) {
                    e(t, 11, 0, l["\u0275nov"](t, 12).containerClasses)
                }))
            }

            function cn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "mob-border-bottom"]
                ], null, null, null, null, null))], null, null)
            }

            function dn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function fn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0, null, dn))], null, null)
            }

            function pn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](16777216, null, null, 1, null, un)), l["\u0275did"](1, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, cn)), l["\u0275did"](3, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](4, 0, null, null, 3, "div", [
                    ["class", "d-none-mob"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 2, null, null, null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, fn)), l["\u0275did"](7, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutlet: [0, "ngTemplateOutlet"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, null == n.serviceDetails ? null : n.serviceDetails.plans.length), e(t, 3, 0, null == n.serviceDetails ? null : n.serviceDetails.plans.length), e(t, 7, 0, l["\u0275nov"](t.parent, 19))
                }), null)
            }

            function hn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "u", [
                    ["class", "f-10 readMore"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.showMore("clinicInfo") && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, ["Show more"]))], null, null)
            }

            function gn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 4, "div", [
                    ["class", "d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 1, "b", [
                    ["class", "f-14"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](2, null, ["", ""])), (e()(), l["\u0275eld"](3, 0, null, null, 1, "span", [
                    ["class", "f-12"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](4, null, ["", " - ", ""]))], null, (function(e, t) {
                    e(t, 2, 0, t.context.$implicit.daysOfWeek), e(t, 4, 0, t.context.$implicit.time[0], t.context.$implicit.time[1])
                }))
            }

            function mn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 18, null, null, null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 3, "b", [
                    ["class", "f-14 pt-2"]
                ], null, null, null, null, null)), l["\u0275did"](2, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](3, {
                    "pt-4": 0
                }), (e()(), l["\u0275ted"](4, null, ["", ""])), (e()(), l["\u0275eld"](5, 0, null, null, 1, "span", [
                    ["class", "f-12 color-grey pt-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](6, null, ["", ""])), (e()(), l["\u0275eld"](7, 0, null, null, 2, "div", [
                    ["class", "d-flex pt-4 justify-content-between"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, gn)), l["\u0275did"](9, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null), (e()(), l["\u0275eld"](10, 0, null, null, 8, "div", [
                    ["class", "form-row d-flex justify-content-between pt-3"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](11, 0, null, null, 4, "div", [
                    ["class", "col-6"]
                ], null, null, null, null, null)), l["\u0275did"](12, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](13, {
                    "col-12": 0
                }), (e()(), l["\u0275eld"](14, 0, null, null, 1, "button", [
                    ["class", "btn color-navy-back w-100 f-12"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.callClinic(e.context.$implicit.contacts[0]) && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, [" Call Clinic "])), (e()(), l["\u0275eld"](16, 0, null, null, 2, "div", [
                    ["class", "col-6"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](17, 0, null, null, 1, "button", [
                    ["class", "btn color-navy-outline w-100 f-12"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.openGetDirectionLink(null == e.context.$implicit ? null : e.context.$implicit.googleMapsLocation, null == e.context.$implicit ? null : e.context.$implicit.clinicAddress) && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, [" Get Direction "]))], (function(e, t) {
                    var n = e(t, 3, 0, t.context.index > 0);
                    e(t, 2, 0, "f-14 pt-2", n), e(t, 9, 0, null == t.context.$implicit ? null : t.context.$implicit.daysAvailable);
                    var l = e(t, 13, 0, !(null != t.context.$implicit && t.context.$implicit.clinicAddress));
                    e(t, 12, 0, "col-6", l)
                }), (function(e, t) {
                    e(t, 4, 0, null == t.context.$implicit ? null : t.context.$implicit.clinicName), e(t, 6, 0, null == t.context.$implicit ? null : t.context.$implicit.clinicAddress)
                }))
            }

            function vn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 11, "div", [
                    ["class", "d-flex flex-column big-borders"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 10, "div", [
                    ["class", "p-mob my-3"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 9, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 8, "div", [
                    ["class", "d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 4, "div", [
                    ["class", "d-flex justify-content-between"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 1, "b", [
                    ["class", "f-16"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Clinic Info"])), (e()(), l["\u0275and"](16777216, null, null, 1, null, hn)), l["\u0275did"](8, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 2, null, mn)), l["\u0275did"](10, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null), l["\u0275pid"](0, s.SlicePipe, [])], (function(e, t) {
                    var n, i = t.component,
                        r = null;
                    e(t, 8, 0, i.showMoreClicnicInf && (null == (r = i.getInfoValue("clinicLocations", !0)) ? null : r.clinicLocations.length) > 1), e(t, 10, 0, l["\u0275unv"](t, 10, 0, l["\u0275nov"](t, 11).transform(null == (n = i.getInfoValue("clinicLocations", !0)) ? null : n.clinicLocations, 0, i.showMoreClicnicInf)))
                }), null)
            }

            function yn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "mob-border-bottom"]
                ], null, null, null, null, null))], null, null)
            }

            function bn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](16777216, null, null, 1, null, vn)), l["\u0275did"](1, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, yn)), l["\u0275did"](3, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](0, null, null, 0))], (function(e, t) {
                    var n, l, i = t.component;
                    e(t, 1, 0, (null == (n = i.getInfoValue("clinicLocations", !0)) ? null : n.clinicLocations.length) > 0), e(t, 3, 0, (null == (l = i.getInfoValue("clinicLocations", !0)) ? null : l.clinicLocations.length) > 0)
                }), null)
            }

            function Tn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "main-imgDiv"],
                    ["style", "\n            background-image: url('assets/default/images/doctor_male.svg');\n          "]
                ], null, null, null, null, null))], null, null)
            }

            function wn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "main-imgDiv"],
                    ["style", "\n            background-image: url('assets/default/images/doctor_female.svg');\n          "]
                ], null, null, null, null, null))], null, null)
            }

            function Sn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "main-imgDiv"]
                ], [
                    [4, "background-image", null]
                ], null, null, null, null))], null, (function(e, t) {
                    e(t, 0, 0, "url(" + t.component.doctorProfile.thumbnail + ")")
                }))
            }

            function En(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "b", [
                    ["class", "f-14 row ml-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, ["Dr. ", ""]))], null, (function(e, t) {
                    e(t, 1, 0, (t.component.doctorProfile.name || l["\u0275EMPTY_MAP"]).name)
                }))
            }

            function _n(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 13, "div", [
                    ["class", "col-3"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 1, "b", [
                    ["class", "f-14 row justify-content-end rating-color"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](2, null, ["", ""])), (e()(), l["\u0275eld"](3, 0, null, null, 1, "div", [
                    ["class", "row justify-content-end"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 0, "img", [
                    ["height", "30"],
                    ["src", "assets/default/images/googleReview.svg"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 8, "div", [
                    ["class", "row justify-content-end"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](6, 0, null, null, 1, "span", [
                    ["class", "rating-text mr-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Rating"])), (e()(), l["\u0275eld"](8, 0, null, null, 5, "p-rating", [
                    ["readonly", "true"],
                    ["stars", "5"]
                ], [
                    [2, "ng-untouched", null],
                    [2, "ng-touched", null],
                    [2, "ng-pristine", null],
                    [2, "ng-dirty", null],
                    [2, "ng-valid", null],
                    [2, "ng-invalid", null],
                    [2, "ng-pending", null]
                ], [
                    [null, "ngModelChange"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "ngModelChange" === t && (l = !1 !== (e.component.averageRating = n) && l), l
                }), Z.b, Z.a)), l["\u0275did"](9, 114688, null, 0, J.Rating, [l.ChangeDetectorRef], {
                    readonly: [0, "readonly"],
                    stars: [1, "stars"],
                    cancel: [2, "cancel"]
                }, null), l["\u0275prd"](1024, null, Q.NG_VALUE_ACCESSOR, (function(e) {
                    return [e]
                }), [J.Rating]), l["\u0275did"](11, 671744, null, 0, Q.NgModel, [
                    [8, null],
                    [8, null],
                    [8, null],
                    [6, Q.NG_VALUE_ACCESSOR]
                ], {
                    model: [0, "model"]
                }, {
                    update: "ngModelChange"
                }), l["\u0275prd"](2048, null, Q.NgControl, null, [Q.NgModel]), l["\u0275did"](13, 16384, null, 0, Q.NgControlStatus, [
                    [4, Q.NgControl]
                ], null, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 9, 0, "true", "5", !1), e(t, 11, 0, n.averageRating)
                }), (function(e, t) {
                    e(t, 2, 0, t.component.averageRating), e(t, 8, 0, l["\u0275nov"](t, 13).ngClassUntouched, l["\u0275nov"](t, 13).ngClassTouched, l["\u0275nov"](t, 13).ngClassPristine, l["\u0275nov"](t, 13).ngClassDirty, l["\u0275nov"](t, 13).ngClassValid, l["\u0275nov"](t, 13).ngClassInvalid, l["\u0275nov"](t, 13).ngClassPending)
                }))
            }

            function Cn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [
                    ["class", "f-12 green fw"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, ["Fees \u20b9 ", ""]))], null, (function(e, t) {
                    e(t, 1, 0, t.component.fee)
                }))
            }

            function Rn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [
                    ["class", "pt-1 f-12 green fw"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, ["", ""]))], null, (function(e, t) {
                    e(t, 1, 0, t.component.getInClinicFees())
                }))
            }

            function In(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "p", [
                    ["class", "pt-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, [" (pay at clinic)"]))], null, null)
            }

            function kn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [
                    ["class", "pt-1 f-12 fw"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, ["", ""]))], null, (function(e, t) {
                    e(t, 1, 0, t.component.getInClinicFees())
                }))
            }

            function An(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 6, "span", [
                    ["class", "color-blue in-clinic fw pt-1"],
                    ["style", "float: right"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Rn)), l["\u0275did"](2, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, In)), l["\u0275did"](4, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, kn)), l["\u0275did"](6, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 2, 0, "Fees : Pay at clinic" !== n.getInClinicFees()), e(t, 4, 0, "Fees : Pay at clinic" !== n.getInClinicFees()), e(t, 6, 0, "Fees : Pay at clinic" == n.getInClinicFees())
                }), null)
            }

            function Pn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function xn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0, null, Pn))], null, null)
            }

            function Dn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 2, "div", [
                    ["class", "d-flex"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 1, "b", [
                    ["class", "f-16"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Clinic Name"]))], null, null)
            }

            function On(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 2, "div", [
                    ["class", "d-flex flex-column mt-4 ml-1 row"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Dn)), l["\u0275did"](2, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 2, 0, n.allAddresses.length > 0 && "inconsult" == n.consultType)
                }), null)
            }

            function Ln(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 5, "span", [
                    ["class", ""]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.selectAddress(e.context.$implicit) && l), l
                }), null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    circle: 0,
                    "circle-white": 1
                }), (e()(), l["\u0275eld"](3, 0, null, null, 2, "span", [
                    ["class", ""]
                ], null, null, null, null, null)), l["\u0275did"](4, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](5, {
                    "white-circle": 0,
                    "white-gray": 1
                }), (e()(), l["\u0275eld"](6, 0, null, null, 3, "span", [
                    ["class", "ml-4"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.selectAddress(e.context.$implicit) && l), l
                }), null, null)), l["\u0275did"](7, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](8, {
                    "white-circle-text": 0,
                    "white-gray-text": 1
                }), (e()(), l["\u0275ted"](9, null, [" ", ""]))], (function(e, t) {
                    var n = t.component,
                        l = e(t, 2, 0, t.context.$implicit.mappingId == n.selectedAddress, t.context.$implicit.mappingId !== n.selectedAddress);
                    e(t, 1, 0, "", l);
                    var i = e(t, 5, 0, t.context.$implicit.mappingId == n.selectedAddress, t.context.$implicit.mappingId !== n.selectedAddress);
                    e(t, 4, 0, "", i);
                    var r = e(t, 8, 0, t.context.$implicit.mappingId == n.selectedAddress, t.context.$implicit.mappingId !== n.selectedAddress);
                    e(t, 7, 0, "ml-4", r)
                }), (function(e, t) {
                    e(t, 9, 0, t.context.$implicit.address)
                }))
            }

            function Mn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 7, "div", [
                    ["class", "mb-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 6, "p-virtualScroller", [
                    ["scrollHeight", "150px"]
                ], null, null, null, fe, oe)), l["\u0275did"](2, 1097728, null, 3, ee.VirtualScroller, [l.ElementRef], {
                    scrollHeight: [0, "scrollHeight"],
                    value: [1, "value"]
                }, null), l["\u0275qud"](335544320, 2, {
                    header: 0
                }), l["\u0275qud"](335544320, 3, {
                    footer: 0
                }), l["\u0275qud"](603979776, 4, {
                    templates: 1
                }), (e()(), l["\u0275and"](0, null, null, 1, null, Ln)), l["\u0275did"](7, 16384, [
                    [4, 4]
                ], 0, ie.PrimeTemplate, [l.TemplateRef], {
                    name: [0, "name"]
                }, null)], (function(e, t) {
                    e(t, 2, 0, "150px", t.component.allAddresses), e(t, 7, 0, "item")
                }), null)
            }

            function Nn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "pb-2"],
                    ["style", "border-bottom: 1px solid #d8d8d8;"]
                ], null, null, null, null, null))], null, null)
            }

            function Fn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 14, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 13, "div", [
                    ["class", "align-text-img mb-2"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.selectAddress(e.context.$implicit) && l), l
                }), null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 5, "span", [], null, null, null, null, null)), l["\u0275did"](3, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngClass: [0, "ngClass"]
                }, null), l["\u0275pod"](4, {
                    circle: 0,
                    "circle-white": 1
                }), (e()(), l["\u0275eld"](5, 0, null, null, 2, "span", [], null, null, null, null, null)), l["\u0275did"](6, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngClass: [0, "ngClass"]
                }, null), l["\u0275pod"](7, {
                    "white-circle": 0,
                    "white-gray": 1
                }), (e()(), l["\u0275eld"](8, 0, null, null, 4, "span", [], null, null, null, null, null)), l["\u0275did"](9, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngClass: [0, "ngClass"]
                }, null), l["\u0275pod"](10, {
                    "white-circle-text": 0,
                    "white-gray-text": 1
                }), (e()(), l["\u0275eld"](11, 0, null, null, 1, "span", [
                    ["class", "ml-4 display-set"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](12, null, [" ", " "])), (e()(), l["\u0275and"](16777216, null, null, 1, null, Nn)), l["\u0275did"](14, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component,
                        l = e(t, 4, 0, t.context.$implicit.mappingId == n.selectedAddress, t.context.$implicit.mappingId !== n.selectedAddress);
                    e(t, 3, 0, l);
                    var i = e(t, 7, 0, t.context.$implicit.mappingId == n.selectedAddress, t.context.$implicit.mappingId !== n.selectedAddress);
                    e(t, 6, 0, i);
                    var r = e(t, 10, 0, t.context.$implicit.mappingId == n.selectedAddress, t.context.$implicit.mappingId !== n.selectedAddress);
                    e(t, 9, 0, r), e(t, 14, 0, n.allAddresses.length - 1 > t.context.index)
                }), (function(e, t) {
                    e(t, 12, 0, t.context.$implicit.address)
                }))
            }

            function jn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 2, "div", [
                    ["class", "mb-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Fn)), l["\u0275did"](2, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null)], (function(e, t) {
                    e(t, 2, 0, t.component.allAddresses)
                }), null)
            }

            function Bn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 5, "div", [
                    ["class", "d-flex flex-column p-3 row"],
                    ["style", "overflow: auto;padding-bottom: 0 !important;"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 4, "div", [
                    ["class", "col-12 mt-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Mn)), l["\u0275did"](3, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, jn)), l["\u0275did"](5, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 3, 0, n.allAddresses.length >= 4), e(t, 5, 0, n.allAddresses.length < 4)
                }), null)
            }

            function Un(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "d-flex flex-column row m-0 pt-4 mb-3"],
                    ["style", "border-bottom: 1px solid #d8d8d8"]
                ], null, null, null, null, null))], null, null)
            }

            function Vn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 19, "div", [
                    ["class", "d-flex flex-column p-3 row"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 8, "div", [
                    ["class", "d-flex justify justify-content-between row"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 2, "div", [
                    ["class", "col-7"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 1, "b", [
                    ["class", "f-16"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Book Appointment"])), (e()(), l["\u0275eld"](5, 0, null, null, 4, "div", [
                    ["class", "col-5 p-0"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Cn)), l["\u0275did"](7, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, An)), l["\u0275did"](9, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](10, 0, null, null, 3, "div", [
                    ["class", "pt-3"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](11, 0, null, null, 2, null, null, null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, xn)), l["\u0275did"](13, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutlet: [0, "ngTemplateOutlet"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, On)), l["\u0275did"](15, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Bn)), l["\u0275did"](17, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Un)), l["\u0275did"](19, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 7, 0, "inconsult" != n.consultType), e(t, 9, 0, "inconsult" == n.consultType), e(t, 13, 0, l["\u0275nov"](t.parent.parent, 8)), e(t, 15, 0, "inconsult" == n.consultType), e(t, 17, 0, "inconsult" == n.consultType), e(t, 19, 0, "inconsult" == n.consultType)
                }), null)
            }

            function Gn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "main-imgDiv ml-4"],
                    ["style", "\n            background-image: url('assets/default/images/doctor_male.svg');\n          "]
                ], null, null, null, null, null))], null, null)
            }

            function Kn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "main-imgDiv ml-4"],
                    ["style", "\n            background-image: url('assets/default/images/doctor_female.svg');\n          "]
                ], null, null, null, null, null))], null, null)
            }

            function Hn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "main-imgDiv ml-4"]
                ], [
                    [4, "background-image", null]
                ], null, null, null, null))], null, (function(e, t) {
                    e(t, 0, 0, "url(" + t.component.doctorProfile.thumbnail + ")")
                }))
            }

            function qn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "b", [
                    ["class", "f-14 row"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, ["Dr. ", ""]))], null, (function(e, t) {
                    e(t, 1, 0, (t.component.doctorProfile.name || l["\u0275EMPTY_MAP"]).name)
                }))
            }

            function Yn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 13, "div", [
                    ["class", "col-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 1, "b", [
                    ["class", "f-14 row justify-content-end rating-color mr-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](2, null, ["", ""])), (e()(), l["\u0275eld"](3, 0, null, null, 1, "div", [
                    ["class", "row justify-content-end mr-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 0, "img", [
                    ["height", "30"],
                    ["src", "assets/default/images/googleReview.svg"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 8, "div", [
                    ["class", "row justify-content-end mr-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](6, 0, null, null, 1, "span", [
                    ["class", "rating-text mr-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Rating"])), (e()(), l["\u0275eld"](8, 0, null, null, 5, "p-rating", [
                    ["readonly", "true"],
                    ["stars", "5"]
                ], [
                    [2, "ng-untouched", null],
                    [2, "ng-touched", null],
                    [2, "ng-pristine", null],
                    [2, "ng-dirty", null],
                    [2, "ng-valid", null],
                    [2, "ng-invalid", null],
                    [2, "ng-pending", null]
                ], [
                    [null, "ngModelChange"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "ngModelChange" === t && (l = !1 !== (e.component.averageRating = n) && l), l
                }), Z.b, Z.a)), l["\u0275did"](9, 114688, null, 0, J.Rating, [l.ChangeDetectorRef], {
                    readonly: [0, "readonly"],
                    stars: [1, "stars"],
                    cancel: [2, "cancel"]
                }, null), l["\u0275prd"](1024, null, Q.NG_VALUE_ACCESSOR, (function(e) {
                    return [e]
                }), [J.Rating]), l["\u0275did"](11, 671744, null, 0, Q.NgModel, [
                    [8, null],
                    [8, null],
                    [8, null],
                    [6, Q.NG_VALUE_ACCESSOR]
                ], {
                    model: [0, "model"]
                }, {
                    update: "ngModelChange"
                }), l["\u0275prd"](2048, null, Q.NgControl, null, [Q.NgModel]), l["\u0275did"](13, 16384, null, 0, Q.NgControlStatus, [
                    [4, Q.NgControl]
                ], null, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 9, 0, "true", "5", !1), e(t, 11, 0, n.averageRating)
                }), (function(e, t) {
                    e(t, 2, 0, t.component.averageRating), e(t, 8, 0, l["\u0275nov"](t, 13).ngClassUntouched, l["\u0275nov"](t, 13).ngClassTouched, l["\u0275nov"](t, 13).ngClassPristine, l["\u0275nov"](t, 13).ngClassDirty, l["\u0275nov"](t, 13).ngClassValid, l["\u0275nov"](t, 13).ngClassInvalid, l["\u0275nov"](t, 13).ngClassPending)
                }))
            }

            function $n(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 18, "div", [
                    ["class", "d-flex flex-column d-none-mob p-3 web-border-bottom"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 17, "div", [
                    ["class", "d-flex mob-border-bottom row pt-4 pb-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 6, "div", [
                    ["class", "col-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Gn)), l["\u0275did"](4, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Kn)), l["\u0275did"](6, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Hn)), l["\u0275did"](8, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](9, 0, null, null, 7, "div", [
                    ["class", "col-8"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, qn)), l["\u0275did"](11, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](12, 0, null, null, 1, "span", [
                    ["class", "f-12 row"],
                    ["style", "padding-right: 6px;"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](13, null, ["", ""])), (e()(), l["\u0275eld"](14, 0, null, null, 2, "span", [
                    ["class", "f-12 row view-button-web mt-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](15, 0, null, null, 1, "a", [
                    ["class", "border-hide"]
                ], [
                    [8, "href", 4]
                ], [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.gotoViewProfile() && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, ["VIEW PROFILE"])), (e()(), l["\u0275and"](16777216, null, null, 1, null, Yn)), l["\u0275did"](18, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 4, 0, !n.doctorProfile.thumbnail && "male" == n.doctorProfile.gender), e(t, 6, 0, !n.doctorProfile.thumbnail && "male" !== n.doctorProfile.gender), e(t, 8, 0, n.doctorProfile.thumbnail), e(t, 11, 0, n.doctorProfile.name), e(t, 18, 0, n.averageRating > 3.5)
                }), (function(e, t) {
                    var n = t.component;
                    e(t, 13, 0, n.doctorProfile.specialityName), e(t, 15, 0, l["\u0275inlineInterpolate"](1, "", n.shareUrl, ""))
                }))
            }

            function zn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [
                    ["class", "apt-no"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0,
                        i = e.component;
                    return "click" === t && (l = !1 !== i.callClinic(null == i.doctorProfile || null == i.doctorProfile.profile || null == i.doctorProfile.profile.info ? null : i.doctorProfile.profile.info.aptBookingNumber[0]) && l), l
                }), null, null)), (e()(), l["\u0275ted"](1, null, ["", ""]))], null, (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, null == n.doctorProfile || null == n.doctorProfile.profile || null == n.doctorProfile.profile.info ? null : n.doctorProfile.profile.info.aptBookingNumber[0])
                }))
            }

            function Wn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [
                    ["class", "apt-no"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0,
                        i = e.component;
                    return "click" === t && (l = !1 !== i.callClinic(null == i.doctorProfile || null == i.doctorProfile.profile ? null : i.doctorProfile.profile.personalNumber) && l), l
                }), null, null)), (e()(), l["\u0275ted"](1, null, ["", ""]))], null, (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, null == n.doctorProfile || null == n.doctorProfile.profile ? null : n.doctorProfile.profile.personalNumber)
                }))
            }

            function Xn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 6, "div", [
                    ["class", "d-flex justify-content-between p-3 d-none-mob container"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 5, "div", [
                    ["class", "col-sm-12"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](2, null, [" Dr. ", " does not take appointments online. Please call the clinic to book an appointment: "])), (e()(), l["\u0275and"](16777216, null, null, 1, null, zn)), l["\u0275did"](4, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Wn)), l["\u0275did"](6, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 4, 0, (null == n.doctorProfile || null == n.doctorProfile.profile || null == n.doctorProfile.profile.info ? null : n.doctorProfile.profile.info.aptBookingNumber) && (null == n.doctorProfile || null == n.doctorProfile.profile || null == n.doctorProfile.profile.info ? null : n.doctorProfile.profile.info.aptBookingNumber.join(","))), e(t, 6, 0, !(null != n.doctorProfile && null != n.doctorProfile.profile && null != n.doctorProfile.profile.info && n.doctorProfile.profile.info.aptBookingNumber && null != n.doctorProfile && null != n.doctorProfile.profile && null != n.doctorProfile.profile.info && n.doctorProfile.profile.info.aptBookingNumber.join(",")))
                }), (function(e, t) {
                    e(t, 2, 0, (t.component.doctorProfile.name || l["\u0275EMPTY_MAP"]).name)
                }))
            }

            function Zn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [
                    ["class", "pt-1 f-12 green fw"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, ["Fees \u20b9 ", ""]))], null, (function(e, t) {
                    e(t, 1, 0, t.component.fee)
                }))
            }

            function Jn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 6, "span", [
                    ["class", "color-green in-clinic fw"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 1, "span", [
                    ["class", "f-12"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, [" Follow up "])), (e()(), l["\u0275eld"](3, 0, null, null, 1, "span", [
                    ["class", "f-12"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](4, null, [" \u20b9 ", " "])), (e()(), l["\u0275eld"](5, 0, null, null, 1, "span", [
                    ["class", "valid-day"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](6, null, ["(Valid for ", " days)"]))], null, (function(e, t) {
                    var n = t.component;
                    e(t, 4, 0, n.doctorProfile.appointmentTypes[n.consultType].repeatFee / 100), e(t, 6, 0, null == n.doctorProfile.appointmentTypes[n.consultType] ? null : n.doctorProfile.appointmentTypes[n.consultType].repeatValidDuration)
                }))
            }

            function Qn(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [
                    ["class", "pt-1 f-12 green fw"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, ["", ""]))], null, (function(e, t) {
                    e(t, 1, 0, t.component.getInClinicFees())
                }))
            }

            function el(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "p", [
                    ["class", "pt-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, [" (pay at clinic)"]))], null, null)
            }

            function tl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [
                    ["class", "pt-1 f-12 fw"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, ["", ""]))], null, (function(e, t) {
                    e(t, 1, 0, t.component.getInClinicFees())
                }))
            }

            function nl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 6, "span", [
                    ["class", "color-blue in-clinic fw pt-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Qn)), l["\u0275did"](2, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, el)), l["\u0275did"](4, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, tl)), l["\u0275did"](6, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 2, 0, "Fees : Pay at clinic" !== n.getInClinicFees()), e(t, 4, 0, "Fees : Pay at clinic" !== n.getInClinicFees()), e(t, 6, 0, "Fees : Pay at clinic" == n.getInClinicFees())
                }), null)
            }

            function ll(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0))], null, null)
            }

            function il(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 0, null, ll))], null, null)
            }

            function rl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 14, "div", [
                    ["class", "d-flex justify-content-between p-3 d-none-mob container"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 10, "div", [
                    ["class", "d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 1, "b", [
                    ["class", "f-16"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Book Appointment"])), (e()(), l["\u0275eld"](4, 0, null, null, 1, "span", [
                    ["class", "pt-1 f-14 color-grey"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Select Your Consultation Type"])), (e()(), l["\u0275and"](16777216, null, null, 1, null, Zn)), l["\u0275did"](7, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Jn)), l["\u0275did"](9, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, nl)), l["\u0275did"](11, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](12, 0, null, null, 2, null, null, null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, il)), l["\u0275did"](14, 540672, null, 0, s.NgTemplateOutlet, [l.ViewContainerRef], {
                    ngTemplateOutlet: [0, "ngTemplateOutlet"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 7, 0, "inconsult" !== n.consultType), e(t, 9, 0, "inconsult" !== n.consultType && n.doctorProfile.appointmentTypes && n.doctorProfile.appointmentTypes[n.consultType] && n.doctorProfile.appointmentTypes[n.consultType] && n.doctorProfile.appointmentTypes[n.consultType].repeatFee), e(t, 11, 0, "inconsult" == n.consultType), e(t, 14, 0, l["\u0275nov"](t.parent.parent, 8))
                }), null)
            }

            function sl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 2, "div", [
                    ["class", "d-flex"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 1, "b", [
                    ["class", "f-16"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Clinic Name"]))], null, null)
            }

            function ol(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 2, "div", [
                    ["class", "d-flex justify-content-between p-3 d-none-mob container"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, sl)), l["\u0275did"](2, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 2, 0, n.allAddresses.length > 0 && "inconsult" == n.consultType)
                }), null)
            }

            function al(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 5, "span", [
                    ["class", ""]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.selectAddress(e.context.$implicit) && l), l
                }), null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    circle: 0,
                    "circle-white": 1
                }), (e()(), l["\u0275eld"](3, 0, null, null, 2, "span", [
                    ["class", ""]
                ], null, null, null, null, null)), l["\u0275did"](4, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](5, {
                    "white-circle": 0,
                    "white-gray": 1
                }), (e()(), l["\u0275eld"](6, 0, null, null, 3, "span", [
                    ["class", "ml-4"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.selectAddress(e.context.$implicit) && l), l
                }), null, null)), l["\u0275did"](7, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](8, {
                    "white-circle-text": 0,
                    "white-gray-text": 1
                }), (e()(), l["\u0275ted"](9, null, [" ", ""]))], (function(e, t) {
                    var n = t.component,
                        l = e(t, 2, 0, t.context.$implicit.mappingId == n.selectedAddress, t.context.$implicit.mappingId !== n.selectedAddress);
                    e(t, 1, 0, "", l);
                    var i = e(t, 5, 0, t.context.$implicit.mappingId == n.selectedAddress, t.context.$implicit.mappingId !== n.selectedAddress);
                    e(t, 4, 0, "", i);
                    var r = e(t, 8, 0, t.context.$implicit.mappingId == n.selectedAddress, t.context.$implicit.mappingId !== n.selectedAddress);
                    e(t, 7, 0, "ml-4", r)
                }), (function(e, t) {
                    e(t, 9, 0, t.context.$implicit.address)
                }))
            }

            function ul(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 7, "div", [
                    ["class", "mb-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 6, "p-virtualScroller", [
                    ["scrollHeight", "150px"]
                ], null, null, null, fe, oe)), l["\u0275did"](2, 1097728, null, 3, ee.VirtualScroller, [l.ElementRef], {
                    scrollHeight: [0, "scrollHeight"],
                    value: [1, "value"]
                }, null), l["\u0275qud"](335544320, 5, {
                    header: 0
                }), l["\u0275qud"](335544320, 6, {
                    footer: 0
                }), l["\u0275qud"](603979776, 7, {
                    templates: 1
                }), (e()(), l["\u0275and"](0, null, null, 1, null, al)), l["\u0275did"](7, 16384, [
                    [7, 4]
                ], 0, ie.PrimeTemplate, [l.TemplateRef], {
                    name: [0, "name"]
                }, null)], (function(e, t) {
                    e(t, 2, 0, "150px", t.component.allAddresses), e(t, 7, 0, "item")
                }), null)
            }

            function cl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 0, "div", [
                    ["class", "pb-2"],
                    ["style", "border-bottom: 1px solid #d8d8d8;"]
                ], null, null, null, null, null))], null, null)
            }

            function dl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 14, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 13, "div", [
                    ["class", "align-text-img mb-2"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.selectAddress(e.context.$implicit) && l), l
                }), null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 5, "span", [], null, null, null, null, null)), l["\u0275did"](3, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngClass: [0, "ngClass"]
                }, null), l["\u0275pod"](4, {
                    circle: 0,
                    "circle-white": 1
                }), (e()(), l["\u0275eld"](5, 0, null, null, 2, "span", [], null, null, null, null, null)), l["\u0275did"](6, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngClass: [0, "ngClass"]
                }, null), l["\u0275pod"](7, {
                    "white-circle": 0,
                    "white-gray": 1
                }), (e()(), l["\u0275eld"](8, 0, null, null, 4, "span", [], null, null, null, null, null)), l["\u0275did"](9, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    ngClass: [0, "ngClass"]
                }, null), l["\u0275pod"](10, {
                    "white-circle-text": 0,
                    "white-gray-text": 1
                }), (e()(), l["\u0275eld"](11, 0, null, null, 1, "span", [
                    ["class", "ml-4 display-set"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](12, null, [" ", " "])), (e()(), l["\u0275and"](16777216, null, null, 1, null, cl)), l["\u0275did"](14, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component,
                        l = e(t, 4, 0, t.context.$implicit.mappingId == n.selectedAddress, t.context.$implicit.mappingId !== n.selectedAddress);
                    e(t, 3, 0, l);
                    var i = e(t, 7, 0, t.context.$implicit.mappingId == n.selectedAddress, t.context.$implicit.mappingId !== n.selectedAddress);
                    e(t, 6, 0, i);
                    var r = e(t, 10, 0, t.context.$implicit.mappingId == n.selectedAddress, t.context.$implicit.mappingId !== n.selectedAddress);
                    e(t, 9, 0, r), e(t, 14, 0, n.allAddresses.length - 1 > t.context.index)
                }), (function(e, t) {
                    e(t, 12, 0, t.context.$implicit.address)
                }))
            }

            function fl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 2, "div", [
                    ["class", "mb-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, dl)), l["\u0275did"](2, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null)], (function(e, t) {
                    e(t, 2, 0, t.component.allAddresses)
                }), null)
            }

            function pl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 6, "div", [
                    ["class", "justify-content-between d-none-mob container"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 5, "div", [
                    ["class", "col-sm-12"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 4, "div", [
                    ["class", "col-sm-12 col-12 mt-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, ul)), l["\u0275did"](4, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, fl)), l["\u0275did"](6, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 4, 0, n.allAddresses.length >= 4), e(t, 6, 0, n.allAddresses.length < 4)
                }), null)
            }

            function hl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 9, "div", [
                    ["class", "d-flex justify-content-center cursor"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.seletedScrollSlot(e.parent.context.$implicit) && l), l
                }), null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 8, "div", [
                    ["class", "d-flex flex-column w-75"]
                ], null, null, null, null, null)), l["\u0275did"](2, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](3, {
                    "swipper-active": 0
                }), (e()(), l["\u0275eld"](4, 0, null, null, 1, "b", [
                    ["class", "f-14"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](5, null, ["", ""])), (e()(), l["\u0275eld"](6, 0, null, null, 3, "span", [
                    ["class", "f-12 W-90"]
                ], null, null, null, null, null)), l["\u0275did"](7, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](8, {
                    green: 0,
                    gray: 1
                }), (e()(), l["\u0275ted"](9, null, ["", ""]))], (function(e, t) {
                    var n = t.component,
                        l = e(t, 3, 0, t.parent.context.$implicit.date == (null == n.seletedSlotScroll ? null : n.seletedSlotScroll.date));
                    e(t, 2, 0, "d-flex flex-column w-75", l);
                    var i = e(t, 8, 0, "No slot available" != t.parent.context.$implicit.availableSlot, "No slot available" == t.parent.context.$implicit.availableSlot);
                    e(t, 7, 0, "f-12 W-90", i)
                }), (function(e, t) {
                    e(t, 5, 0, t.component.slotFormat(t.parent.context.$implicit.date)), e(t, 9, 0, t.parent.context.$implicit.availableSlot)
                }))
            }

            function gl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](0, null, null, 1, null, hl)), l["\u0275did"](1, 16384, [
                    [8, 4]
                ], 0, x, [l.TemplateRef], null, null)], null, null)
            }

            function ml(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 10, "div", [
                    ["class", "swiper-slide"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 9, "div", [
                    ["class", "d-flex justify-content-center cursor"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.seletedScrollSlot(e.context.$implicit) && l), l
                }), null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 8, "div", [
                    ["class", "d-flex flex-column"]
                ], null, null, null, null, null)), l["\u0275did"](3, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](4, {
                    "swipper-active": 0
                }), (e()(), l["\u0275eld"](5, 0, null, null, 1, "b", [
                    ["class", "f-14"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](6, null, ["", ""])), (e()(), l["\u0275eld"](7, 0, null, null, 3, "span", [
                    ["class", "f-12"]
                ], null, null, null, null, null)), l["\u0275did"](8, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](9, {
                    green: 0
                }), (e()(), l["\u0275ted"](10, null, ["", ""]))], (function(e, t) {
                    var n = t.component,
                        l = e(t, 4, 0, t.context.$implicit.date == (null == n.seletedSlotScroll ? null : n.seletedSlotScroll.date));
                    e(t, 3, 0, "d-flex flex-column", l);
                    var i = e(t, 9, 0, "No slot available" != t.context.$implicit.availableSlot);
                    e(t, 8, 0, "f-12", i)
                }), (function(e, t) {
                    e(t, 6, 0, t.component.slotFormat(t.context.$implicit.date)), e(t, 10, 0, t.context.$implicit.availableSlot)
                }))
            }

            function vl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 14, "div", [
                    ["class", "swiper-boder form-row"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 13, "div", [
                    ["class", "col-12 left-align"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 6, "div", [
                    ["class", "d-none-lap"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 5, "swiper", [
                    ["id", "dateSwip"]
                ], [
                    [8, "className", 0]
                ], [
                    [null, "swiper"],
                    [null, "slideChange"]
                ], (function(e, t, n) {
                    var l = !0,
                        i = e.component;
                    return "swiper" === t && (l = !1 !== i.onSwiper(n) && l), "slideChange" === t && (l = !1 !== i.onSlideChange() && l), l
                }), X, L)), l["\u0275did"](4, 4964352, null, 1, D, [l.NgZone, l.ElementRef, l.ChangeDetectorRef, l.PLATFORM_ID], {
                    spaceBetween: [0, "spaceBetween"],
                    slidesPerView: [1, "slidesPerView"],
                    id: [2, "id"],
                    navigation: [3, "navigation"]
                }, {
                    s_slideChange: "slideChange",
                    s_swiper: "swiper"
                }), l["\u0275qud"](603979776, 8, {
                    slidesEl: 1
                }), (e()(), l["\u0275eld"](6, 0, null, null, 2, "div", [], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, gl)), l["\u0275did"](8, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null), (e()(), l["\u0275eld"](9, 0, null, null, 5, "div", [
                    ["class", "swiper-container d-none-mob"],
                    ["id", "dateswiper"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](10, 0, null, null, 2, "div", [
                    ["class", "swiper-wrapper"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, ml)), l["\u0275did"](12, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null), (e()(), l["\u0275eld"](13, 0, null, null, 0, "div", [
                    ["class", "swiper-button-prev prev-slide"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](14, 0, null, null, 0, "div", [
                    ["class", "swiper-button-next"]
                ], null, null, null, null, null))], (function(e, t) {
                    var n = t.component;
                    e(t, 4, 0, 0, 2.5, "dateSwip", l["\u0275EMPTY_MAP"]), e(t, 8, 0, n.scrollSlots["videoconsult" == n.consultType ? "videoConsult" : "inconsult" == n.consultType ? "inconsult" : "teleConsult"]), e(t, 12, 0, n.scrollSlots["videoconsult" == n.consultType ? "videoConsult" : "inconsult" == n.consultType ? "inconsult" : "teleConsult"])
                }), (function(e, t) {
                    e(t, 3, 0, l["\u0275nov"](t, 4).containerClasses)
                }))
            }

            function yl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 2, "div", [
                    ["class", "col-12 text-center"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 1, "p", [
                    ["class", "mt-3"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["No slots available"]))], null, null)
            }

            function bl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 2, "p-progressSpinner", [], null, null, null, ge, he)), l["\u0275did"](1, 49152, null, 0, pe.ProgressSpinner, [], {
                    style: [0, "style"]
                }, null), l["\u0275pod"](2, {
                    width: 0,
                    height: 1,
                    "z-index": 2,
                    left: 3,
                    position: 4
                })], (function(e, t) {
                    var n = e(t, 2, 0, "50px", "50px", "10", "50%", "absolute");
                    e(t, 1, 0, n)
                }), null)
            }

            function Tl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [
                    ["class", "f-14 px-1 py-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, [" Morning "]))], null, null)
            }

            function wl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 4, "div", [
                    ["class", "col-4 mt-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 3, "button", [
                    ["class", "slotBtn borders"]
                ], [
                    [8, "disabled", 0]
                ], [
                    [null, "click"]
                ], (function(e, t, n) {
                    var i = !0;
                    return "click" === t && (i = !1 !== e.component.selectedSlot("morning", e.parent.context.$implicit, l["\u0275nov"](e.parent.parent.parent.parent.parent.parent, 22)) && i), i
                }), null, null)), l["\u0275did"](2, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](3, {
                    tc_slotbutton: 0,
                    "active-slot": 1,
                    disabledSlotTime: 2
                }), (e()(), l["\u0275ted"](4, null, [" ", " "]))], (function(e, t) {
                    var n = t.component,
                        l = e(t, 3, 0, "morning" != n.slotType.type, t.parent.context.$implicit == n.slotType.time, !(null != t.parent.context.$implicit && t.parent.context.$implicit.available));
                    e(t, 2, 0, "slotBtn borders", l)
                }), (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, !(null != t.parent.context.$implicit && t.parent.context.$implicit.available)), e(t, 4, 0, n.extractTime(null == t.parent.context.$implicit ? null : t.parent.context.$implicit.startTime))
                }))
            }

            function Sl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 2, null, null, null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, wl)), l["\u0275did"](2, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](0, null, null, 0))], (function(e, t) {
                    e(t, 2, 0, (null == t.context.$implicit ? null : t.context.$implicit.startTime[0]) + "" + (null == t.context.$implicit ? null : t.context.$implicit.startTime[1]) < 17)
                }), null)
            }

            function El(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 2, "div", [
                    ["class", "form-row"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Sl)), l["\u0275did"](2, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 2, 0, null == n.slots || null == n.slots.userSlots[n.consultType] ? null : n.slots.userSlots[n.consultType].timeslots)
                }), null)
            }

            function _l(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, [
                    ["tc_slot", 1]
                ], null, 2, "div", [
                    ["class", "tc_slot"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, El)), l["\u0275did"](2, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    e(t, 2, 0, t.component.consultType)
                }), null)
            }

            function Cl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [
                    ["class", "f-14 px-1 py-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, [" Evening "]))], null, null)
            }

            function Rl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 4, "div", [
                    ["class", "col-4 mt-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 3, "button", [
                    ["class", "slotBtn borders"]
                ], [
                    [8, "disabled", 0]
                ], [
                    [null, "click"]
                ], (function(e, t, n) {
                    var i = !0;
                    return "click" === t && (i = !1 !== e.component.selectedSlot("evening", e.parent.context.$implicit, l["\u0275nov"](e.parent.parent.parent.parent, 22)) && i), i
                }), null, null)), l["\u0275did"](2, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](3, {
                    tc_slotbutton: 0,
                    "active-slot": 1,
                    disabledSlotTime: 2
                }), (e()(), l["\u0275ted"](4, null, [" ", " "]))], (function(e, t) {
                    var n = t.component,
                        l = e(t, 3, 0, "morning" != n.slotType.type, t.parent.context.$implicit == n.slotType.time, !(null != t.parent.context.$implicit && t.parent.context.$implicit.available));
                    e(t, 2, 0, "slotBtn borders", l)
                }), (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, !(null != t.parent.context.$implicit && t.parent.context.$implicit.available)), e(t, 4, 0, n.extractTime(null == t.parent.context.$implicit ? null : t.parent.context.$implicit.startTime))
                }))
            }

            function Il(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 2, null, null, null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Rl)), l["\u0275did"](2, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](0, null, null, 0))], (function(e, t) {
                    e(t, 2, 0, (null == t.context.$implicit ? null : t.context.$implicit.startTime[0]) + "" + (null == t.context.$implicit ? null : t.context.$implicit.startTime[1]) >= 17)
                }), null)
            }

            function kl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 3, "button", [
                    ["class", "btn color-navy-back web-apt-button d-none-mob"]
                ], [
                    [8, "disabled", 0]
                ], [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.doLogin(!1) && l), l
                }), null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    butonDisabled: 0
                }), (e()(), l["\u0275ted"](-1, null, [" Book Appointment "]))], (function(e, t) {
                    var n = e(t, 2, 0, !t.component.slotType.time);
                    e(t, 1, 0, "btn color-navy-back web-apt-button d-none-mob", n)
                }), (function(e, t) {
                    var n = t.component;
                    e(t, 0, 0, !n.slotType.time || n.disableBook)
                }))
            }

            function Al(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 3, "button", [
                    ["class", "btn color-navy-back web-apt-button d-none-mob"]
                ], [
                    [8, "disabled", 0]
                ], [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.doLogin(!1) && l), l
                }), null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    butonDisabled: 0
                }), (e()(), l["\u0275ted"](-1, null, [" CONTINUE "]))], (function(e, t) {
                    var n = t.component,
                        l = e(t, 2, 0, !n.slotType.time && !n.isBookingPopup || n.isBookingPopup);
                    e(t, 1, 0, "btn color-navy-back web-apt-button d-none-mob", l)
                }), (function(e, t) {
                    var n = t.component;
                    e(t, 0, 0, !n.slotType.time && !n.isBookingPopup || n.isBookingPopup)
                }))
            }

            function Pl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 29, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 28, "div", [
                    ["class", "pb-5"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 27, "div", [
                    ["class", "row p-mob mob-border-bottom"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, yl)), l["\u0275did"](4, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, bl)), l["\u0275did"](6, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](7, 0, null, null, 7, "div", [
                    ["class", "col-md-6"]
                ], null, null, null, null, null)), l["\u0275did"](8, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](9, {
                    "col-md-12": 0
                }), (e()(), l["\u0275eld"](10, 0, null, null, 4, "div", [
                    ["class", "d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Tl)), l["\u0275did"](12, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, _l)), l["\u0275did"](14, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](15, 0, null, null, 9, "div", [
                    ["class", "col-md-6 only-mob-eve"]
                ], null, null, null, null, null)), l["\u0275did"](16, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](17, {
                    "col-md-12": 0
                }), (e()(), l["\u0275eld"](18, 0, null, null, 6, "div", [
                    ["class", "d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Cl)), l["\u0275did"](20, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](21, 0, [
                    ["tc_slot", 1]
                ], null, 3, "div", [
                    ["class", "tc_slot"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](22, 0, null, null, 2, "div", [
                    ["class", "form-row"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Il)), l["\u0275did"](24, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null), (e()(), l["\u0275eld"](25, 0, null, null, 4, "div", [
                    ["class", "col-md-12"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, kl)), l["\u0275did"](27, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Al)), l["\u0275did"](29, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 4, 0, (0 == (null == n.scrollSlots ? null : n.scrollSlots.inconsult.length) || 0 == (null == n.slots || null == n.slots.userSlots[n.consultType] || null == n.slots.userSlots[n.consultType].timeslots ? null : n.slots.userSlots[n.consultType].timeslots.length)) && "inconsult" == n.consultType || "inconsult" != n.consultType && 0 == (null == n.slots || null == n.slots.userSlots[n.consultType] || null == n.slots.userSlots[n.consultType].timeslots ? null : n.slots.userSlots[n.consultType].timeslots.length)), e(t, 6, 0, n.isInconsultLoad);
                    var l = e(t, 9, 0, !n.evenSlotAv);
                    e(t, 8, 0, "col-md-6", l), e(t, 12, 0, n.mornSlotAv && n.evenSlotAv && "inconsult" !== n.consultType || n.mornSlotAv && n.evenSlotAv && "inconsult" == n.consultType && 0 !== (null == n.scrollSlots || null == n.scrollSlots.inconsult ? null : n.scrollSlots.inconsult.length)), e(t, 14, 0, null == n.slots || null == n.slots.userSlots[n.consultType] ? null : n.slots.userSlots[n.consultType].timeslots);
                    var i = e(t, 17, 0, !n.mornSlotAv);
                    e(t, 16, 0, "col-md-6 only-mob-eve", i), e(t, 20, 0, n.mornSlotAv && n.evenSlotAv && "inconsult" !== n.consultType || n.mornSlotAv && n.evenSlotAv && "inconsult" == n.consultType && 0 !== (null == n.scrollSlots || null == n.scrollSlots.inconsult ? null : n.scrollSlots.inconsult.length)), e(t, 24, 0, null == n.slots || null == n.slots.userSlots[n.consultType] ? null : n.slots.userSlots[n.consultType].timeslots), e(t, 27, 0, "inconsult" !== n.consultType), e(t, 29, 0, "inconsult" == n.consultType)
                }), null)
            }

            function xl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 37, "div", [
                    ["class", "big-borders d-flex flex-column"]
                ], null, null, null, null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    "align-box": 0
                }), (e()(), l["\u0275eld"](3, 0, null, null, 20, "div", [
                    ["class", "d-flex flex-column d-none-lap"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 17, "div", [
                    ["class", "d-flex mob-border-bottom row pt-4 pb-4 pr-3"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 6, "div", [
                    ["class", "col-3"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Tn)), l["\u0275did"](7, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, wn)), l["\u0275did"](9, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Sn)), l["\u0275did"](11, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](12, 0, null, null, 7, "div", [
                    ["class", "col-6"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, En)), l["\u0275did"](14, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](15, 0, null, null, 1, "span", [
                    ["class", "f-12 row ml-1 mb-2"],
                    ["style", "padding-right: 6px;"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](16, null, ["", ""])), (e()(), l["\u0275eld"](17, 0, null, null, 2, "span", [
                    ["class", "f-12 view-button-mob mt-2 ml-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](18, 0, null, null, 1, "a", [
                    ["class", "border-hide"]
                ], [
                    [8, "href", 4]
                ], [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.gotoViewProfile() && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, ["VIEW PROFILE"])), (e()(), l["\u0275and"](16777216, null, null, 1, null, _n)), l["\u0275did"](21, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Vn)), l["\u0275did"](23, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, $n)), l["\u0275did"](25, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Xn)), l["\u0275did"](27, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, rl)), l["\u0275did"](29, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, ol)), l["\u0275did"](31, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, pl)), l["\u0275did"](33, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, vl)), l["\u0275did"](35, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Pl)), l["\u0275did"](37, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component,
                        l = e(t, 2, 0, "booking" == n.paramRoutes.param);
                    e(t, 1, 0, "big-borders d-flex flex-column", l), e(t, 7, 0, !n.doctorProfile.thumbnail && "male" == n.doctorProfile.gender), e(t, 9, 0, !n.doctorProfile.thumbnail && "male" !== n.doctorProfile.gender), e(t, 11, 0, n.doctorProfile.thumbnail), e(t, 14, 0, n.doctorProfile.name), e(t, 21, 0, n.averageRating > 3.5), e(t, 23, 0, n.slotsAvailable), e(t, 25, 0, "booking" == n.paramRoutes.param), e(t, 27, 0, !n.slotsAvailable), e(t, 29, 0, n.slotsAvailable), e(t, 31, 0, "inconsult" == n.consultType), e(t, 33, 0, "inconsult" == n.consultType), e(t, 35, 0, n.scrollSlots && n.slotsAvailable), e(t, 37, 0, n.slotsAvailable)
                }), (function(e, t) {
                    var n = t.component;
                    e(t, 16, 0, n.doctorProfile.specialityName), e(t, 18, 0, l["\u0275inlineInterpolate"](1, "", n.shareUrl, ""))
                }))
            }

            function Dl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "li", [], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, [" ", " "]))], null, (function(e, t) {
                    e(t, 1, 0, t.context.$implicit)
                }))
            }

            function Ol(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 9, "div", [
                    ["class", "p-3 educate-bottom-border"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 8, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 7, "div", [
                    ["class", "d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 2, "div", [
                    ["class", "d-flex justify-content-between"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 1, "b", [
                    ["class", "f-16"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Education"])), (e()(), l["\u0275eld"](6, 0, null, null, 3, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](7, 0, null, null, 2, "ul", [
                    ["class", "pl-3 mb-0 mt-2 f-14"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Dl)), l["\u0275did"](9, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null)], (function(e, t) {
                    e(t, 9, 0, t.component.getInfoValue("degrees", !1))
                }), null)
            }

            function Ll(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 9, "div", [
                    ["class", "p-3 educate-bottom-border"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 8, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 7, "div", [
                    ["class", "d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 2, "div", [
                    ["class", "d-flex justify-content-between"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 1, "b", [
                    ["class", "f-16"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Experience"])), (e()(), l["\u0275eld"](6, 0, null, null, 3, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](7, 0, null, null, 2, "ul", [
                    ["class", "pl-3 mt-2 mb-0 f-14"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](8, 0, null, null, 1, "li", [], null, null, null, null, null)), (e()(), l["\u0275ted"](9, null, ["", ""]))], null, (function(e, t) {
                    e(t, 9, 0, t.component.getInfoValue("experience", !0))
                }))
            }

            function Ml(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "u", [
                    ["class", "f-10 readMore"],
                    ["id", "awardsV"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.viewMore("awards", "awardsV") && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, ["Show more"]))], null, null)
            }

            function Nl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "li", [], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, ["", ""]))], null, (function(e, t) {
                    e(t, 1, 0, t.context.$implicit)
                }))
            }

            function Fl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 11, "div", [
                    ["class", "p-3 mob-border-bottom"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 10, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 9, "div", [
                    ["class", "d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 4, "div", [
                    ["class", "d-flex justify-content-between"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 1, "b", [
                    ["class", "f-16"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["Awards"])), (e()(), l["\u0275and"](16777216, null, null, 1, null, Ml)), l["\u0275did"](7, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](8, 0, null, null, 3, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](9, 0, null, null, 2, "ul", [
                    ["class", "pl-3 mb-0 mt-2 f-14 hidelist"],
                    ["id", "awards"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Nl)), l["\u0275did"](11, 278528, null, 0, s.NgForOf, [l.ViewContainerRef, l.TemplateRef, l.IterableDiffers], {
                    ngForOf: [0, "ngForOf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 7, 0, n.getInfoValue("awards", !1).length > 4), e(t, 11, 0, n.getInfoValue("awards", !1))
                }), null)
            }

            function jl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 7, "div", [
                    ["class", "education p-mob-edu-gal"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 6, "div", [
                    ["class", "big-borders row d-flex flex-column"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Ol)), l["\u0275did"](3, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Ll)), l["\u0275did"](5, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Fl)), l["\u0275did"](7, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 3, 0, n.arrayToString(n.getInfoValue("degrees", !1))), e(t, 5, 0, n.getInfoValue("experience", !0)), e(t, 7, 0, n.getInfoValue("awards", !1).length > 0)
                }), null)
            }

            function Bl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "button", [
                    ["class", "btn color-navy-back w-100 pt-3 pb-3"]
                ], [
                    [8, "disabled", 0]
                ], [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.onMobProfile("slots") && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, [" Book Appointment "]))], null, (function(e, t) {
                    e(t, 0, 0, t.component.disableBook)
                }))
            }

            function Ul(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 3, "button", [
                    ["class", "btn color-navy-back w-100 pt-3 pb-3"]
                ], [
                    [8, "disabled", 0]
                ], [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.onMobProfile("login") && l), l
                }), null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    butonDisabled: 0
                }), (e()(), l["\u0275ted"](-1, null, [" Book Appointment "]))], (function(e, t) {
                    var n = e(t, 2, 0, !t.component.slotType.time);
                    e(t, 1, 0, "btn color-navy-back w-100 pt-3 pb-3", n)
                }), (function(e, t) {
                    e(t, 0, 0, !t.component.slotType.time)
                }))
            }

            function Vl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 3, "button", [
                    ["class", "btn color-navy-back w-100 pt-3 pb-3"]
                ], [
                    [8, "disabled", 0]
                ], [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.onMobProfile("login") && l), l
                }), null, null)), l["\u0275did"](1, 278528, null, 0, s.NgClass, [l.IterableDiffers, l.KeyValueDiffers, l.ElementRef, l.Renderer2], {
                    klass: [0, "klass"],
                    ngClass: [1, "ngClass"]
                }, null), l["\u0275pod"](2, {
                    butonDisabled: 0
                }), (e()(), l["\u0275ted"](-1, null, [" CONTINUE "]))], (function(e, t) {
                    var n = t.component,
                        l = e(t, 2, 0, !n.slotType.time && !n.isBookingPopup || n.isBookingPopup);
                    e(t, 1, 0, "btn color-navy-back w-100 pt-3 pb-3", l)
                }), (function(e, t) {
                    var n = t.component;
                    e(t, 0, 0, !n.slotType.time && !n.isBookingPopup || n.isBookingPopup)
                }))
            }

            function Gl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 6, "div", [
                    ["class", "fixed-bottom d-none-lap"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Bl)), l["\u0275did"](2, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Ul)), l["\u0275did"](4, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Vl)), l["\u0275did"](6, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 2, 0, !n.paramRoutes.param), e(t, 4, 0, "booking" == n.paramRoutes.param && "inconsult" !== n.consultType), e(t, 6, 0, "booking" == n.paramRoutes.param && "inconsult" == n.consultType)
                }), null)
            }

            function Kl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 3, "div", [
                    ["class", "videoDivModal"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 2, "button", [
                    ["aria-label", "Close"],
                    ["class", "close pull-right"],
                    ["id", "modalClose"],
                    ["style", "z-index: 2; outline: none"],
                    ["type", "button"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.modalRefImage.hide() && l), l
                }), null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 1, "span", [
                    ["aria-hidden", "true"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["\xd7"])), (e()(), l["\u0275eld"](4, 0, null, null, 3, "div", [
                    ["class", ""]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 2, "div", [], null, null, null, null, null)), (e()(), l["\u0275eld"](6, 0, null, null, 1, "div", [
                    ["id", "second"],
                    ["plyr", ""]
                ], null, [
                    [null, "plyrInit"],
                    [null, "plyrPlay"],
                    [null, "plyrLanguageChange"]
                ], (function(e, t, n) {
                    var l = !0,
                        i = e.component;
                    return "plyrInit" === t && (l = !1 !== (i.plyr2 = n) && l), "plyrPlay" === t && (l = !1 !== i.played() && l), "plyrLanguageChange" === t && (l = !1 !== i.languageChanged(i.hlsjsDriver2, i.plyr2) && l), l
                }), b, y)), l["\u0275did"](7, 4898816, null, 0, m, [l.ElementRef, l.NgZone, l.Renderer2], {
                    plyrDriver: [0, "plyrDriver"],
                    plyrSources: [1, "plyrSources"],
                    plyrOptions: [2, "plyrOptions"],
                    plyrCrossOrigin: [3, "plyrCrossOrigin"],
                    plyrPlaysInline: [4, "plyrPlaysInline"]
                }, {
                    plyrInit: "plyrInit",
                    plyrPlay: "plyrPlay",
                    plyrLanguageChange: "plyrLanguageChange"
                })], (function(e, t) {
                    var n = t.component;
                    e(t, 7, 0, n.hlsjsDriver2, n.sources, n.options, !0, !0)
                }), null)
            }

            function Hl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 3, "div", [
                    ["class", "pt-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 2, "div", [
                    ["class", "big-borders p-3 p-mob"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 1, "app-comment", [], null, null, null, Pe, Te)), l["\u0275did"](3, 114688, null, 0, ye, [me.a, be.a, be.k], {
                    commnts: [0, "commnts"]
                }, null)], (function(e, t) {
                    e(t, 3, 0, t.component.getComments)
                }), null)
            }

            function ql(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275and"](16777216, null, null, 1, null, Hl)), l["\u0275did"](1, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](0, null, null, 0))], (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, (null == n.getComments ? null : n.getComments.totalCount) > 0)
                }), null)
            }

            function Yl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 5, "div", [
                    ["class", "product-item"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 4, "div", [
                    ["class", "product-item-content"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 2, "div", [
                    ["class", "p-mb-3"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 1, "a", [
                    ["target", "_blank"]
                ], [
                    [8, "href", 4]
                ], null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 0, "img", [
                    ["class", "product-image"]
                ], [
                    [8, "src", 4],
                    [8, "alt", 0]
                ], null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 0, "div", [], null, null, null, null, null))], null, (function(e, t) {
                    e(t, 3, 0, t.context.$implicit), e(t, 4, 0, t.context.$implicit, t.context.$implicit)
                }))
            }

            function $l(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 3, "div", [
                    ["class", "videoDivModal"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 2, "button", [
                    ["aria-label", "Close"],
                    ["class", "close pull-right"],
                    ["id", "modalClose"],
                    ["style", "z-index: 2; outline: none"],
                    ["type", "button"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "click" === t && (l = !1 !== e.component.modalRefImage.hide() && l), l
                }), null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 1, "span", [
                    ["aria-hidden", "true"],
                    ["style", "color: #e1e0e0"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["\xd7"])), (e()(), l["\u0275eld"](4, 0, null, null, 8, "div", [
                    ["class", ""],
                    ["style", "background-color: white; height: 485%"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 7, "div", [
                    ["class", "cursor gallery-modal"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](6, 0, null, null, 6, "p-carousel", [], null, null, null, xe.b, xe.a)), l["\u0275did"](7, 3325952, null, 3, De.Carousel, [l.ElementRef, l.NgZone], {
                    numVisible: [0, "numVisible"],
                    numScroll: [1, "numScroll"],
                    responsiveOptions: [2, "responsiveOptions"],
                    value: [3, "value"],
                    circular: [4, "circular"]
                }, null), l["\u0275qud"](335544320, 9, {
                    headerFacet: 0
                }), l["\u0275qud"](335544320, 10, {
                    footerFacet: 0
                }), l["\u0275qud"](603979776, 11, {
                    templates: 1
                }), (e()(), l["\u0275and"](0, null, null, 1, null, Yl)), l["\u0275did"](12, 16384, [
                    [11, 4]
                ], 0, ie.PrimeTemplate, [l.TemplateRef], {
                    name: [0, "name"]
                }, null)], (function(e, t) {
                    var n = t.component;
                    e(t, 7, 0, 1, 1, n.responsiveOptions, n.docsToShow, !1), e(t, 12, 0, "item")
                }), null)
            }

            function zl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 4, "span", [
                    ["class", "appointment-txt"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, [" You have an existing appointment for ", " at ", " ", " that is "])), (e()(), l["\u0275eld"](2, 0, null, null, 1, "span", [
                    ["class", "confirm-txt"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["PENDING CONFIRMATION "])), (e()(), l["\u0275ted"](-1, null, ["from the doctor. "]))], null, (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, n.bookingAppointments[0].patientName, n.extractTimeAppntmnt(null == n.bookingAppointments[0] ? null : n.bookingAppointments[0].timeslots[0].startTime), n.slotFormatDate(null == n.bookingAppointments[0] ? null : n.bookingAppointments[0].timeslots[0].startTime))
                }))
            }

            function Wl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 4, "span", [
                    ["class", "appointment-txt"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, [" Your appointment for ", " at ", " ", " is already "])), (e()(), l["\u0275eld"](2, 0, null, null, 1, "span", [
                    ["class", "confirm-txt"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["CONFIRMED"])), (e()(), l["\u0275ted"](-1, null, [". "]))], null, (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, n.bookingAppointments[0].patientName, n.extractTimeAppntmnt(null == n.bookingAppointments[0] ? null : n.bookingAppointments[0].timeslots[0].startTime), n.slotFormatDate(null == n.bookingAppointments[0] ? null : n.bookingAppointments[0].timeslots[0].startTime))
                }))
            }

            function Xl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [
                    ["class", "appointment-confirm-txt"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, [" Please wait for the doctor to confirm it instead of booking a new appointment. "]))], null, null)
            }

            function Zl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [
                    ["class", "appointment-confirm-txt"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, [" Are you sure you want to book another appointment? "]))], null, null)
            }

            function Jl(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 4, "span", [
                    ["class", "appointment-txt"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, [" You have an existing appointment for ", " at ", " ", " that is "])), (e()(), l["\u0275eld"](2, 0, null, null, 1, "span", [
                    ["class", "confirm-txt"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["PENDING CONFIRMATION "])), (e()(), l["\u0275ted"](-1, null, [" from the doctor. "]))], null, (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, n.bookingAppointments[0].patientName, n.extractTimeAppntmnt(null == n.bookingAppointments[0] ? null : n.bookingAppointments[0].timeslots[0].startTime), n.slotFormatDate(null == n.bookingAppointments[0] ? null : n.bookingAppointments[0].timeslots[0].startTime))
                }))
            }

            function Ql(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 4, "span", [
                    ["class", "appointment-txt"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](1, null, [" Your appointment for ", " at ", " ", " is already "])), (e()(), l["\u0275eld"](2, 0, null, null, 1, "span", [
                    ["class", "confirm-txt"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, ["CONFIRMED"])), (e()(), l["\u0275ted"](-1, null, [". "]))], null, (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, n.bookingAppointments[0].patientName, n.extractTimeAppntmnt(null == n.bookingAppointments[0] ? null : n.bookingAppointments[0].timeslots[0].startTime), n.slotFormatDate(null == n.bookingAppointments[0] ? null : n.bookingAppointments[0].timeslots[0].startTime))
                }))
            }

            function ei(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [
                    ["class", "appointment-confirm-txt"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, [" Please wait for the doctor to confirm it instead of booking a new appointment. "]))], null, null)
            }

            function ti(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "span", [
                    ["class", "appointment-confirm-txt"]
                ], null, null, null, null, null)), (e()(), l["\u0275ted"](-1, null, [" Are you sure you want to book another appointment? "]))], null, null)
            }

            function ni(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 47, "div", [
                    ["class", "modal-body"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](1, 0, null, null, 21, "div", [
                    ["class", "row d-none-lap"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](2, 0, null, null, 2, "div", [
                    ["class", "col-sm-12 txt-alg"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](3, 0, null, null, 0, "img", [
                    ["class", "ml-4 mt-4 mb-4"],
                    ["height", "120px"],
                    ["src", "assets/default/images/svg-img/crossIcon.svg"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](4, 0, null, null, 0, "img", [
                    ["class", "ml-2 mt-2 fR cursor-pt"],
                    ["height", "30px"],
                    ["src", "assets/default/images/svg-img/Cross.svg"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0,
                        i = e.component;
                    return "click" === t && (i.modalRef.hide(), l = !1 !== i.closePopPup() && l), l
                }), null, null)), (e()(), l["\u0275eld"](5, 0, null, null, 4, "div", [
                    ["class", "col-sm-12"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, zl)), l["\u0275did"](7, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Wl)), l["\u0275did"](9, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](10, 0, null, null, 4, "div", [
                    ["class", "col-sm-12 pt-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Xl)), l["\u0275did"](12, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Zl)), l["\u0275did"](14, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](15, 0, null, null, 7, "div", [
                    ["class", "col-sm-12 mt-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](16, 0, null, null, 6, "div", [
                    ["class", "row mt-4 mb-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](17, 0, null, null, 2, "div", [
                    ["class", "col-6 pr-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](18, 0, null, null, 1, "button", [
                    ["class", "btn book-button"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0,
                        i = e.component;
                    return "click" === t && (i.doLogin(!0), l = !1 !== i.modalRef.hide() && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, [" BOOK "])), (e()(), l["\u0275eld"](20, 0, null, null, 2, "div", [
                    ["class", "col-6 pl-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](21, 0, null, null, 1, "button", [
                    ["class", "btn call-clinic"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0,
                        i = e.component;
                    return "click" === t && (i.callClinicByPatient(i.bookingAppointments[0].appointmentBookingNumber), l = !1 !== i.modalRef.hide() && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, [" CALL CLINIC "])), (e()(), l["\u0275eld"](23, 0, null, null, 24, "div", [
                    ["class", "row d-none-mob pl-4 pr-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](24, 0, null, null, 1, "div", [
                    ["class", "col-sm-12 txt-alg ml-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](25, 0, null, null, 0, "img", [
                    ["class", "ml-2 mt-2 fR cursor-pt"],
                    ["height", "30px"],
                    ["src", "assets/default/images/svg-img/Cross.svg"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0,
                        i = e.component;
                    return "click" === t && (i.modalRef.hide(), l = !1 !== i.closePopPup() && l), l
                }), null, null)), (e()(), l["\u0275eld"](26, 0, null, null, 1, "div", [
                    ["class", "col-sm-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](27, 0, null, null, 0, "img", [
                    ["class", "ml-4 mt-4 mb-4"],
                    ["height", "130px"],
                    ["src", "assets/default/images/svg-img/crossIcon.svg"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](28, 0, null, null, 19, "div", [
                    ["class", "col-sm-8 mt-4 mb-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](29, 0, null, null, 4, "div", [
                    ["class", "row mr-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Jl)), l["\u0275did"](31, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Ql)), l["\u0275did"](33, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](34, 0, null, null, 4, "div", [
                    ["class", "row mr-2 mt-2"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, ei)), l["\u0275did"](36, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, ti)), l["\u0275did"](38, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](39, 0, null, null, 8, "div", [
                    ["class", "col-sm-12 mt-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](40, 0, null, null, 7, "div", [
                    ["class", "row mt-4 mb-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](41, 0, null, null, 0, "div", [
                    ["class", "col-4"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](42, 0, null, null, 2, "div", [
                    ["class", "col-4 pr-0"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](43, 0, null, null, 1, "button", [
                    ["class", "btn book-button button-ui"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0,
                        i = e.component;
                    return "click" === t && (i.doLogin(!0), l = !1 !== i.modalRef.hide() && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, [" BOOK "])), (e()(), l["\u0275eld"](45, 0, null, null, 2, "div", [
                    ["class", "col-4 pr-0 pl-1"]
                ], null, null, null, null, null)), (e()(), l["\u0275eld"](46, 0, null, null, 1, "button", [
                    ["class", "btn call-clinic button-ui"]
                ], null, [
                    [null, "click"]
                ], (function(e, t, n) {
                    var l = !0,
                        i = e.component;
                    return "click" === t && (i.callClinicByPatient(i.bookingAppointments[0].appointmentBookingNumber), l = !1 !== i.modalRef.hide() && l), l
                }), null, null)), (e()(), l["\u0275ted"](-1, null, [" CALL CLINIC "]))], (function(e, t) {
                    var n = t.component;
                    e(t, 7, 0, "TENTATIVE" == n.bookingAppointments[0].status), e(t, 9, 0, "TENTATIVE" !== n.bookingAppointments[0].status), e(t, 12, 0, "TENTATIVE" == n.bookingAppointments[0].status), e(t, 14, 0, "TENTATIVE" !== n.bookingAppointments[0].status), e(t, 31, 0, "TENTATIVE" == n.bookingAppointments[0].status), e(t, 33, 0, "TENTATIVE" !== n.bookingAppointments[0].status), e(t, 36, 0, "TENTATIVE" == n.bookingAppointments[0].status), e(t, 38, 0, "TENTATIVE" !== n.bookingAppointments[0].status)
                }), null)
            }

            function li(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "app-header-doctor", [], null, [
                    [null, "onBackEvent"]
                ], (function(e, t, n) {
                    var l = !0;
                    return "onBackEvent" === t && (l = !1 !== e.component.handleBack() && l), l
                }), Oe.b, Oe.a)), l["\u0275did"](1, 114688, null, 0, Le.a, [Me.k, s.Location, be.k, be.a, me.a], {
                    isCustomBack: [0, "isCustomBack"],
                    isLogoBack: [1, "isLogoBack"]
                }, {
                    onBackEvent: "onBackEvent"
                }), (e()(), l["\u0275eld"](2, 0, null, null, 1, "ngx-spinner", [], null, null, null, Ne.b, Ne.a)), l["\u0275did"](3, 770048, null, 0, Fe.a, [Fe.c, l.ChangeDetectorRef], null, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, Ze)), l["\u0275did"](5, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](16777216, null, null, 1, null, _t)), l["\u0275did"](7, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275and"](0, [
                    ["audioVideoButton", 2]
                ], null, 0, null, Lt)), (e()(), l["\u0275and"](0, [
                    ["callButtons", 2]
                ], null, 0, null, Xt)), (e()(), l["\u0275and"](0, [
                    ["doctorService", 2]
                ], null, 0, null, pn)), (e()(), l["\u0275and"](0, [
                    ["clinicLocation", 2]
                ], null, 0, null, bn)), (e()(), l["\u0275and"](0, [
                    ["callBookingSection", 2]
                ], null, 0, null, xl)), (e()(), l["\u0275and"](0, [
                    ["educationSection", 2]
                ], null, 0, null, jl)), (e()(), l["\u0275eld"](14, 0, null, null, 8, "div", [], null, null, null, null, null)), (e()(), l["\u0275and"](16777216, null, null, 1, null, Gl)), l["\u0275did"](16, 16384, null, 0, s.NgIf, [l.ViewContainerRef, l.TemplateRef], {
                    ngIf: [0, "ngIf"]
                }, null), (e()(), l["\u0275eld"](17, 0, null, null, 1, "div", [
                    ["class", ""],
                    ["id", "videoDiv"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](0, [
                    ["videoModal", 2]
                ], null, 0, null, Kl)), (e()(), l["\u0275and"](0, [
                    ["patientStories", 2]
                ], null, 0, null, ql)), (e()(), l["\u0275eld"](20, 0, null, null, 1, "div", [
                    ["class", ""],
                    ["id", "galleryDiv"]
                ], null, null, null, null, null)), (e()(), l["\u0275and"](0, [
                    ["galleryImgModal", 2]
                ], null, 0, null, $l)), (e()(), l["\u0275and"](0, [
                    ["template", 2]
                ], null, 0, null, ni))], (function(e, t) {
                    var n = t.component;
                    e(t, 1, 0, n.isFromInstant, n.isFromInstant), e(t, 3, 0), e(t, 5, 0, "booking" == n.paramRoutes.param), e(t, 7, 0, !n.paramRoutes.param), e(t, 16, 0, n.slotsAvailable)
                }), null)
            }

            function ii(e) {
                return l["\u0275vid"](0, [(e()(), l["\u0275eld"](0, 0, null, null, 1, "app-profile-doctor", [], null, null, null, li, ze)), l["\u0275did"](1, 114688, null, 0, qe, [Me.k, be.a, me.a, Ye.a, be.k, Ve.a, $e.j, $e.i, Fe.c], null, null)], (function(e, t) {
                    e(t, 1, 0)
                }), null)
            }
            var ri = l["\u0275ccf"]("app-profile-doctor", qe, ii, {}, {}, []),
                si = function() {
                    return function() {}
                }(),
                oi = n("ErIi"),
                ai = n("ZSoF");
            n.d(t, "ProfileDoctorModuleNgFactory", (function() {
                return ui
            }));
            var ui = l["\u0275cmf"](i, [], (function(e) {
                return l["\u0275mod"]([l["\u0275mpd"](512, l.ComponentFactoryResolver, l["\u0275CodegenComponentFactoryResolver"], [
                    [8, [r.a, ri]],
                    [3, l.ComponentFactoryResolver], l.NgModuleRef
                ]), l["\u0275mpd"](4608, s.NgLocalization, s.NgLocaleLocalization, [l.LOCALE_ID, [2, s["\u0275angular_packages_common_common_a"]]]), l["\u0275mpd"](4608, Q["\u0275angular_packages_forms_forms_j"], Q["\u0275angular_packages_forms_forms_j"], []), l["\u0275mpd"](1073742336, s.CommonModule, s.CommonModule, []), l["\u0275mpd"](1073742336, be.l, be.l, [
                    [2, be.r],
                    [2, be.k]
                ]), l["\u0275mpd"](1073742336, si, si, []), l["\u0275mpd"](1073742336, Q["\u0275angular_packages_forms_forms_bc"], Q["\u0275angular_packages_forms_forms_bc"], []), l["\u0275mpd"](1073742336, Q.FormsModule, Q.FormsModule, []), l["\u0275mpd"](1073742336, O, O, []), l["\u0275mpd"](1073742336, oi.a, oi.a, []), l["\u0275mpd"](1073742336, v, v, []), l["\u0275mpd"](1073742336, Fe.b, Fe.b, []), l["\u0275mpd"](1073742336, ai.a, ai.a, []), l["\u0275mpd"](1073742336, ie.SharedModule, ie.SharedModule, []), l["\u0275mpd"](1073742336, De.CarouselModule, De.CarouselModule, []), l["\u0275mpd"](1073742336, te.a, te.a, []), l["\u0275mpd"](1073742336, ne.b, ne.b, []), l["\u0275mpd"](1073742336, le.ScrollingModule, le.ScrollingModule, []), l["\u0275mpd"](1073742336, ee.VirtualScrollerModule, ee.VirtualScrollerModule, []), l["\u0275mpd"](1073742336, pe.ProgressSpinnerModule, pe.ProgressSpinnerModule, []), l["\u0275mpd"](1073742336, J.RatingModule, J.RatingModule, []), l["\u0275mpd"](1073742336, i, i, []), l["\u0275mpd"](1024, be.i, (function() {
                    return [
                        [{
                            path: "",
                            component: qe
                        }]
                    ]
                }), [])])
            }))
        },
        T7iU: function(e, t, n) {
            "object" == typeof navigator && (e.exports = function() {
                "use strict";

                function e(e, t, n) {
                    return t in e ? Object.defineProperty(e, t, {
                        value: n,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : e[t] = n, e
                }

                function t(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var l = t[n];
                        l.enumerable = l.enumerable || !1, l.configurable = !0, "value" in l && (l.writable = !0), Object.defineProperty(e, l.key, l)
                    }
                }

                function n(e, t, n) {
                    return t in e ? Object.defineProperty(e, t, {
                        value: n,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : e[t] = n, e
                }

                function l(e, t) {
                    var n = Object.keys(e);
                    if (Object.getOwnPropertySymbols) {
                        var l = Object.getOwnPropertySymbols(e);
                        t && (l = l.filter((function(t) {
                            return Object.getOwnPropertyDescriptor(e, t).enumerable
                        }))), n.push.apply(n, l)
                    }
                    return n
                }

                function i(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var i = null != arguments[t] ? arguments[t] : {};
                        t % 2 ? l(Object(i), !0).forEach((function(t) {
                            n(e, t, i[t])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : l(Object(i)).forEach((function(t) {
                            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                        }))
                    }
                    return e
                }
                var r = {
                    addCSS: !0,
                    thumbWidth: 15,
                    watch: !0
                };

                function s(e, t) {
                    return (function() {
                        return Array.from(document.querySelectorAll(t)).includes(this)
                    }).call(e, t)
                }
                var o = function(e) {
                        return null != e ? e.constructor : null
                    },
                    a = function(e, t) {
                        return !!(e && t && e instanceof t)
                    },
                    u = function(e) {
                        return o(e) === String
                    },
                    c = function(e) {
                        return Array.isArray(e)
                    },
                    d = function(e) {
                        return a(e, NodeList)
                    },
                    f = u,
                    p = c,
                    h = d,
                    g = function(e) {
                        return a(e, Element)
                    },
                    m = function(e) {
                        return a(e, Event)
                    },
                    v = function(e) {
                        return function(e) {
                            return null == e
                        }(e) || (u(e) || c(e) || d(e)) && !e.length || function(e) {
                            return o(e) === Object
                        }(e) && !Object.keys(e).length
                    },
                    y = function() {
                        function e(t, n) {
                            (function(e, t) {
                                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                            })(this, e), g(t) ? this.element = t : f(t) && (this.element = document.querySelector(t)), g(this.element) && v(this.element.rangeTouch) && (this.config = i({}, r, {}, n), this.init())
                        }
                        return function(e, n, l) {
                            n && t(e.prototype, n), l && t(e, l)
                        }(e, [{
                            key: "init",
                            value: function() {
                                e.enabled && (this.config.addCSS && (this.element.style.userSelect = "none", this.element.style.webKitUserSelect = "none", this.element.style.touchAction = "manipulation"), this.listeners(!0), this.element.rangeTouch = this)
                            }
                        }, {
                            key: "destroy",
                            value: function() {
                                e.enabled && (this.config.addCSS && (this.element.style.userSelect = "", this.element.style.webKitUserSelect = "", this.element.style.touchAction = ""), this.listeners(!1), this.element.rangeTouch = null)
                            }
                        }, {
                            key: "listeners",
                            value: function(e) {
                                var t = this,
                                    n = e ? "addEventListener" : "removeEventListener";
                                ["touchstart", "touchmove", "touchend"].forEach((function(e) {
                                    t.element[n](e, (function(e) {
                                        return t.set(e)
                                    }), !1)
                                }))
                            }
                        }, {
                            key: "get",
                            value: function(t) {
                                if (!e.enabled || !m(t)) return null;
                                var n, l = t.target,
                                    i = t.changedTouches[0],
                                    r = parseFloat(l.getAttribute("min")) || 0,
                                    s = parseFloat(l.getAttribute("max")) || 100,
                                    o = parseFloat(l.getAttribute("step")) || 1,
                                    a = l.getBoundingClientRect(),
                                    u = 100 / a.width * (this.config.thumbWidth / 2) / 100;
                                return 0 > (n = 100 / a.width * (i.clientX - a.left)) ? n = 0 : 100 < n && (n = 100), 50 > n ? n -= (100 - 2 * n) * u : 50 < n && (n += 2 * (n - 50) * u), r + function(e, t) {
                                    if (1 > t) {
                                        var n = function(e) {
                                            var t = "".concat(e).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
                                            return t ? Math.max(0, (t[1] ? t[1].length : 0) - (t[2] ? +t[2] : 0)) : 0
                                        }(t);
                                        return parseFloat(e.toFixed(n))
                                    }
                                    return Math.round(e / t) * t
                                }(n / 100 * (s - r), o)
                            }
                        }, {
                            key: "set",
                            value: function(t) {
                                e.enabled && m(t) && !t.target.disabled && (t.preventDefault(), t.target.value = this.get(t), function(e, t) {
                                    if (e && t) {
                                        var n = new Event(t, {
                                            bubbles: !0
                                        });
                                        e.dispatchEvent(n)
                                    }
                                }(t.target, "touchend" === t.type ? "change" : "input"))
                            }
                        }], [{
                            key: "setup",
                            value: function(t) {
                                var n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},
                                    l = null;
                                if (v(t) || f(t) ? l = Array.from(document.querySelectorAll(f(t) ? t : 'input[type="range"]')) : g(t) ? l = [t] : h(t) ? l = Array.from(t) : p(t) && (l = t.filter(g)), v(l)) return null;
                                var o = i({}, r, {}, n);
                                if (f(t) && o.watch) {
                                    var a = new MutationObserver((function(n) {
                                        Array.from(n).forEach((function(n) {
                                            Array.from(n.addedNodes).forEach((function(n) {
                                                g(n) && s(n, t) && new e(n, o)
                                            }))
                                        }))
                                    }));
                                    a.observe(document.body, {
                                        childList: !0,
                                        subtree: !0
                                    })
                                }
                                return l.map((function(t) {
                                    return new e(t, n)
                                }))
                            }
                        }, {
                            key: "enabled",
                            get: function() {
                                return "ontouchstart" in document.documentElement
                            }
                        }]), e
                    }();
                const b = e => null != e ? e.constructor : null,
                    T = (e, t) => Boolean(e && t && e instanceof t),
                    w = e => null == e,
                    S = e => b(e) === Object,
                    E = e => b(e) === String,
                    _ = e => b(e) === Function,
                    C = e => Array.isArray(e),
                    R = e => T(e, NodeList),
                    I = e => w(e) || (E(e) || C(e) || R(e)) && !e.length || S(e) && !Object.keys(e).length;
                var k = w,
                    A = S,
                    P = e => b(e) === Number && !Number.isNaN(e),
                    x = E,
                    D = e => b(e) === Boolean,
                    O = _,
                    L = C,
                    M = R,
                    N = e => null !== e && "object" == typeof e && 1 === e.nodeType && "object" == typeof e.style && "object" == typeof e.ownerDocument,
                    F = e => T(e, Event),
                    j = e => T(e, KeyboardEvent),
                    B = e => T(e, TextTrack) || !w(e) && E(e.kind),
                    U = e => {
                        if (T(e, window.URL)) return !0;
                        if (!E(e)) return !1;
                        let t = e;
                        e.startsWith("http://") && e.startsWith("https://") || (t = "http://" + e);
                        try {
                            return !I(new URL(t).hostname)
                        } catch (e) {
                            return !1
                        }
                    },
                    V = I;
                const G = (() => {
                    const e = document.createElement("span"),
                        t = {
                            WebkitTransition: "webkitTransitionEnd",
                            MozTransition: "transitionend",
                            OTransition: "oTransitionEnd otransitionend",
                            transition: "transitionend"
                        },
                        n = Object.keys(t).find(t => void 0 !== e.style[t]);
                    return !!x(n) && t[n]
                })();

                function K(e, t) {
                    setTimeout(() => {
                        try {
                            e.hidden = !0, e.hidden = !1
                        } catch (e) {}
                    }, t)
                }
                const H = {
                    isIE: Boolean(window.document.documentMode),
                    isEdge: window.navigator.userAgent.includes("Edge"),
                    isWebkit: "WebkitAppearance" in document.documentElement.style && !/Edge/.test(navigator.userAgent),
                    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),
                    isIos: "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1 || /(iPad|iPhone|iPod)/gi.test(navigator.platform)
                };

                function q(e, t) {
                    return t.split(".").reduce((e, t) => e && e[t], e)
                }

                function Y(e = {}, ...t) {
                    if (!t.length) return e;
                    const n = t.shift();
                    return A(n) ? (Object.keys(n).forEach(t => {
                        A(n[t]) ? (Object.keys(e).includes(t) || Object.assign(e, {
                            [t]: {}
                        }), Y(e[t], n[t])) : Object.assign(e, {
                            [t]: n[t]
                        })
                    }), Y(e, ...t)) : e
                }

                function $(e, t) {
                    Array.from(e.length ? e : [e]).reverse().forEach((e, n) => {
                        const l = n > 0 ? t.cloneNode(!0) : t,
                            i = e.parentNode,
                            r = e.nextSibling;
                        l.appendChild(e), r ? i.insertBefore(l, r) : i.appendChild(l)
                    })
                }

                function z(e, t) {
                    N(e) && !V(t) && Object.entries(t).filter(([, e]) => !k(e)).forEach(([t, n]) => e.setAttribute(t, n))
                }

                function W(e, t, n) {
                    const l = document.createElement(e);
                    return A(t) && z(l, t), x(n) && (l.innerText = n), l
                }

                function X(e, t, n, l) {
                    N(t) && t.appendChild(W(e, n, l))
                }

                function Z(e) {
                    M(e) || L(e) ? Array.from(e).forEach(Z) : N(e) && N(e.parentNode) && e.parentNode.removeChild(e)
                }

                function J(e) {
                    if (!N(e)) return;
                    let {
                        length: t
                    } = e.childNodes;
                    for (; t > 0;) e.removeChild(e.lastChild), t -= 1
                }

                function Q(e, t) {
                    return N(t) && N(t.parentNode) && N(e) ? (t.parentNode.replaceChild(e, t), e) : null
                }

                function ee(e, t) {
                    if (!x(e) || V(e)) return {};
                    const n = {},
                        l = Y({}, t);
                    return e.split(",").forEach(e => {
                        const t = e.trim(),
                            i = t.replace(".", ""),
                            r = t.replace(/[[\]]/g, "").split("="),
                            [s] = r,
                            o = r.length > 1 ? r[1].replace(/["']/g, "") : "";
                        switch (t.charAt(0)) {
                            case ".":
                                n.class = x(l.class) ? `${l.class} ${i}` : i;
                                break;
                            case "#":
                                n.id = t.replace("#", "");
                                break;
                            case "[":
                                n[s] = o
                        }
                    }), Y(l, n)
                }

                function te(e, t) {
                    if (!N(e)) return;
                    let n = t;
                    D(n) || (n = !e.hidden), e.hidden = n
                }

                function ne(e, t, n) {
                    if (M(e)) return Array.from(e).map(e => ne(e, t, n));
                    if (N(e)) {
                        let l = "toggle";
                        return void 0 !== n && (l = n ? "add" : "remove"), e.classList[l](t), e.classList.contains(t)
                    }
                    return !1
                }

                function le(e, t) {
                    return N(e) && e.classList.contains(t)
                }

                function ie(e, t) {
                    const {
                        prototype: n
                    } = Element;
                    return (n.matches || n.webkitMatchesSelector || n.mozMatchesSelector || n.msMatchesSelector || function() {
                        return Array.from(document.querySelectorAll(t)).includes(this)
                    }).call(e, t)
                }

                function re(e) {
                    return this.elements.container.querySelectorAll(e)
                }

                function se(e) {
                    return this.elements.container.querySelector(e)
                }

                function oe(e = null, t = !1) {
                    N(e) && (e.focus({
                        preventScroll: !0
                    }), t && ne(e, this.config.classNames.tabFocus))
                }
                const ae = {
                        "audio/ogg": "vorbis",
                        "audio/wav": "1",
                        "video/webm": "vp8, vorbis",
                        "video/mp4": "avc1.42E01E, mp4a.40.2",
                        "video/ogg": "theora"
                    },
                    ue = {
                        audio: "canPlayType" in document.createElement("audio"),
                        video: "canPlayType" in document.createElement("video"),
                        check(e, t, n) {
                            const l = ue[e] || "html5" !== t;
                            return {
                                api: l,
                                ui: l && ue.rangeInput && ("video" !== e || !H.isIPhone || H.isIPhone && n && ue.playsinline)
                            }
                        },
                        pip: !(H.isIPhone || !O(W("video").webkitSetPresentationMode) && (!document.pictureInPictureEnabled || W("video").disablePictureInPicture)),
                        airplay: O(window.WebKitPlaybackTargetAvailabilityEvent),
                        playsinline: "playsInline" in document.createElement("video"),
                        mime(e) {
                            if (V(e)) return !1;
                            const [t] = e.split("/");
                            let n = e;
                            if (!this.isHTML5 || t !== this.type) return !1;
                            Object.keys(ae).includes(n) && (n += `; codecs="${ae[e]}"`);
                            try {
                                return Boolean(n && this.media.canPlayType(n).replace(/no/, ""))
                            } catch (e) {
                                return !1
                            }
                        },
                        textTracks: "textTracks" in document.createElement("video"),
                        rangeInput: (() => {
                            const e = document.createElement("input");
                            return e.type = "range", "range" === e.type
                        })(),
                        touch: "ontouchstart" in document.documentElement,
                        transitions: !1 !== G,
                        reducedMotion: "matchMedia" in window && window.matchMedia("(prefers-reduced-motion)").matches
                    },
                    ce = (() => {
                        let e = !1;
                        try {
                            const t = Object.defineProperty({}, "passive", {
                                get: () => (e = !0, null)
                            });
                            window.addEventListener("test", null, t), window.removeEventListener("test", null, t)
                        } catch (e) {}
                        return e
                    })();

                function de(e, t, n, l = !1, i = !0, r = !1) {
                    if (!e || !("addEventListener" in e) || V(t) || !O(n)) return;
                    const s = t.split(" ");
                    let o = r;
                    ce && (o = {
                        passive: i,
                        capture: r
                    }), s.forEach(t => {
                        this && this.eventListeners && l && this.eventListeners.push({
                            element: e,
                            type: t,
                            callback: n,
                            options: o
                        }), e[l ? "addEventListener" : "removeEventListener"](t, n, o)
                    })
                }

                function fe(e, t = "", n, l = !0, i = !1) {
                    de.call(this, e, t, n, !0, l, i)
                }

                function pe(e, t = "", n, l = !0, i = !1) {
                    de.call(this, e, t, n, !1, l, i)
                }

                function he(e, t = "", n, l = !0, i = !1) {
                    const r = (...s) => {
                        pe(e, t, r, l, i), n.apply(this, s)
                    };
                    de.call(this, e, t, r, !0, l, i)
                }

                function ge(e, t = "", n = !1, l = {}) {
                    if (!N(e) || V(t)) return;
                    const i = new CustomEvent(t, {
                        bubbles: n,
                        detail: { ...l,
                            plyr: this
                        }
                    });
                    e.dispatchEvent(i)
                }

                function me() {
                    this && this.eventListeners && (this.eventListeners.forEach(e => {
                        const {
                            element: t,
                            type: n,
                            callback: l,
                            options: i
                        } = e;
                        t.removeEventListener(n, l, i)
                    }), this.eventListeners = [])
                }

                function ve() {
                    return new Promise(e => this.ready ? setTimeout(e, 0) : fe.call(this, this.elements.container, "ready", e)).then(() => {})
                }

                function ye(e) {
                    (e => T(e, Promise) && _(e.then))(e) && e.then(null, () => {})
                }

                function be(e) {
                    return L(e) ? e.filter((t, n) => e.indexOf(t) === n) : e
                }

                function Te(e, t) {
                    return L(e) && e.length ? e.reduce((e, n) => Math.abs(n - t) < Math.abs(e - t) ? n : e) : null
                }

                function we(e) {
                    return !(!window || !window.CSS) && window.CSS.supports(e)
                }
                const Se = [
                    [1, 1],
                    [4, 3],
                    [3, 4],
                    [5, 4],
                    [4, 5],
                    [3, 2],
                    [2, 3],
                    [16, 10],
                    [10, 16],
                    [16, 9],
                    [9, 16],
                    [21, 9],
                    [9, 21],
                    [32, 9],
                    [9, 32]
                ].reduce((e, [t, n]) => ({ ...e,
                    [t / n]: [t, n]
                }), {});

                function Ee(e) {
                    return !!(L(e) || x(e) && e.includes(":")) && (L(e) ? e : e.split(":")).map(Number).every(P)
                }

                function _e(e) {
                    if (!L(e) || !e.every(P)) return null;
                    const [t, n] = e, l = (e, t) => 0 === t ? e : l(t, e % t), i = l(t, n);
                    return [t / i, n / i]
                }

                function Ce(e) {
                    const t = e => Ee(e) ? e.split(":").map(Number) : null;
                    let n = t(e);
                    if (null === n && (n = t(this.config.ratio)), null === n && !V(this.embed) && L(this.embed.ratio) && ({
                            ratio: n
                        } = this.embed), null === n && this.isHTML5) {
                        const {
                            videoWidth: e,
                            videoHeight: t
                        } = this.media;
                        n = [e, t]
                    }
                    return _e(n)
                }

                function Re(e) {
                    if (!this.isVideo) return {};
                    const {
                        wrapper: t
                    } = this.elements, n = Ce.call(this, e);
                    if (!L(n)) return {};
                    const [l, i] = _e(n), r = 100 / l * i;
                    if (we(`aspect-ratio: ${l}/${i}`) ? t.style.aspectRatio = `${l}/${i}` : t.style.paddingBottom = r + "%", this.isVimeo && !this.config.vimeo.premium && this.supported.ui) {
                        const e = 100 / this.media.offsetWidth * parseInt(window.getComputedStyle(this.media).paddingBottom, 10),
                            n = (e - r) / (e / 50);
                        this.fullscreen.active ? t.style.paddingBottom = null : this.media.style.transform = `translateY(-${n}%)`
                    } else this.isHTML5 && t.classList.add(this.config.classNames.videoFixedRatio);
                    return {
                        padding: r,
                        ratio: n
                    }
                }

                function Ie(e, t, n = .05) {
                    const l = e / t,
                        i = Te(Object.keys(Se), l);
                    return Math.abs(i - l) <= n ? Se[i] : [e, t]
                }
                const ke = {
                    getSources() {
                        return this.isHTML5 ? Array.from(this.media.querySelectorAll("source")).filter(e => {
                            const t = e.getAttribute("type");
                            return !!V(t) || ue.mime.call(this, t)
                        }) : []
                    },
                    getQualityOptions() {
                        return this.config.quality.forced ? this.config.quality.options : ke.getSources.call(this).map(e => Number(e.getAttribute("size"))).filter(Boolean)
                    },
                    setup() {
                        if (!this.isHTML5) return;
                        const e = this;
                        e.options.speed = e.config.speed.options, V(this.config.ratio) || Re.call(e), Object.defineProperty(e.media, "quality", {
                            get() {
                                const t = ke.getSources.call(e).find(t => t.getAttribute("src") === e.source);
                                return t && Number(t.getAttribute("size"))
                            },
                            set(t) {
                                if (e.quality !== t) {
                                    if (e.config.quality.forced && O(e.config.quality.onChange)) e.config.quality.onChange(t);
                                    else {
                                        const n = ke.getSources.call(e).find(e => Number(e.getAttribute("size")) === t);
                                        if (!n) return;
                                        const {
                                            currentTime: l,
                                            paused: i,
                                            preload: r,
                                            readyState: s,
                                            playbackRate: o
                                        } = e.media;
                                        e.media.src = n.getAttribute("src"), ("none" !== r || s) && (e.once("loadedmetadata", () => {
                                            e.speed = o, e.currentTime = l, i || ye(e.play())
                                        }), e.media.load())
                                    }
                                    ge.call(e, e.media, "qualitychange", !1, {
                                        quality: t
                                    })
                                }
                            }
                        })
                    },
                    cancelRequests() {
                        this.isHTML5 && (Z(ke.getSources.call(this)), this.media.setAttribute("src", this.config.blankVideo), this.media.load(), this.debug.log("Cancelled network requests"))
                    }
                };

                function Ae(e, ...t) {
                    return V(e) ? e : e.toString().replace(/{(\d+)}/g, (e, n) => t[n].toString())
                }
                const Pe = (e = "", t = "", n = "") => e.replace(new RegExp(t.toString().replace(/([.*+?^=!:${}()|[\]/\\])/g, "\\$1"), "g"), n.toString()),
                    xe = (e = "") => e.toString().replace(/\w\S*/g, e => e.charAt(0).toUpperCase() + e.substr(1).toLowerCase());

                function De(e) {
                    const t = document.createElement("div");
                    return t.appendChild(e), t.innerHTML
                }
                const Oe = {
                        pip: "PIP",
                        airplay: "AirPlay",
                        html5: "HTML5",
                        vimeo: "Vimeo",
                        youtube: "YouTube"
                    },
                    Le = {
                        get(e = "", t = {}) {
                            if (V(e) || V(t)) return "";
                            let n = q(t.i18n, e);
                            return V(n) ? Object.keys(Oe).includes(e) ? Oe[e] : "" : (Object.entries({
                                "{seektime}": t.seekTime,
                                "{title}": t.title
                            }).forEach(([e, t]) => {
                                n = Pe(n, e, t)
                            }), n)
                        }
                    };
                class Me {
                    constructor(t) {
                        e(this, "get", e => {
                            if (!Me.supported || !this.enabled) return null;
                            const t = window.localStorage.getItem(this.key);
                            if (V(t)) return null;
                            const n = JSON.parse(t);
                            return x(e) && e.length ? n[e] : n
                        }), e(this, "set", e => {
                            if (!Me.supported || !this.enabled) return;
                            if (!A(e)) return;
                            let t = this.get();
                            V(t) && (t = {}), Y(t, e), window.localStorage.setItem(this.key, JSON.stringify(t))
                        }), this.enabled = t.config.storage.enabled, this.key = t.config.storage.key
                    }
                    static get supported() {
                        try {
                            if (!("localStorage" in window)) return !1;
                            const e = "___test";
                            return window.localStorage.setItem(e, e), window.localStorage.removeItem(e), !0
                        } catch (e) {
                            return !1
                        }
                    }
                }

                function Ne(e, t = "text") {
                    return new Promise((n, l) => {
                        try {
                            const l = new XMLHttpRequest;
                            if (!("withCredentials" in l)) return;
                            l.addEventListener("load", () => {
                                if ("text" === t) try {
                                    n(JSON.parse(l.responseText))
                                } catch (e) {
                                    n(l.responseText)
                                } else n(l.response)
                            }), l.addEventListener("error", () => {
                                throw new Error(l.status)
                            }), l.open("GET", e, !0), l.responseType = t, l.send()
                        } catch (e) {
                            l(e)
                        }
                    })
                }

                function Fe(e, t) {
                    if (!x(e)) return;
                    const n = x(t);
                    let l = !1;
                    const i = () => null !== document.getElementById(t),
                        r = (e, t) => {
                            e.innerHTML = t, n && i() || document.body.insertAdjacentElement("afterbegin", e)
                        };
                    if (!n || !i()) {
                        const i = Me.supported,
                            s = document.createElement("div");
                        if (s.setAttribute("hidden", ""), n && s.setAttribute("id", t), i) {
                            const e = window.localStorage.getItem("cache-" + t);
                            if (l = null !== e, l) {
                                const t = JSON.parse(e);
                                r(s, t.content)
                            }
                        }
                        Ne(e).then(e => {
                            V(e) || (i && window.localStorage.setItem("cache-" + t, JSON.stringify({
                                content: e
                            })), r(s, e))
                        }).catch(() => {})
                    }
                }
                const je = e => Math.trunc(e / 60 / 60 % 60, 10);

                function Be(e = 0, t = !1, n = !1) {
                    if (!P(e)) return Be(void 0, t, n);
                    const l = e => ("0" + e).slice(-2);
                    let i = je(e);
                    const r = Math.trunc(e / 60 % 60, 10),
                        s = (e => Math.trunc(e % 60, 10))(e);
                    return i = t || i > 0 ? i + ":" : "", `${n&&e>0?"-":""}${i}${l(r)}:${l(s)}`
                }
                const Ue = {
                    getIconUrl() {
                        const e = new URL(this.config.iconUrl, window.location).host !== window.location.host || H.isIE && !window.svg4everybody;
                        return {
                            url: this.config.iconUrl,
                            cors: e
                        }
                    },
                    findElements() {
                        try {
                            return this.elements.controls = se.call(this, this.config.selectors.controls.wrapper), this.elements.buttons = {
                                play: re.call(this, this.config.selectors.buttons.play),
                                pause: se.call(this, this.config.selectors.buttons.pause),
                                restart: se.call(this, this.config.selectors.buttons.restart),
                                rewind: se.call(this, this.config.selectors.buttons.rewind),
                                fastForward: se.call(this, this.config.selectors.buttons.fastForward),
                                mute: se.call(this, this.config.selectors.buttons.mute),
                                pip: se.call(this, this.config.selectors.buttons.pip),
                                airplay: se.call(this, this.config.selectors.buttons.airplay),
                                settings: se.call(this, this.config.selectors.buttons.settings),
                                captions: se.call(this, this.config.selectors.buttons.captions),
                                fullscreen: se.call(this, this.config.selectors.buttons.fullscreen)
                            }, this.elements.progress = se.call(this, this.config.selectors.progress), this.elements.inputs = {
                                seek: se.call(this, this.config.selectors.inputs.seek),
                                volume: se.call(this, this.config.selectors.inputs.volume)
                            }, this.elements.display = {
                                buffer: se.call(this, this.config.selectors.display.buffer),
                                currentTime: se.call(this, this.config.selectors.display.currentTime),
                                duration: se.call(this, this.config.selectors.display.duration)
                            }, N(this.elements.progress) && (this.elements.display.seekTooltip = this.elements.progress.querySelector("." + this.config.classNames.tooltip)), !0
                        } catch (e) {
                            return this.debug.warn("It looks like there is a problem with your custom controls HTML", e), this.toggleNativeControls(!0), !1
                        }
                    },
                    createIcon(e, t) {
                        const n = "http://www.w3.org/2000/svg",
                            l = Ue.getIconUrl.call(this),
                            i = `${l.cors?"":l.url}#${this.config.iconPrefix}`,
                            r = document.createElementNS(n, "svg");
                        z(r, Y(t, {
                            "aria-hidden": "true",
                            focusable: "false"
                        }));
                        const s = document.createElementNS(n, "use"),
                            o = `${i}-${e}`;
                        return "href" in s && s.setAttributeNS("http://www.w3.org/1999/xlink", "href", o), s.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", o), r.appendChild(s), r
                    },
                    createLabel(e, t = {}) {
                        const n = Le.get(e, this.config);
                        return W("span", { ...t,
                            class: [t.class, this.config.classNames.hidden].filter(Boolean).join(" ")
                        }, n)
                    },
                    createBadge(e) {
                        if (V(e)) return null;
                        const t = W("span", {
                            class: this.config.classNames.menu.value
                        });
                        return t.appendChild(W("span", {
                            class: this.config.classNames.menu.badge
                        }, e)), t
                    },
                    createButton(e, t) {
                        const n = Y({}, t);
                        let l = function(e = "") {
                            let t = e.toString();
                            return t = function(e = "") {
                                let t = e.toString();
                                return t = Pe(t, "-", " "), t = Pe(t, "_", " "), t = xe(t), Pe(t, " ", "")
                            }(t), t.charAt(0).toLowerCase() + t.slice(1)
                        }(e);
                        const i = {
                            element: "button",
                            toggle: !1,
                            label: null,
                            icon: null,
                            labelPressed: null,
                            iconPressed: null
                        };
                        switch (["element", "icon", "label"].forEach(e => {
                            Object.keys(n).includes(e) && (i[e] = n[e], delete n[e])
                        }), "button" !== i.element || Object.keys(n).includes("type") || (n.type = "button"), Object.keys(n).includes("class") ? n.class.split(" ").some(e => e === this.config.classNames.control) || Y(n, {
                            class: `${n.class} ${this.config.classNames.control}`
                        }) : n.class = this.config.classNames.control, e) {
                            case "play":
                                i.toggle = !0, i.label = "play", i.labelPressed = "pause", i.icon = "play", i.iconPressed = "pause";
                                break;
                            case "mute":
                                i.toggle = !0, i.label = "mute", i.labelPressed = "unmute", i.icon = "volume", i.iconPressed = "muted";
                                break;
                            case "captions":
                                i.toggle = !0, i.label = "enableCaptions", i.labelPressed = "disableCaptions", i.icon = "captions-off", i.iconPressed = "captions-on";
                                break;
                            case "fullscreen":
                                i.toggle = !0, i.label = "enterFullscreen", i.labelPressed = "exitFullscreen", i.icon = "enter-fullscreen", i.iconPressed = "exit-fullscreen";
                                break;
                            case "play-large":
                                n.class += ` ${this.config.classNames.control}--overlaid`, l = "play", i.label = "play", i.icon = "play";
                                break;
                            default:
                                V(i.label) && (i.label = l), V(i.icon) && (i.icon = e)
                        }
                        const r = W(i.element);
                        return i.toggle ? (r.appendChild(Ue.createIcon.call(this, i.iconPressed, {
                            class: "icon--pressed"
                        })), r.appendChild(Ue.createIcon.call(this, i.icon, {
                            class: "icon--not-pressed"
                        })), r.appendChild(Ue.createLabel.call(this, i.labelPressed, {
                            class: "label--pressed"
                        })), r.appendChild(Ue.createLabel.call(this, i.label, {
                            class: "label--not-pressed"
                        }))) : (r.appendChild(Ue.createIcon.call(this, i.icon)), r.appendChild(Ue.createLabel.call(this, i.label))), Y(n, ee(this.config.selectors.buttons[l], n)), z(r, n), "play" === l ? (L(this.elements.buttons[l]) || (this.elements.buttons[l] = []), this.elements.buttons[l].push(r)) : this.elements.buttons[l] = r, r
                    },
                    createRange(e, t) {
                        const n = W("input", Y(ee(this.config.selectors.inputs[e]), {
                            type: "range",
                            min: 0,
                            max: 100,
                            step: .01,
                            value: 0,
                            autocomplete: "off",
                            role: "slider",
                            "aria-label": Le.get(e, this.config),
                            "aria-valuemin": 0,
                            "aria-valuemax": 100,
                            "aria-valuenow": 0
                        }, t));
                        return this.elements.inputs[e] = n, Ue.updateRangeFill.call(this, n), y.setup(n), n
                    },
                    createProgress(e, t) {
                        const n = W("progress", Y(ee(this.config.selectors.display[e]), {
                            min: 0,
                            max: 100,
                            value: 0,
                            role: "progressbar",
                            "aria-hidden": !0
                        }, t));
                        if ("volume" !== e) {
                            n.appendChild(W("span", null, "0"));
                            const t = {
                                    played: "played",
                                    buffer: "buffered"
                                }[e],
                                l = t ? Le.get(t, this.config) : "";
                            n.innerText = "% " + l.toLowerCase()
                        }
                        return this.elements.display[e] = n, n
                    },
                    createTime(e, t) {
                        const n = ee(this.config.selectors.display[e], t),
                            l = W("div", Y(n, {
                                class: `${n.class?n.class:""} ${this.config.classNames.display.time} `.trim(),
                                "aria-label": Le.get(e, this.config)
                            }), "00:00");
                        return this.elements.display[e] = l, l
                    },
                    bindMenuItemShortcuts(e, t) {
                        fe.call(this, e, "keydown keyup", n => {
                            if (![32, 38, 39, 40].includes(n.which)) return;
                            if (n.preventDefault(), n.stopPropagation(), "keydown" === n.type) return;
                            const l = ie(e, '[role="menuitemradio"]');
                            if (!l && [32, 39].includes(n.which)) Ue.showMenuPanel.call(this, t, !0);
                            else {
                                let t;
                                32 !== n.which && (40 === n.which || l && 39 === n.which ? (t = e.nextElementSibling, N(t) || (t = e.parentNode.firstElementChild)) : (t = e.previousElementSibling, N(t) || (t = e.parentNode.lastElementChild)), oe.call(this, t, !0))
                            }
                        }, !1), fe.call(this, e, "keyup", e => {
                            13 === e.which && Ue.focusFirstMenuItem.call(this, null, !0)
                        })
                    },
                    createMenuItem({
                        value: e,
                        list: t,
                        type: n,
                        title: l,
                        badge: i = null,
                        checked: r = !1
                    }) {
                        const s = ee(this.config.selectors.inputs[n]),
                            o = W("button", Y(s, {
                                type: "button",
                                role: "menuitemradio",
                                class: `${this.config.classNames.control} ${s.class?s.class:""}`.trim(),
                                "aria-checked": r,
                                value: e
                            })),
                            a = W("span");
                        a.innerHTML = l, N(i) && a.appendChild(i), o.appendChild(a), Object.defineProperty(o, "checked", {
                            enumerable: !0,
                            get: () => "true" === o.getAttribute("aria-checked"),
                            set(e) {
                                e && Array.from(o.parentNode.children).filter(e => ie(e, '[role="menuitemradio"]')).forEach(e => e.setAttribute("aria-checked", "false")), o.setAttribute("aria-checked", e ? "true" : "false")
                            }
                        }), this.listeners.bind(o, "click keyup", t => {
                            if (!j(t) || 32 === t.which) {
                                switch (t.preventDefault(), t.stopPropagation(), o.checked = !0, n) {
                                    case "language":
                                        this.currentTrack = Number(e);
                                        break;
                                    case "quality":
                                        this.quality = e;
                                        break;
                                    case "speed":
                                        this.speed = parseFloat(e)
                                }
                                Ue.showMenuPanel.call(this, "home", j(t))
                            }
                        }, n, !1), Ue.bindMenuItemShortcuts.call(this, o, n), t.appendChild(o)
                    },
                    formatTime(e = 0, t = !1) {
                        return P(e) ? Be(e, je(this.duration) > 0, t) : e
                    },
                    updateTimeDisplay(e = null, t = 0, n = !1) {
                        N(e) && P(t) && (e.innerText = Ue.formatTime(t, n))
                    },
                    updateVolume() {
                        this.supported.ui && (N(this.elements.inputs.volume) && Ue.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume), N(this.elements.buttons.mute) && (this.elements.buttons.mute.pressed = this.muted || 0 === this.volume))
                    },
                    setRange(e, t = 0) {
                        N(e) && (e.value = t, Ue.updateRangeFill.call(this, e))
                    },
                    updateProgress(e) {
                        if (!this.supported.ui || !F(e)) return;
                        let t = 0;
                        const n = (e, t) => {
                            const n = P(t) ? t : 0,
                                l = N(e) ? e : this.elements.display.buffer;
                            if (N(l)) {
                                l.value = n;
                                const e = l.getElementsByTagName("span")[0];
                                N(e) && (e.childNodes[0].nodeValue = n)
                            }
                        };
                        if (e) switch (e.type) {
                            case "timeupdate":
                            case "seeking":
                            case "seeked":
                                i = this.duration, t = 0 === (l = this.currentTime) || 0 === i || Number.isNaN(l) || Number.isNaN(i) ? 0 : (l / i * 100).toFixed(2), "timeupdate" === e.type && Ue.setRange.call(this, this.elements.inputs.seek, t);
                                break;
                            case "playing":
                            case "progress":
                                n(this.elements.display.buffer, 100 * this.buffered)
                        }
                        var l, i
                    },
                    updateRangeFill(e) {
                        const t = F(e) ? e.target : e;
                        if (N(t) && "range" === t.getAttribute("type")) {
                            if (ie(t, this.config.selectors.inputs.seek)) {
                                t.setAttribute("aria-valuenow", this.currentTime);
                                const e = Ue.formatTime(this.currentTime),
                                    n = Ue.formatTime(this.duration),
                                    l = Le.get("seekLabel", this.config);
                                t.setAttribute("aria-valuetext", l.replace("{currentTime}", e).replace("{duration}", n))
                            } else if (ie(t, this.config.selectors.inputs.volume)) {
                                const e = 100 * t.value;
                                t.setAttribute("aria-valuenow", e), t.setAttribute("aria-valuetext", e.toFixed(1) + "%")
                            } else t.setAttribute("aria-valuenow", t.value);
                            H.isWebkit && t.style.setProperty("--value", t.value / t.max * 100 + "%")
                        }
                    },
                    updateSeekTooltip(e) {
                        if (!this.config.tooltips.seek || !N(this.elements.inputs.seek) || !N(this.elements.display.seekTooltip) || 0 === this.duration) return;
                        const t = this.config.classNames.tooltip + "--visible",
                            n = e => ne(this.elements.display.seekTooltip, t, e);
                        if (this.touch) return void n(!1);
                        let l = 0;
                        const i = this.elements.progress.getBoundingClientRect();
                        if (F(e)) l = 100 / i.width * (e.pageX - i.left);
                        else {
                            if (!le(this.elements.display.seekTooltip, t)) return;
                            l = parseFloat(this.elements.display.seekTooltip.style.left, 10)
                        }
                        l < 0 ? l = 0 : l > 100 && (l = 100), Ue.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * l), this.elements.display.seekTooltip.style.left = l + "%", F(e) && ["mouseenter", "mouseleave"].includes(e.type) && n("mouseenter" === e.type)
                    },
                    timeUpdate(e) {
                        const t = !N(this.elements.display.duration) && this.config.invertTime;
                        Ue.updateTimeDisplay.call(this, this.elements.display.currentTime, t ? this.duration - this.currentTime : this.currentTime, t), e && "timeupdate" === e.type && this.media.seeking || Ue.updateProgress.call(this, e)
                    },
                    durationUpdate() {
                        if (!this.supported.ui || !this.config.invertTime && this.currentTime) return;
                        if (this.duration >= 2 ** 32) return te(this.elements.display.currentTime, !0), void te(this.elements.progress, !0);
                        N(this.elements.inputs.seek) && this.elements.inputs.seek.setAttribute("aria-valuemax", this.duration);
                        const e = N(this.elements.display.duration);
                        !e && this.config.displayDuration && this.paused && Ue.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration), e && Ue.updateTimeDisplay.call(this, this.elements.display.duration, this.duration), Ue.updateSeekTooltip.call(this)
                    },
                    toggleMenuButton(e, t) {
                        te(this.elements.settings.buttons[e], !t)
                    },
                    updateSetting(e, t, n) {
                        const l = this.elements.settings.panels[e];
                        let i = null,
                            r = t;
                        if ("captions" === e) i = this.currentTrack;
                        else {
                            if (i = V(n) ? this[e] : n, V(i) && (i = this.config[e].default), !V(this.options[e]) && !this.options[e].includes(i)) return void this.debug.warn(`Unsupported value of '${i}' for ${e}`);
                            if (!this.config[e].options.includes(i)) return void this.debug.warn(`Disabled value of '${i}' for ${e}`)
                        }
                        if (N(r) || (r = l && l.querySelector('[role="menu"]')), !N(r)) return;
                        this.elements.settings.buttons[e].querySelector("." + this.config.classNames.menu.value).innerHTML = Ue.getLabel.call(this, e, i);
                        const s = r && r.querySelector(`[value="${i}"]`);
                        N(s) && (s.checked = !0)
                    },
                    getLabel(e, t) {
                        switch (e) {
                            case "speed":
                                return 1 === t ? Le.get("normal", this.config) : t + "&times;";
                            case "quality":
                                if (P(t)) {
                                    const e = Le.get("qualityLabel." + t, this.config);
                                    return e.length ? e : t + "p"
                                }
                                return xe(t);
                            case "captions":
                                return Ke.getLabel.call(this);
                            default:
                                return null
                        }
                    },
                    setQualityMenu(e) {
                        if (!N(this.elements.settings.panels.quality)) return;
                        const t = "quality",
                            n = this.elements.settings.panels.quality.querySelector('[role="menu"]');
                        L(e) && (this.options.quality = be(e).filter(e => this.config.quality.options.includes(e)));
                        const l = !V(this.options.quality) && this.options.quality.length > 1;
                        if (Ue.toggleMenuButton.call(this, t, l), J(n), Ue.checkMenu.call(this), !l) return;
                        const i = e => {
                            const t = Le.get("qualityBadge." + e, this.config);
                            return t.length ? Ue.createBadge.call(this, t) : null
                        };
                        this.options.quality.sort((e, t) => {
                            const n = this.config.quality.options;
                            return n.indexOf(e) > n.indexOf(t) ? 1 : -1
                        }).forEach(e => {
                            Ue.createMenuItem.call(this, {
                                value: e,
                                list: n,
                                type: t,
                                title: Ue.getLabel.call(this, "quality", e),
                                badge: i(e)
                            })
                        }), Ue.updateSetting.call(this, t, n)
                    },
                    setCaptionsMenu() {
                        if (!N(this.elements.settings.panels.captions)) return;
                        const e = "captions",
                            t = this.elements.settings.panels.captions.querySelector('[role="menu"]'),
                            n = Ke.getTracks.call(this),
                            l = Boolean(n.length);
                        if (Ue.toggleMenuButton.call(this, e, l), J(t), Ue.checkMenu.call(this), !l) return;
                        const i = n.map((e, n) => ({
                            value: n,
                            checked: this.captions.toggled && this.currentTrack === n,
                            title: Ke.getLabel.call(this, e),
                            badge: e.language && Ue.createBadge.call(this, e.language.toUpperCase()),
                            list: t,
                            type: "language"
                        }));
                        i.unshift({
                            value: -1,
                            checked: !this.captions.toggled,
                            title: Le.get("disabled", this.config),
                            list: t,
                            type: "language"
                        }), i.forEach(Ue.createMenuItem.bind(this)), Ue.updateSetting.call(this, e, t)
                    },
                    setSpeedMenu() {
                        if (!N(this.elements.settings.panels.speed)) return;
                        const e = "speed",
                            t = this.elements.settings.panels.speed.querySelector('[role="menu"]');
                        this.options.speed = this.options.speed.filter(e => e >= this.minimumSpeed && e <= this.maximumSpeed);
                        const n = !V(this.options.speed) && this.options.speed.length > 1;
                        Ue.toggleMenuButton.call(this, e, n), J(t), Ue.checkMenu.call(this), n && (this.options.speed.forEach(n => {
                            Ue.createMenuItem.call(this, {
                                value: n,
                                list: t,
                                type: e,
                                title: Ue.getLabel.call(this, "speed", n)
                            })
                        }), Ue.updateSetting.call(this, e, t))
                    },
                    checkMenu() {
                        const {
                            buttons: e
                        } = this.elements.settings, t = !V(e) && Object.values(e).some(e => !e.hidden);
                        te(this.elements.settings.menu, !t)
                    },
                    focusFirstMenuItem(e, t = !1) {
                        if (this.elements.settings.popup.hidden) return;
                        let n = e;
                        N(n) || (n = Object.values(this.elements.settings.panels).find(e => !e.hidden));
                        const l = n.querySelector('[role^="menuitem"]');
                        oe.call(this, l, t)
                    },
                    toggleMenu(e) {
                        const {
                            popup: t
                        } = this.elements.settings, n = this.elements.buttons.settings;
                        if (!N(t) || !N(n)) return;
                        const {
                            hidden: l
                        } = t;
                        let i = l;
                        if (D(e)) i = e;
                        else if (j(e) && 27 === e.which) i = !1;
                        else if (F(e)) {
                            const l = O(e.composedPath) ? e.composedPath()[0] : e.target,
                                r = t.contains(l);
                            if (r || !r && e.target !== n && i) return
                        }
                        n.setAttribute("aria-expanded", i), te(t, !i), ne(this.elements.container, this.config.classNames.menu.open, i), i && j(e) ? Ue.focusFirstMenuItem.call(this, null, !0) : i || l || oe.call(this, n, j(e))
                    },
                    getMenuSize(e) {
                        const t = e.cloneNode(!0);
                        t.style.position = "absolute", t.style.opacity = 0, t.removeAttribute("hidden"), e.parentNode.appendChild(t);
                        const n = t.scrollWidth,
                            l = t.scrollHeight;
                        return Z(t), {
                            width: n,
                            height: l
                        }
                    },
                    showMenuPanel(e = "", t = !1) {
                        const n = this.elements.container.querySelector(`#plyr-settings-${this.id}-${e}`);
                        if (!N(n)) return;
                        const l = n.parentNode,
                            i = Array.from(l.children).find(e => !e.hidden);
                        if (ue.transitions && !ue.reducedMotion) {
                            l.style.width = i.scrollWidth + "px", l.style.height = i.scrollHeight + "px";
                            const e = Ue.getMenuSize.call(this, n),
                                t = e => {
                                    e.target === l && ["width", "height"].includes(e.propertyName) && (l.style.width = "", l.style.height = "", pe.call(this, l, G, t))
                                };
                            fe.call(this, l, G, t), l.style.width = e.width + "px", l.style.height = e.height + "px"
                        }
                        te(i, !0), te(n, !1), Ue.focusFirstMenuItem.call(this, n, t)
                    },
                    setDownloadUrl() {
                        const e = this.elements.buttons.download;
                        N(e) && e.setAttribute("href", this.download)
                    },
                    create(e) {
                        const {
                            bindMenuItemShortcuts: t,
                            createButton: n,
                            createProgress: l,
                            createRange: i,
                            createTime: r,
                            setQualityMenu: s,
                            setSpeedMenu: o,
                            showMenuPanel: a
                        } = Ue;
                        this.elements.controls = null, L(this.config.controls) && this.config.controls.includes("play-large") && this.elements.container.appendChild(n.call(this, "play-large"));
                        const u = W("div", ee(this.config.selectors.controls.wrapper));
                        this.elements.controls = u;
                        const c = {
                            class: "plyr__controls__item"
                        };
                        return be(L(this.config.controls) ? this.config.controls : []).forEach(s => {
                            if ("restart" === s && u.appendChild(n.call(this, "restart", c)), "rewind" === s && u.appendChild(n.call(this, "rewind", c)), "play" === s && u.appendChild(n.call(this, "play", c)), "fast-forward" === s && u.appendChild(n.call(this, "fast-forward", c)), "progress" === s) {
                                const t = W("div", {
                                        class: c.class + " plyr__progress__container"
                                    }),
                                    n = W("div", ee(this.config.selectors.progress));
                                if (n.appendChild(i.call(this, "seek", {
                                        id: "plyr-seek-" + e.id
                                    })), n.appendChild(l.call(this, "buffer")), this.config.tooltips.seek) {
                                    const e = W("span", {
                                        class: this.config.classNames.tooltip
                                    }, "00:00");
                                    n.appendChild(e), this.elements.display.seekTooltip = e
                                }
                                this.elements.progress = n, t.appendChild(this.elements.progress), u.appendChild(t)
                            }
                            if ("current-time" === s && u.appendChild(r.call(this, "currentTime", c)), "duration" === s && u.appendChild(r.call(this, "duration", c)), "mute" === s || "volume" === s) {
                                let {
                                    volume: t
                                } = this.elements;
                                N(t) && u.contains(t) || (t = W("div", Y({}, c, {
                                    class: (c.class + " plyr__volume").trim()
                                })), this.elements.volume = t, u.appendChild(t)), "mute" === s && t.appendChild(n.call(this, "mute")), "volume" !== s || H.isIos || t.appendChild(i.call(this, "volume", Y({
                                    max: 1,
                                    step: .05,
                                    value: this.config.volume
                                }, {
                                    id: "plyr-volume-" + e.id
                                })))
                            }
                            if ("captions" === s && u.appendChild(n.call(this, "captions", c)), "settings" === s && !V(this.config.settings)) {
                                const l = W("div", Y({}, c, {
                                    class: (c.class + " plyr__menu").trim(),
                                    hidden: ""
                                }));
                                l.appendChild(n.call(this, "settings", {
                                    "aria-haspopup": !0,
                                    "aria-controls": "plyr-settings-" + e.id,
                                    "aria-expanded": !1
                                }));
                                const i = W("div", {
                                        class: "plyr__menu__container",
                                        id: "plyr-settings-" + e.id,
                                        hidden: ""
                                    }),
                                    r = W("div"),
                                    s = W("div", {
                                        id: `plyr-settings-${e.id}-home`
                                    }),
                                    o = W("div", {
                                        role: "menu"
                                    });
                                s.appendChild(o), r.appendChild(s), this.elements.settings.panels.home = s, this.config.settings.forEach(n => {
                                    const l = W("button", Y(ee(this.config.selectors.buttons.settings), {
                                        type: "button",
                                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,
                                        role: "menuitem",
                                        "aria-haspopup": !0,
                                        hidden: ""
                                    }));
                                    t.call(this, l, n), fe.call(this, l, "click", () => {
                                        a.call(this, n, !1)
                                    });
                                    const i = W("span", null, Le.get(n, this.config)),
                                        s = W("span", {
                                            class: this.config.classNames.menu.value
                                        });
                                    s.innerHTML = e[n], i.appendChild(s), l.appendChild(i), o.appendChild(l);
                                    const u = W("div", {
                                            id: `plyr-settings-${e.id}-${n}`,
                                            hidden: ""
                                        }),
                                        c = W("button", {
                                            type: "button",
                                            class: `${this.config.classNames.control} ${this.config.classNames.control}--back`
                                        });
                                    c.appendChild(W("span", {
                                        "aria-hidden": !0
                                    }, Le.get(n, this.config))), c.appendChild(W("span", {
                                        class: this.config.classNames.hidden
                                    }, Le.get("menuBack", this.config))), fe.call(this, u, "keydown", e => {
                                        37 === e.which && (e.preventDefault(), e.stopPropagation(), a.call(this, "home", !0))
                                    }, !1), fe.call(this, c, "click", () => {
                                        a.call(this, "home", !1)
                                    }), u.appendChild(c), u.appendChild(W("div", {
                                        role: "menu"
                                    })), r.appendChild(u), this.elements.settings.buttons[n] = l, this.elements.settings.panels[n] = u
                                }), i.appendChild(r), l.appendChild(i), u.appendChild(l), this.elements.settings.popup = i, this.elements.settings.menu = l
                            }
                            if ("pip" === s && ue.pip && u.appendChild(n.call(this, "pip", c)), "airplay" === s && ue.airplay && u.appendChild(n.call(this, "airplay", c)), "download" === s) {
                                const e = Y({}, c, {
                                    element: "a",
                                    href: this.download,
                                    target: "_blank"
                                });
                                this.isHTML5 && (e.download = "");
                                const {
                                    download: t
                                } = this.config.urls;
                                !U(t) && this.isEmbed && Y(e, {
                                    icon: "logo-" + this.provider,
                                    label: this.provider
                                }), u.appendChild(n.call(this, "download", e))
                            }
                            "fullscreen" === s && u.appendChild(n.call(this, "fullscreen", c))
                        }), this.isHTML5 && s.call(this, ke.getQualityOptions.call(this)), o.call(this), u
                    },
                    inject() {
                        if (this.config.loadSprite) {
                            const e = Ue.getIconUrl.call(this);
                            e.cors && Fe(e.url, "sprite-plyr")
                        }
                        this.id = Math.floor(1e4 * Math.random());
                        let e = null;
                        this.elements.controls = null;
                        const t = {
                            id: this.id,
                            seektime: this.config.seekTime,
                            title: this.config.title
                        };
                        let n, l = !0;
                        if (O(this.config.controls) && (this.config.controls = this.config.controls.call(this, t)), this.config.controls || (this.config.controls = []), N(this.config.controls) || x(this.config.controls) ? e = this.config.controls : (e = Ue.create.call(this, {
                                id: this.id,
                                seektime: this.config.seekTime,
                                speed: this.speed,
                                quality: this.quality,
                                captions: Ke.getLabel.call(this)
                            }), l = !1), l && x(this.config.controls) && (e = (e => {
                                let n = e;
                                return Object.entries(t).forEach(([e, t]) => {
                                    n = Pe(n, `{${e}}`, t)
                                }), n
                            })(e)), x(this.config.selectors.controls.container) && (n = document.querySelector(this.config.selectors.controls.container)), N(n) || (n = this.elements.container), n[N(e) ? "insertAdjacentElement" : "insertAdjacentHTML"]("afterbegin", e), N(this.elements.controls) || Ue.findElements.call(this), !V(this.elements.buttons)) {
                            const e = e => {
                                const t = this.config.classNames.controlPressed;
                                Object.defineProperty(e, "pressed", {
                                    enumerable: !0,
                                    get: () => le(e, t),
                                    set(n = !1) {
                                        ne(e, t, n)
                                    }
                                })
                            };
                            Object.values(this.elements.buttons).filter(Boolean).forEach(t => {
                                L(t) || M(t) ? Array.from(t).filter(Boolean).forEach(e) : e(t)
                            })
                        }
                        if (H.isEdge && K(n), this.config.tooltips.controls) {
                            const {
                                classNames: e,
                                selectors: t
                            } = this.config, n = re.call(this, `${t.controls.wrapper} ${t.labels} .${e.hidden}`);
                            Array.from(n).forEach(e => {
                                ne(e, this.config.classNames.hidden, !1), ne(e, this.config.classNames.tooltip, !0)
                            })
                        }
                    }
                };

                function Ve(e, t = !0) {
                    let n = e;
                    if (t) {
                        const e = document.createElement("a");
                        e.href = n, n = e.href
                    }
                    try {
                        return new URL(n)
                    } catch (e) {
                        return null
                    }
                }

                function Ge(e) {
                    const t = new URLSearchParams;
                    return A(e) && Object.entries(e).forEach(([e, n]) => {
                        t.set(e, n)
                    }), t
                }
                const Ke = {
                        setup() {
                            if (!this.supported.ui) return;
                            if (!this.isVideo || this.isYouTube || this.isHTML5 && !ue.textTracks) return void(L(this.config.controls) && this.config.controls.includes("settings") && this.config.settings.includes("captions") && Ue.setCaptionsMenu.call(this));
                            var e, t;
                            if (N(this.elements.captions) || (this.elements.captions = W("div", ee(this.config.selectors.captions)), t = this.elements.wrapper, N(e = this.elements.captions) && N(t) && t.parentNode.insertBefore(e, t.nextSibling)), H.isIE && window.URL) {
                                const e = this.media.querySelectorAll("track");
                                Array.from(e).forEach(e => {
                                    const t = e.getAttribute("src"),
                                        n = Ve(t);
                                    null !== n && n.hostname !== window.location.href.hostname && ["http:", "https:"].includes(n.protocol) && Ne(t, "blob").then(t => {
                                        e.setAttribute("src", window.URL.createObjectURL(t))
                                    }).catch(() => {
                                        Z(e)
                                    })
                                })
                            }
                            const n = be((navigator.languages || [navigator.language || navigator.userLanguage || "en"]).map(e => e.split("-")[0]));
                            let l = (this.storage.get("language") || this.config.captions.language || "auto").toLowerCase();
                            "auto" === l && ([l] = n);
                            let i = this.storage.get("captions");
                            D(i) || ({
                                active: i
                            } = this.config.captions), Object.assign(this.captions, {
                                toggled: !1,
                                active: i,
                                language: l,
                                languages: n
                            }), this.isHTML5 && fe.call(this, this.media.textTracks, this.config.captions.update ? "addtrack removetrack" : "removetrack", Ke.update.bind(this)), setTimeout(Ke.update.bind(this), 0)
                        },
                        update() {
                            const e = Ke.getTracks.call(this, !0),
                                {
                                    active: t,
                                    language: n,
                                    meta: l,
                                    currentTrackNode: i
                                } = this.captions,
                                r = Boolean(e.find(e => e.language === n));
                            this.isHTML5 && this.isVideo && e.filter(e => !l.get(e)).forEach(e => {
                                this.debug.log("Track added", e), l.set(e, {
                                    default: "showing" === e.mode
                                }), "showing" === e.mode && (e.mode = "hidden"), fe.call(this, e, "cuechange", () => Ke.updateCues.call(this))
                            }), (r && this.language !== n || !e.includes(i)) && (Ke.setLanguage.call(this, n), Ke.toggle.call(this, t && r)), ne(this.elements.container, this.config.classNames.captions.enabled, !V(e)), L(this.config.controls) && this.config.controls.includes("settings") && this.config.settings.includes("captions") && Ue.setCaptionsMenu.call(this)
                        },
                        toggle(e, t = !0) {
                            if (!this.supported.ui) return;
                            const {
                                toggled: n
                            } = this.captions, l = this.config.classNames.captions.active, i = k(e) ? !n : e;
                            if (i !== n) {
                                if (t || (this.captions.active = i, this.storage.set({
                                        captions: i
                                    })), !this.language && i && !t) {
                                    const e = Ke.getTracks.call(this),
                                        t = Ke.findTrack.call(this, [this.captions.language, ...this.captions.languages], !0);
                                    return this.captions.language = t.language, void Ke.set.call(this, e.indexOf(t))
                                }
                                this.elements.buttons.captions && (this.elements.buttons.captions.pressed = i), ne(this.elements.container, l, i), this.captions.toggled = i, Ue.updateSetting.call(this, "captions"), ge.call(this, this.media, i ? "captionsenabled" : "captionsdisabled")
                            }
                            setTimeout(() => {
                                i && this.captions.toggled && (this.captions.currentTrackNode.mode = "hidden")
                            })
                        },
                        set(e, t = !0) {
                            const n = Ke.getTracks.call(this);
                            if (-1 !== e)
                                if (P(e))
                                    if (e in n) {
                                        if (this.captions.currentTrack !== e) {
                                            this.captions.currentTrack = e;
                                            const l = n[e],
                                                {
                                                    language: i
                                                } = l || {};
                                            this.captions.currentTrackNode = l, Ue.updateSetting.call(this, "captions"), t || (this.captions.language = i, this.storage.set({
                                                language: i
                                            })), this.isVimeo && this.embed.enableTextTrack(i), ge.call(this, this.media, "languagechange")
                                        }
                                        Ke.toggle.call(this, !0, t), this.isHTML5 && this.isVideo && Ke.updateCues.call(this)
                                    } else this.debug.warn("Track not found", e);
                            else this.debug.warn("Invalid caption argument", e);
                            else Ke.toggle.call(this, !1, t)
                        },
                        setLanguage(e, t = !0) {
                            if (!x(e)) return void this.debug.warn("Invalid language argument", e);
                            const n = e.toLowerCase();
                            this.captions.language = n;
                            const l = Ke.getTracks.call(this),
                                i = Ke.findTrack.call(this, [n]);
                            Ke.set.call(this, l.indexOf(i), t)
                        },
                        getTracks(e = !1) {
                            return Array.from((this.media || {}).textTracks || []).filter(t => !this.isHTML5 || e || this.captions.meta.has(t)).filter(e => ["captions", "subtitles"].includes(e.kind))
                        },
                        findTrack(e, t = !1) {
                            const n = Ke.getTracks.call(this),
                                l = e => Number((this.captions.meta.get(e) || {}).default),
                                i = Array.from(n).sort((e, t) => l(t) - l(e));
                            let r;
                            return e.every(e => (r = i.find(t => t.language === e), !r)), r || (t ? i[0] : void 0)
                        },
                        getCurrentTrack() {
                            return Ke.getTracks.call(this)[this.currentTrack]
                        },
                        getLabel(e) {
                            let t = e;
                            return !B(t) && ue.textTracks && this.captions.toggled && (t = Ke.getCurrentTrack.call(this)), B(t) ? V(t.label) ? V(t.language) ? Le.get("enabled", this.config) : e.language.toUpperCase() : t.label : Le.get("disabled", this.config)
                        },
                        updateCues(e) {
                            if (!this.supported.ui) return;
                            if (!N(this.elements.captions)) return void this.debug.warn("No captions element to render to");
                            if (!k(e) && !Array.isArray(e)) return void this.debug.warn("updateCues: Invalid input", e);
                            let t = e;
                            if (!t) {
                                const e = Ke.getCurrentTrack.call(this);
                                t = Array.from((e || {}).activeCues || []).map(e => e.getCueAsHTML()).map(De)
                            }
                            const n = t.map(e => e.trim()).join("\n");
                            if (n !== this.elements.captions.innerHTML) {
                                J(this.elements.captions);
                                const e = W("span", ee(this.config.selectors.caption));
                                e.innerHTML = n, this.elements.captions.appendChild(e), ge.call(this, this.media, "cuechange")
                            }
                        }
                    },
                    He = {
                        enabled: !0,
                        title: "",
                        debug: !1,
                        autoplay: !1,
                        autopause: !0,
                        playsinline: !0,
                        seekTime: 10,
                        volume: 1,
                        muted: !1,
                        duration: null,
                        displayDuration: !0,
                        invertTime: !0,
                        toggleInvert: !0,
                        ratio: null,
                        clickToPlay: !0,
                        hideControls: !0,
                        resetOnEnd: !1,
                        disableContextMenu: !0,
                        loadSprite: !0,
                        iconPrefix: "plyr",
                        iconUrl: "https://cdn.plyr.io/3.6.8/plyr.svg",
                        blankVideo: "https://cdn.plyr.io/static/blank.mp4",
                        quality: {
                            default: 576,
                            options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],
                            forced: !1,
                            onChange: null
                        },
                        loop: {
                            active: !1
                        },
                        speed: {
                            selected: 1,
                            options: [.5, .75, 1, 1.25, 1.5, 1.75, 2, 4]
                        },
                        keyboard: {
                            focused: !0,
                            global: !1
                        },
                        tooltips: {
                            controls: !1,
                            seek: !0
                        },
                        captions: {
                            active: !1,
                            language: "auto",
                            update: !1
                        },
                        fullscreen: {
                            enabled: !0,
                            fallback: !0,
                            iosNative: !1
                        },
                        storage: {
                            enabled: !0,
                            key: "plyr"
                        },
                        controls: ["play-large", "play", "progress", "current-time", "mute", "volume", "captions", "settings", "pip", "airplay", "fullscreen"],
                        settings: ["captions", "quality", "speed"],
                        i18n: {
                            restart: "Restart",
                            rewind: "Rewind {seektime}s",
                            play: "Play",
                            pause: "Pause",
                            fastForward: "Forward {seektime}s",
                            seek: "Seek",
                            seekLabel: "{currentTime} of {duration}",
                            played: "Played",
                            buffered: "Buffered",
                            currentTime: "Current time",
                            duration: "Duration",
                            volume: "Volume",
                            mute: "Mute",
                            unmute: "Unmute",
                            enableCaptions: "Enable captions",
                            disableCaptions: "Disable captions",
                            download: "Download",
                            enterFullscreen: "Enter fullscreen",
                            exitFullscreen: "Exit fullscreen",
                            frameTitle: "Player for {title}",
                            captions: "Captions",
                            settings: "Settings",
                            pip: "PIP",
                            menuBack: "Go back to previous menu",
                            speed: "Speed",
                            normal: "Normal",
                            quality: "Quality",
                            loop: "Loop",
                            start: "Start",
                            end: "End",
                            all: "All",
                            reset: "Reset",
                            disabled: "Disabled",
                            enabled: "Enabled",
                            advertisement: "Ad",
                            qualityBadge: {
                                2160: "4K",
                                1440: "HD",
                                1080: "HD",
                                720: "HD",
                                576: "SD",
                                480: "SD"
                            }
                        },
                        urls: {
                            download: null,
                            vimeo: {
                                sdk: "https://player.vimeo.com/api/player.js",
                                iframe: "https://player.vimeo.com/video/{0}?{1}",
                                api: "https://vimeo.com/api/oembed.json?url={0}"
                            },
                            youtube: {
                                sdk: "https://www.youtube.com/iframe_api",
                                api: "https://noembed.com/embed?url=https://www.youtube.com/watch?v={0}"
                            },
                            googleIMA: {
                                sdk: "https://imasdk.googleapis.com/js/sdkloader/ima3.js"
                            }
                        },
                        listeners: {
                            seek: null,
                            play: null,
                            pause: null,
                            restart: null,
                            rewind: null,
                            fastForward: null,
                            mute: null,
                            volume: null,
                            captions: null,
                            download: null,
                            fullscreen: null,
                            pip: null,
                            airplay: null,
                            speed: null,
                            quality: null,
                            loop: null,
                            language: null
                        },
                        events: ["ended", "progress", "stalled", "playing", "waiting", "canplay", "canplaythrough", "loadstart", "loadeddata", "loadedmetadata", "timeupdate", "volumechange", "play", "pause", "error", "seeking", "seeked", "emptied", "ratechange", "cuechange", "download", "enterfullscreen", "exitfullscreen", "captionsenabled", "captionsdisabled", "languagechange", "controlshidden", "controlsshown", "ready", "statechange", "qualitychange", "adsloaded", "adscontentpause", "adscontentresume", "adstarted", "adsmidpoint", "adscomplete", "adsallcomplete", "adsimpression", "adsclick"],
                        selectors: {
                            editable: "input, textarea, select, [contenteditable]",
                            container: ".plyr",
                            controls: {
                                container: null,
                                wrapper: ".plyr__controls"
                            },
                            labels: "[data-plyr]",
                            buttons: {
                                play: '[data-plyr="play"]',
                                pause: '[data-plyr="pause"]',
                                restart: '[data-plyr="restart"]',
                                rewind: '[data-plyr="rewind"]',
                                fastForward: '[data-plyr="fast-forward"]',
                                mute: '[data-plyr="mute"]',
                                captions: '[data-plyr="captions"]',
                                download: '[data-plyr="download"]',
                                fullscreen: '[data-plyr="fullscreen"]',
                                pip: '[data-plyr="pip"]',
                                airplay: '[data-plyr="airplay"]',
                                settings: '[data-plyr="settings"]',
                                loop: '[data-plyr="loop"]'
                            },
                            inputs: {
                                seek: '[data-plyr="seek"]',
                                volume: '[data-plyr="volume"]',
                                speed: '[data-plyr="speed"]',
                                language: '[data-plyr="language"]',
                                quality: '[data-plyr="quality"]'
                            },
                            display: {
                                currentTime: ".plyr__time--current",
                                duration: ".plyr__time--duration",
                                buffer: ".plyr__progress__buffer",
                                loop: ".plyr__progress__loop",
                                volume: ".plyr__volume--display"
                            },
                            progress: ".plyr__progress",
                            captions: ".plyr__captions",
                            caption: ".plyr__caption"
                        },
                        classNames: {
                            type: "plyr--{0}",
                            provider: "plyr--{0}",
                            video: "plyr__video-wrapper",
                            embed: "plyr__video-embed",
                            videoFixedRatio: "plyr__video-wrapper--fixed-ratio",
                            embedContainer: "plyr__video-embed__container",
                            poster: "plyr__poster",
                            posterEnabled: "plyr__poster-enabled",
                            ads: "plyr__ads",
                            control: "plyr__control",
                            controlPressed: "plyr__control--pressed",
                            playing: "plyr--playing",
                            paused: "plyr--paused",
                            stopped: "plyr--stopped",
                            loading: "plyr--loading",
                            hover: "plyr--hover",
                            tooltip: "plyr__tooltip",
                            cues: "plyr__cues",
                            hidden: "plyr__sr-only",
                            hideControls: "plyr--hide-controls",
                            isIos: "plyr--is-ios",
                            isTouch: "plyr--is-touch",
                            uiSupported: "plyr--full-ui",
                            noTransition: "plyr--no-transition",
                            display: {
                                time: "plyr__time"
                            },
                            menu: {
                                value: "plyr__menu__value",
                                badge: "plyr__badge",
                                open: "plyr--menu-open"
                            },
                            captions: {
                                enabled: "plyr--captions-enabled",
                                active: "plyr--captions-active"
                            },
                            fullscreen: {
                                enabled: "plyr--fullscreen-enabled",
                                fallback: "plyr--fullscreen-fallback"
                            },
                            pip: {
                                supported: "plyr--pip-supported",
                                active: "plyr--pip-active"
                            },
                            airplay: {
                                supported: "plyr--airplay-supported",
                                active: "plyr--airplay-active"
                            },
                            tabFocus: "plyr__tab-focus",
                            previewThumbnails: {
                                thumbContainer: "plyr__preview-thumb",
                                thumbContainerShown: "plyr__preview-thumb--is-shown",
                                imageContainer: "plyr__preview-thumb__image-container",
                                timeContainer: "plyr__preview-thumb__time-container",
                                scrubbingContainer: "plyr__preview-scrubbing",
                                scrubbingContainerShown: "plyr__preview-scrubbing--is-shown"
                            }
                        },
                        attributes: {
                            embed: {
                                provider: "data-plyr-provider",
                                id: "data-plyr-embed-id"
                            }
                        },
                        ads: {
                            enabled: !1,
                            publisherId: "",
                            tagUrl: ""
                        },
                        previewThumbnails: {
                            enabled: !1,
                            src: ""
                        },
                        vimeo: {
                            byline: !1,
                            portrait: !1,
                            title: !1,
                            speed: !0,
                            transparent: !1,
                            customControls: !0,
                            referrerPolicy: null,
                            premium: !1
                        },
                        youtube: {
                            rel: 0,
                            showinfo: 0,
                            iv_load_policy: 3,
                            modestbranding: 1,
                            customControls: !0,
                            noCookie: !1
                        }
                    },
                    qe = "picture-in-picture",
                    Ye = {
                        html5: "html5",
                        youtube: "youtube",
                        vimeo: "vimeo"
                    },
                    $e = () => {};
                class ze {
                    constructor(e = !1) {
                        this.enabled = window.console && e, this.enabled && this.log("Debugging enabled")
                    }
                    get log() {
                        return this.enabled ? Function.prototype.bind.call(console.log, console) : $e
                    }
                    get warn() {
                        return this.enabled ? Function.prototype.bind.call(console.warn, console) : $e
                    }
                    get error() {
                        return this.enabled ? Function.prototype.bind.call(console.error, console) : $e
                    }
                }
                class We {
                    constructor(t) {
                        e(this, "onChange", () => {
                            if (!this.enabled) return;
                            const e = this.player.elements.buttons.fullscreen;
                            N(e) && (e.pressed = this.active), ge.call(this.player, this.target === this.player.media ? this.target : this.player.elements.container, this.active ? "enterfullscreen" : "exitfullscreen", !0)
                        }), e(this, "toggleFallback", (e = !1) => {
                            if (e ? this.scrollPosition = {
                                    x: window.scrollX || 0,
                                    y: window.scrollY || 0
                                } : window.scrollTo(this.scrollPosition.x, this.scrollPosition.y), document.body.style.overflow = e ? "hidden" : "", ne(this.target, this.player.config.classNames.fullscreen.fallback, e), H.isIos) {
                                let t = document.head.querySelector('meta[name="viewport"]');
                                const n = "viewport-fit=cover";
                                t || (t = document.createElement("meta"), t.setAttribute("name", "viewport"));
                                const l = x(t.content) && t.content.includes(n);
                                e ? (this.cleanupViewport = !l, l || (t.content += "," + n)) : this.cleanupViewport && (t.content = t.content.split(",").filter(e => e.trim() !== n).join(","))
                            }
                            this.onChange()
                        }), e(this, "trapFocus", e => {
                            if (H.isIos || !this.active || "Tab" !== e.key || 9 !== e.keyCode) return;
                            const t = document.activeElement,
                                n = re.call(this.player, "a[href], button:not(:disabled), input:not(:disabled), [tabindex]"),
                                [l] = n,
                                i = n[n.length - 1];
                            t !== i || e.shiftKey ? t === l && e.shiftKey && (i.focus(), e.preventDefault()) : (l.focus(), e.preventDefault())
                        }), e(this, "update", () => {
                            if (this.enabled) {
                                let e;
                                e = this.forceFallback ? "Fallback (forced)" : We.native ? "Native" : "Fallback", this.player.debug.log(e + " fullscreen enabled")
                            } else this.player.debug.log("Fullscreen not supported and fallback disabled");
                            ne(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled)
                        }), e(this, "enter", () => {
                            this.enabled && (H.isIos && this.player.config.fullscreen.iosNative ? this.player.isVimeo ? this.player.embed.requestFullscreen() : this.target.webkitEnterFullscreen() : !We.native || this.forceFallback ? this.toggleFallback(!0) : this.prefix ? V(this.prefix) || this.target[`${this.prefix}Request${this.property}`]() : this.target.requestFullscreen({
                                navigationUI: "hide"
                            }))
                        }), e(this, "exit", () => {
                            this.enabled && (H.isIos && this.player.config.fullscreen.iosNative ? (this.target.webkitExitFullscreen(), ye(this.player.play())) : !We.native || this.forceFallback ? this.toggleFallback(!1) : this.prefix ? V(this.prefix) || document[`${this.prefix}${"moz"===this.prefix?"Cancel":"Exit"}${this.property}`]() : (document.cancelFullScreen || document.exitFullscreen).call(document))
                        }), e(this, "toggle", () => {
                            this.active ? this.exit() : this.enter()
                        }), this.player = t, this.prefix = We.prefix, this.property = We.property, this.scrollPosition = {
                            x: 0,
                            y: 0
                        }, this.forceFallback = "force" === t.config.fullscreen.fallback, this.player.elements.fullscreen = t.config.fullscreen.container && function(e, t) {
                            const {
                                prototype: n
                            } = Element;
                            return (n.closest || function() {
                                let e = this;
                                do {
                                    if (ie.matches(e, t)) return e;
                                    e = e.parentElement || e.parentNode
                                } while (null !== e && 1 === e.nodeType);
                                return null
                            }).call(e, t)
                        }(this.player.elements.container, t.config.fullscreen.container), fe.call(this.player, document, "ms" === this.prefix ? "MSFullscreenChange" : this.prefix + "fullscreenchange", () => {
                            this.onChange()
                        }), fe.call(this.player, this.player.elements.container, "dblclick", e => {
                            N(this.player.elements.controls) && this.player.elements.controls.contains(e.target) || this.player.listeners.proxy(e, this.toggle, "fullscreen")
                        }), fe.call(this, this.player.elements.container, "keydown", e => this.trapFocus(e)), this.update()
                    }
                    static get native() {
                        return !!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled)
                    }
                    get usingNative() {
                        return We.native && !this.forceFallback
                    }
                    static get prefix() {
                        if (O(document.exitFullscreen)) return "";
                        let e = "";
                        return ["webkit", "moz", "ms"].some(t => !(!O(document[t + "ExitFullscreen"]) && !O(document[t + "CancelFullScreen"]) || (e = t, 0))), e
                    }
                    static get property() {
                        return "moz" === this.prefix ? "FullScreen" : "Fullscreen"
                    }
                    get enabled() {
                        return (We.native || this.player.config.fullscreen.fallback) && this.player.config.fullscreen.enabled && this.player.supported.ui && this.player.isVideo
                    }
                    get active() {
                        if (!this.enabled) return !1;
                        if (!We.native || this.forceFallback) return le(this.target, this.player.config.classNames.fullscreen.fallback);
                        const e = this.prefix ? document[`${this.prefix}${this.property}Element`] : document.fullscreenElement;
                        return e && e.shadowRoot ? e === this.target.getRootNode().host : e === this.target
                    }
                    get target() {
                        return H.isIos && this.player.config.fullscreen.iosNative ? this.player.media : this.player.elements.fullscreen || this.player.elements.container
                    }
                }

                function Xe(e, t = 1) {
                    return new Promise((n, l) => {
                        const i = new Image,
                            r = () => {
                                delete i.onload, delete i.onerror, (i.naturalWidth >= t ? n : l)(i)
                            };
                        Object.assign(i, {
                            onload: r,
                            onerror: r,
                            src: e
                        })
                    })
                }
                const Ze = {
                    addStyleHook() {
                        ne(this.elements.container, this.config.selectors.container.replace(".", ""), !0), ne(this.elements.container, this.config.classNames.uiSupported, this.supported.ui)
                    },
                    toggleNativeControls(e = !1) {
                        e && this.isHTML5 ? this.media.setAttribute("controls", "") : this.media.removeAttribute("controls")
                    },
                    build() {
                        if (this.listeners.media(), !this.supported.ui) return this.debug.warn(`Basic support only for ${this.provider} ${this.type}`), void Ze.toggleNativeControls.call(this, !0);
                        N(this.elements.controls) || (Ue.inject.call(this), this.listeners.controls()), Ze.toggleNativeControls.call(this), this.isHTML5 && Ke.setup.call(this), this.volume = null, this.muted = null, this.loop = null, this.quality = null, this.speed = null, Ue.updateVolume.call(this), Ue.timeUpdate.call(this), Ze.checkPlaying.call(this), ne(this.elements.container, this.config.classNames.pip.supported, ue.pip && this.isHTML5 && this.isVideo), ne(this.elements.container, this.config.classNames.airplay.supported, ue.airplay && this.isHTML5), ne(this.elements.container, this.config.classNames.isIos, H.isIos), ne(this.elements.container, this.config.classNames.isTouch, this.touch), this.ready = !0, setTimeout(() => {
                            ge.call(this, this.media, "ready")
                        }, 0), Ze.setTitle.call(this), this.poster && Ze.setPoster.call(this, this.poster, !1).catch(() => {}), this.config.duration && Ue.durationUpdate.call(this)
                    },
                    setTitle() {
                        let e = Le.get("play", this.config);
                        if (x(this.config.title) && !V(this.config.title) && (e += ", " + this.config.title), Array.from(this.elements.buttons.play || []).forEach(t => {
                                t.setAttribute("aria-label", e)
                            }), this.isEmbed) {
                            const e = se.call(this, "iframe");
                            if (!N(e)) return;
                            const t = V(this.config.title) ? "video" : this.config.title,
                                n = Le.get("frameTitle", this.config);
                            e.setAttribute("title", n.replace("{title}", t))
                        }
                    },
                    togglePoster(e) {
                        ne(this.elements.container, this.config.classNames.posterEnabled, e)
                    },
                    setPoster(e, t = !0) {
                        return t && this.poster ? Promise.reject(new Error("Poster already set")) : (this.media.setAttribute("data-poster", e), this.elements.poster.removeAttribute("hidden"), ve.call(this).then(() => Xe(e)).catch(t => {
                            throw e === this.poster && Ze.togglePoster.call(this, !1), t
                        }).then(() => {
                            if (e !== this.poster) throw new Error("setPoster cancelled by later call to setPoster")
                        }).then(() => (Object.assign(this.elements.poster.style, {
                            backgroundImage: `url('${e}')`,
                            backgroundSize: ""
                        }), Ze.togglePoster.call(this, !0), e)))
                    },
                    checkPlaying(e) {
                        ne(this.elements.container, this.config.classNames.playing, this.playing), ne(this.elements.container, this.config.classNames.paused, this.paused), ne(this.elements.container, this.config.classNames.stopped, this.stopped), Array.from(this.elements.buttons.play || []).forEach(e => {
                            Object.assign(e, {
                                pressed: this.playing
                            }), e.setAttribute("aria-label", Le.get(this.playing ? "pause" : "play", this.config))
                        }), F(e) && "timeupdate" === e.type || Ze.toggleControls.call(this)
                    },
                    checkLoading(e) {
                        this.loading = ["stalled", "waiting"].includes(e.type), clearTimeout(this.timers.loading), this.timers.loading = setTimeout(() => {
                            ne(this.elements.container, this.config.classNames.loading, this.loading), Ze.toggleControls.call(this)
                        }, this.loading ? 250 : 0)
                    },
                    toggleControls(e) {
                        const {
                            controls: t
                        } = this.elements;
                        if (t && this.config.hideControls) {
                            const n = this.touch && this.lastSeekTime + 2e3 > Date.now();
                            this.toggleControls(Boolean(e || this.loading || this.paused || t.pressed || t.hover || n))
                        }
                    },
                    migrateStyles() {
                        Object.values({ ...this.media.style
                        }).filter(e => !V(e) && x(e) && e.startsWith("--plyr")).forEach(e => {
                            this.elements.container.style.setProperty(e, this.media.style.getPropertyValue(e)), this.media.style.removeProperty(e)
                        }), V(this.media.style) && this.media.removeAttribute("style")
                    }
                };
                class Je {
                    constructor(t) {
                        e(this, "firstTouch", () => {
                            const {
                                player: e
                            } = this, {
                                elements: t
                            } = e;
                            e.touch = !0, ne(t.container, e.config.classNames.isTouch, !0)
                        }), e(this, "setTabFocus", e => {
                            const {
                                player: t
                            } = this, {
                                elements: n
                            } = t;
                            clearTimeout(this.focusTimer), ("keydown" !== e.type || 9 === e.which) && ("keydown" === e.type && (this.lastKeyDown = e.timeStamp), ("focus" !== e.type || e.timeStamp - this.lastKeyDown <= 20) && ((() => {
                                const e = t.config.classNames.tabFocus;
                                ne(re.call(t, "." + e), e, !1)
                            })(), "focusout" !== e.type && (this.focusTimer = setTimeout(() => {
                                const e = document.activeElement;
                                n.container.contains(e) && ne(document.activeElement, t.config.classNames.tabFocus, !0)
                            }, 10))))
                        }), e(this, "global", (e = !0) => {
                            const {
                                player: t
                            } = this;
                            t.config.keyboard.global && de.call(t, window, "keydown keyup", this.handleKey, e, !1), de.call(t, document.body, "click", this.toggleMenu, e), he.call(t, document.body, "touchstart", this.firstTouch), de.call(t, document.body, "keydown focus blur focusout", this.setTabFocus, e, !1, !0)
                        }), e(this, "container", () => {
                            const {
                                player: e
                            } = this, {
                                config: t,
                                elements: n,
                                timers: l
                            } = e;
                            !t.keyboard.global && t.keyboard.focused && fe.call(e, n.container, "keydown keyup", this.handleKey, !1), fe.call(e, n.container, "mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen", t => {
                                const {
                                    controls: i
                                } = n;
                                i && "enterfullscreen" === t.type && (i.pressed = !1, i.hover = !1);
                                let r = 0;
                                ["touchstart", "touchmove", "mousemove"].includes(t.type) && (Ze.toggleControls.call(e, !0), r = e.touch ? 3e3 : 2e3), clearTimeout(l.controls), l.controls = setTimeout(() => Ze.toggleControls.call(e, !1), r)
                            });
                            const i = () => {
                                    if (!e.isVimeo || e.config.vimeo.premium) return;
                                    const t = n.wrapper,
                                        {
                                            active: l
                                        } = e.fullscreen,
                                        [i, r] = Ce.call(e),
                                        s = we(`aspect-ratio: ${i} / ${r}`);
                                    if (!l) return void(s ? (t.style.width = null, t.style.height = null) : (t.style.maxWidth = null, t.style.margin = null));
                                    const [o, a] = [Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0), Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)], u = o / a > i / r;
                                    s ? (t.style.width = u ? "auto" : "100%", t.style.height = u ? "100%" : "auto") : (t.style.maxWidth = u ? a / r * i + "px" : null, t.style.margin = u ? "0 auto" : null)
                                },
                                r = () => {
                                    clearTimeout(l.resized), l.resized = setTimeout(i, 50)
                                };
                            fe.call(e, n.container, "enterfullscreen exitfullscreen", t => {
                                const {
                                    target: l
                                } = e.fullscreen;
                                l === n.container && (!e.isEmbed && V(e.config.ratio) || (i(), ("enterfullscreen" === t.type ? fe : pe).call(e, window, "resize", r)))
                            })
                        }), e(this, "media", () => {
                            const {
                                player: e
                            } = this, {
                                elements: t
                            } = e;
                            if (fe.call(e, e.media, "timeupdate seeking seeked", t => Ue.timeUpdate.call(e, t)), fe.call(e, e.media, "durationchange loadeddata loadedmetadata", t => Ue.durationUpdate.call(e, t)), fe.call(e, e.media, "ended", () => {
                                    e.isHTML5 && e.isVideo && e.config.resetOnEnd && (e.restart(), e.pause())
                                }), fe.call(e, e.media, "progress playing seeking seeked", t => Ue.updateProgress.call(e, t)), fe.call(e, e.media, "volumechange", t => Ue.updateVolume.call(e, t)), fe.call(e, e.media, "playing play pause ended emptied timeupdate", t => Ze.checkPlaying.call(e, t)), fe.call(e, e.media, "waiting canplay seeked playing", t => Ze.checkLoading.call(e, t)), e.supported.ui && e.config.clickToPlay && !e.isAudio) {
                                const n = se.call(e, "." + e.config.classNames.video);
                                if (!N(n)) return;
                                fe.call(e, t.container, "click", l => {
                                    ([t.container, n].includes(l.target) || n.contains(l.target)) && (e.touch && e.config.hideControls || (e.ended ? (this.proxy(l, e.restart, "restart"), this.proxy(l, () => {
                                        ye(e.play())
                                    }, "play")) : this.proxy(l, () => {
                                        ye(e.togglePlay())
                                    }, "play")))
                                })
                            }
                            e.supported.ui && e.config.disableContextMenu && fe.call(e, t.wrapper, "contextmenu", e => {
                                e.preventDefault()
                            }, !1), fe.call(e, e.media, "volumechange", () => {
                                e.storage.set({
                                    volume: e.volume,
                                    muted: e.muted
                                })
                            }), fe.call(e, e.media, "ratechange", () => {
                                Ue.updateSetting.call(e, "speed"), e.storage.set({
                                    speed: e.speed
                                })
                            }), fe.call(e, e.media, "qualitychange", t => {
                                Ue.updateSetting.call(e, "quality", null, t.detail.quality)
                            }), fe.call(e, e.media, "ready qualitychange", () => {
                                Ue.setDownloadUrl.call(e)
                            });
                            const n = e.config.events.concat(["keyup", "keydown"]).join(" ");
                            fe.call(e, e.media, n, n => {
                                let {
                                    detail: l = {}
                                } = n;
                                "error" === n.type && (l = e.media.error), ge.call(e, t.container, n.type, !0, l)
                            })
                        }), e(this, "proxy", (e, t, n) => {
                            const {
                                player: l
                            } = this, i = l.config.listeners[n];
                            let r = !0;
                            O(i) && (r = i.call(l, e)), !1 !== r && O(t) && t.call(l, e)
                        }), e(this, "bind", (e, t, n, l, i = !0) => {
                            const {
                                player: r
                            } = this, s = O(r.config.listeners[l]);
                            fe.call(r, e, t, e => this.proxy(e, n, l), i && !s)
                        }), e(this, "controls", () => {
                            const {
                                player: e
                            } = this, {
                                elements: t
                            } = e, n = H.isIE ? "change" : "input";
                            if (t.buttons.play && Array.from(t.buttons.play).forEach(t => {
                                    this.bind(t, "click", () => {
                                        ye(e.togglePlay())
                                    }, "play")
                                }), this.bind(t.buttons.restart, "click", e.restart, "restart"), this.bind(t.buttons.rewind, "click", () => {
                                    e.lastSeekTime = Date.now(), e.rewind()
                                }, "rewind"), this.bind(t.buttons.fastForward, "click", () => {
                                    e.lastSeekTime = Date.now(), e.forward()
                                }, "fastForward"), this.bind(t.buttons.mute, "click", () => {
                                    e.muted = !e.muted
                                }, "mute"), this.bind(t.buttons.captions, "click", () => e.toggleCaptions()), this.bind(t.buttons.download, "click", () => {
                                    ge.call(e, e.media, "download")
                                }, "download"), this.bind(t.buttons.fullscreen, "click", () => {
                                    e.fullscreen.toggle()
                                }, "fullscreen"), this.bind(t.buttons.pip, "click", () => {
                                    e.pip = "toggle"
                                }, "pip"), this.bind(t.buttons.airplay, "click", e.airplay, "airplay"), this.bind(t.buttons.settings, "click", t => {
                                    t.stopPropagation(), t.preventDefault(), Ue.toggleMenu.call(e, t)
                                }, null, !1), this.bind(t.buttons.settings, "keyup", t => {
                                    const n = t.which;
                                    [13, 32].includes(n) && (13 !== n ? (t.preventDefault(), t.stopPropagation(), Ue.toggleMenu.call(e, t)) : Ue.focusFirstMenuItem.call(e, null, !0))
                                }, null, !1), this.bind(t.settings.menu, "keydown", t => {
                                    27 === t.which && Ue.toggleMenu.call(e, t)
                                }), this.bind(t.inputs.seek, "mousedown mousemove", e => {
                                    const n = t.progress.getBoundingClientRect();
                                    e.currentTarget.setAttribute("seek-value", 100 / n.width * (e.pageX - n.left))
                                }), this.bind(t.inputs.seek, "mousedown mouseup keydown keyup touchstart touchend", t => {
                                    const n = t.currentTarget,
                                        l = t.keyCode ? t.keyCode : t.which,
                                        i = "play-on-seeked";
                                    if (j(t) && 39 !== l && 37 !== l) return;
                                    e.lastSeekTime = Date.now();
                                    const r = n.hasAttribute(i),
                                        s = ["mouseup", "touchend", "keyup"].includes(t.type);
                                    r && s ? (n.removeAttribute(i), ye(e.play())) : !s && e.playing && (n.setAttribute(i, ""), e.pause())
                                }), H.isIos) {
                                const t = re.call(e, 'input[type="range"]');
                                Array.from(t).forEach(e => this.bind(e, n, e => K(e.target)))
                            }
                            this.bind(t.inputs.seek, n, t => {
                                const n = t.currentTarget;
                                let l = n.getAttribute("seek-value");
                                V(l) && (l = n.value), n.removeAttribute("seek-value"), e.currentTime = l / n.max * e.duration
                            }, "seek"), this.bind(t.progress, "mouseenter mouseleave mousemove", t => Ue.updateSeekTooltip.call(e, t)), this.bind(t.progress, "mousemove touchmove", t => {
                                const {
                                    previewThumbnails: n
                                } = e;
                                n && n.loaded && n.startMove(t)
                            }), this.bind(t.progress, "mouseleave touchend click", () => {
                                const {
                                    previewThumbnails: t
                                } = e;
                                t && t.loaded && t.endMove(!1, !0)
                            }), this.bind(t.progress, "mousedown touchstart", t => {
                                const {
                                    previewThumbnails: n
                                } = e;
                                n && n.loaded && n.startScrubbing(t)
                            }), this.bind(t.progress, "mouseup touchend", t => {
                                const {
                                    previewThumbnails: n
                                } = e;
                                n && n.loaded && n.endScrubbing(t)
                            }), H.isWebkit && Array.from(re.call(e, 'input[type="range"]')).forEach(t => {
                                this.bind(t, "input", t => Ue.updateRangeFill.call(e, t.target))
                            }), e.config.toggleInvert && !N(t.display.duration) && this.bind(t.display.currentTime, "click", () => {
                                0 !== e.currentTime && (e.config.invertTime = !e.config.invertTime, Ue.timeUpdate.call(e))
                            }), this.bind(t.inputs.volume, n, t => {
                                e.volume = t.target.value
                            }, "volume"), this.bind(t.controls, "mouseenter mouseleave", n => {
                                t.controls.hover = !e.touch && "mouseenter" === n.type
                            }), t.fullscreen && Array.from(t.fullscreen.children).filter(e => !e.contains(t.container)).forEach(n => {
                                this.bind(n, "mouseenter mouseleave", n => {
                                    t.controls.hover = !e.touch && "mouseenter" === n.type
                                })
                            }), this.bind(t.controls, "mousedown mouseup touchstart touchend touchcancel", e => {
                                t.controls.pressed = ["mousedown", "touchstart"].includes(e.type)
                            }), this.bind(t.controls, "focusin", () => {
                                const {
                                    config: n,
                                    timers: l
                                } = e;
                                ne(t.controls, n.classNames.noTransition, !0), Ze.toggleControls.call(e, !0), setTimeout(() => {
                                    ne(t.controls, n.classNames.noTransition, !1)
                                }, 0);
                                const i = this.touch ? 3e3 : 4e3;
                                clearTimeout(l.controls), l.controls = setTimeout(() => Ze.toggleControls.call(e, !1), i)
                            }), this.bind(t.inputs.volume, "wheel", t => {
                                const n = t.webkitDirectionInvertedFromDevice,
                                    [l, i] = [t.deltaX, -t.deltaY].map(e => n ? -e : e),
                                    r = Math.sign(Math.abs(l) > Math.abs(i) ? l : i);
                                e.increaseVolume(r / 50);
                                const {
                                    volume: s
                                } = e.media;
                                (1 === r && s < 1 || -1 === r && s > 0) && t.preventDefault()
                            }, "volume", !1)
                        }), this.player = t, this.lastKey = null, this.focusTimer = null, this.lastKeyDown = null, this.handleKey = this.handleKey.bind(this), this.toggleMenu = this.toggleMenu.bind(this), this.setTabFocus = this.setTabFocus.bind(this), this.firstTouch = this.firstTouch.bind(this)
                    }
                    handleKey(e) {
                        const {
                            player: t
                        } = this, {
                            elements: n
                        } = t, l = e.keyCode ? e.keyCode : e.which, i = "keydown" === e.type, r = i && l === this.lastKey;
                        if (!(e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) && P(l))
                            if (i) {
                                const i = document.activeElement;
                                if (N(i)) {
                                    const {
                                        editable: l
                                    } = t.config.selectors, {
                                        seek: r
                                    } = n.inputs;
                                    if (i !== r && ie(i, l)) return;
                                    if (32 === e.which && ie(i, 'button, [role^="menuitem"]')) return
                                }
                                switch ([32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79].includes(l) && (e.preventDefault(), e.stopPropagation()), l) {
                                    case 48:
                                    case 49:
                                    case 50:
                                    case 51:
                                    case 52:
                                    case 53:
                                    case 54:
                                    case 55:
                                    case 56:
                                    case 57:
                                        r || (t.currentTime = t.duration / 10 * (l - 48));
                                        break;
                                    case 32:
                                    case 75:
                                        r || ye(t.togglePlay());
                                        break;
                                    case 38:
                                        t.increaseVolume(.1);
                                        break;
                                    case 40:
                                        t.decreaseVolume(.1);
                                        break;
                                    case 77:
                                        r || (t.muted = !t.muted);
                                        break;
                                    case 39:
                                        t.forward();
                                        break;
                                    case 37:
                                        t.rewind();
                                        break;
                                    case 70:
                                        t.fullscreen.toggle();
                                        break;
                                    case 67:
                                        r || t.toggleCaptions();
                                        break;
                                    case 76:
                                        t.loop = !t.loop
                                }
                                27 === l && !t.fullscreen.usingNative && t.fullscreen.active && t.fullscreen.toggle(), this.lastKey = l
                            } else this.lastKey = null
                    }
                    toggleMenu(e) {
                        Ue.toggleMenu.call(this.player, e)
                    }
                }
                "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self && self;
                var Qe = function(e, t) {
                    return function(e, t) {
                        e.exports = function() {
                            var e = function() {},
                                t = {},
                                n = {},
                                l = {};

                            function i(e, t) {
                                if (e) {
                                    var i = l[e];
                                    if (n[e] = t, i)
                                        for (; i.length;) i[0](e, t), i.splice(0, 1)
                                }
                            }

                            function r(t, n) {
                                t.call && (t = {
                                    success: t
                                }), n.length ? (t.error || e)(n) : (t.success || e)(t)
                            }

                            function s(t, n, l, i) {
                                var r, o, a = document,
                                    u = l.async,
                                    c = (l.numRetries || 0) + 1,
                                    d = l.before || e,
                                    f = t.replace(/[\?|#].*$/, ""),
                                    p = t.replace(/^(css|img)!/, "");
                                i = i || 0, /(^css!|\.css$)/.test(f) ? ((o = a.createElement("link")).rel = "stylesheet", o.href = p, (r = "hideFocus" in o) && o.relList && (r = 0, o.rel = "preload", o.as = "style")) : /(^img!|\.(png|gif|jpg|svg|webp)$)/.test(f) ? (o = a.createElement("img")).src = p : ((o = a.createElement("script")).src = t, o.async = void 0 === u || u), o.onload = o.onerror = o.onbeforeload = function(e) {
                                    var a = e.type[0];
                                    if (r) try {
                                        o.sheet.cssText.length || (a = "e")
                                    } catch (e) {
                                        18 != e.code && (a = "e")
                                    }
                                    if ("e" == a) {
                                        if ((i += 1) < c) return s(t, n, l, i)
                                    } else if ("preload" == o.rel && "style" == o.as) return o.rel = "stylesheet";
                                    n(t, a, e.defaultPrevented)
                                }, !1 !== d(t, o) && a.head.appendChild(o)
                            }

                            function o(e, t, n) {
                                var l, i, r = (e = e.push ? e : [e]).length,
                                    o = r,
                                    a = [];
                                for (l = function(e, n, l) {
                                        if ("e" == n && a.push(e), "b" == n) {
                                            if (!l) return;
                                            a.push(e)
                                        }--r || t(a)
                                    }, i = 0; i < o; i++) s(e[i], l, n)
                            }

                            function a(e, n, l) {
                                var s, a;
                                if (n && n.trim && (s = n), a = (s ? l : n) || {}, s) {
                                    if (s in t) throw "LoadJS";
                                    t[s] = !0
                                }

                                function u(t, n) {
                                    o(e, (function(e) {
                                        r(a, e), t && r({
                                            success: t,
                                            error: n
                                        }, e), i(s, e)
                                    }), a)
                                }
                                if (a.returnPromise) return new Promise(u);
                                u()
                            }
                            return a.ready = function(e, t) {
                                return function(e, t) {
                                    var i, r, s, o = [],
                                        a = (e = e.push ? e : [e]).length,
                                        u = a;
                                    for (i = function(e, n) {
                                            n.length && o.push(e), --u || t(o)
                                        }; a--;)(s = n[r = e[a]]) ? i(r, s) : (l[r] = l[r] || []).push(i)
                                }(e, (function(e) {
                                    r(t, e)
                                })), a
                            }, a.done = function(e) {
                                i(e, [])
                            }, a.reset = function() {
                                t = {}, n = {}, l = {}
                            }, a.isDefined = function(e) {
                                return e in t
                            }, a
                        }()
                    }(t = {
                        exports: {}
                    }), t.exports
                }();

                function et(e) {
                    return new Promise((t, n) => {
                        Qe(e, {
                            success: t,
                            error: n
                        })
                    })
                }

                function tt(e) {
                    e && !this.embed.hasPlayed && (this.embed.hasPlayed = !0), this.media.paused === e && (this.media.paused = !e, ge.call(this, this.media, e ? "play" : "pause"))
                }
                const nt = {
                    setup() {
                        const e = this;
                        ne(e.elements.wrapper, e.config.classNames.embed, !0), e.options.speed = e.config.speed.options, Re.call(e), A(window.Vimeo) ? nt.ready.call(e) : et(e.config.urls.vimeo.sdk).then(() => {
                            nt.ready.call(e)
                        }).catch(t => {
                            e.debug.warn("Vimeo SDK (player.js) failed to load", t)
                        })
                    },
                    ready() {
                        const e = this,
                            t = e.config.vimeo,
                            {
                                premium: n,
                                referrerPolicy: l,
                                ...i
                            } = t;
                        n && Object.assign(i, {
                            controls: !1,
                            sidedock: !1
                        });
                        const r = Ge({
                            loop: e.config.loop.active,
                            autoplay: e.autoplay,
                            muted: e.muted,
                            gesture: "media",
                            playsinline: !this.config.fullscreen.iosNative,
                            ...i
                        });
                        let s = e.media.getAttribute("src");
                        V(s) && (s = e.media.getAttribute(e.config.attributes.embed.id));
                        const o = V(a = s) ? null : P(Number(a)) ? a : a.match(/^.*(vimeo.com\/|video\/)(\d+).*/) ? RegExp.$2 : a;
                        var a;
                        const u = W("iframe"),
                            c = Ae(e.config.urls.vimeo.iframe, o, r);
                        if (u.setAttribute("src", c), u.setAttribute("allowfullscreen", ""), u.setAttribute("allow", ["autoplay", "fullscreen", "picture-in-picture", "encrypted-media", "accelerometer", "gyroscope"].join("; ")), V(l) || u.setAttribute("referrerPolicy", l), n || !t.customControls) u.setAttribute("data-poster", e.poster), e.media = Q(u, e.media);
                        else {
                            const t = W("div", {
                                class: e.config.classNames.embedContainer,
                                "data-poster": e.poster
                            });
                            t.appendChild(u), e.media = Q(t, e.media)
                        }
                        t.customControls || Ne(Ae(e.config.urls.vimeo.api, c)).then(t => {
                            !V(t) && t.thumbnail_url && Ze.setPoster.call(e, t.thumbnail_url).catch(() => {})
                        }), e.embed = new window.Vimeo.Player(u, {
                            autopause: e.config.autopause,
                            muted: e.muted
                        }), e.media.paused = !0, e.media.currentTime = 0, e.supported.ui && e.embed.disableTextTrack(), e.media.play = () => (tt.call(e, !0), e.embed.play()), e.media.pause = () => (tt.call(e, !1), e.embed.pause()), e.media.stop = () => {
                            e.pause(), e.currentTime = 0
                        };
                        let {
                            currentTime: d
                        } = e.media;
                        Object.defineProperty(e.media, "currentTime", {
                            get: () => d,
                            set(t) {
                                const {
                                    embed: n,
                                    media: l,
                                    paused: i,
                                    volume: r
                                } = e, s = i && !n.hasPlayed;
                                l.seeking = !0, ge.call(e, l, "seeking"), Promise.resolve(s && n.setVolume(0)).then(() => n.setCurrentTime(t)).then(() => s && n.pause()).then(() => s && n.setVolume(r)).catch(() => {})
                            }
                        });
                        let f = e.config.speed.selected;
                        Object.defineProperty(e.media, "playbackRate", {
                            get: () => f,
                            set(t) {
                                e.embed.setPlaybackRate(t).then(() => {
                                    f = t, ge.call(e, e.media, "ratechange")
                                }).catch(() => {
                                    e.options.speed = [1]
                                })
                            }
                        });
                        let {
                            volume: p
                        } = e.config;
                        Object.defineProperty(e.media, "volume", {
                            get: () => p,
                            set(t) {
                                e.embed.setVolume(t).then(() => {
                                    p = t, ge.call(e, e.media, "volumechange")
                                })
                            }
                        });
                        let {
                            muted: h
                        } = e.config;
                        Object.defineProperty(e.media, "muted", {
                            get: () => h,
                            set(t) {
                                const n = !!D(t) && t;
                                e.embed.setVolume(n ? 0 : e.config.volume).then(() => {
                                    h = n, ge.call(e, e.media, "volumechange")
                                })
                            }
                        });
                        let g, {
                            loop: m
                        } = e.config;
                        Object.defineProperty(e.media, "loop", {
                            get: () => m,
                            set(t) {
                                const n = D(t) ? t : e.config.loop.active;
                                e.embed.setLoop(n).then(() => {
                                    m = n
                                })
                            }
                        }), e.embed.getVideoUrl().then(t => {
                            g = t, Ue.setDownloadUrl.call(e)
                        }).catch(e => {
                            this.debug.warn(e)
                        }), Object.defineProperty(e.media, "currentSrc", {
                            get: () => g
                        }), Object.defineProperty(e.media, "ended", {
                            get: () => e.currentTime === e.duration
                        }), Promise.all([e.embed.getVideoWidth(), e.embed.getVideoHeight()]).then(t => {
                            const [n, l] = t;
                            e.embed.ratio = Ie(n, l), Re.call(this)
                        }), e.embed.setAutopause(e.config.autopause).then(t => {
                            e.config.autopause = t
                        }), e.embed.getVideoTitle().then(t => {
                            e.config.title = t, Ze.setTitle.call(this)
                        }), e.embed.getCurrentTime().then(t => {
                            d = t, ge.call(e, e.media, "timeupdate")
                        }), e.embed.getDuration().then(t => {
                            e.media.duration = t, ge.call(e, e.media, "durationchange")
                        }), e.embed.getTextTracks().then(t => {
                            e.media.textTracks = t, Ke.setup.call(e)
                        }), e.embed.on("cuechange", ({
                            cues: t = []
                        }) => {
                            const n = t.map(e => function(e) {
                                const t = document.createDocumentFragment(),
                                    n = document.createElement("div");
                                return t.appendChild(n), n.innerHTML = e, t.firstChild.innerText
                            }(e.text));
                            Ke.updateCues.call(e, n)
                        }), e.embed.on("loaded", () => {
                            e.embed.getPaused().then(t => {
                                tt.call(e, !t), t || ge.call(e, e.media, "playing")
                            }), N(e.embed.element) && e.supported.ui && e.embed.element.setAttribute("tabindex", -1)
                        }), e.embed.on("bufferstart", () => {
                            ge.call(e, e.media, "waiting")
                        }), e.embed.on("bufferend", () => {
                            ge.call(e, e.media, "playing")
                        }), e.embed.on("play", () => {
                            tt.call(e, !0), ge.call(e, e.media, "playing")
                        }), e.embed.on("pause", () => {
                            tt.call(e, !1)
                        }), e.embed.on("timeupdate", t => {
                            e.media.seeking = !1, d = t.seconds, ge.call(e, e.media, "timeupdate")
                        }), e.embed.on("progress", t => {
                            e.media.buffered = t.percent, ge.call(e, e.media, "progress"), 1 === parseInt(t.percent, 10) && ge.call(e, e.media, "canplaythrough"), e.embed.getDuration().then(t => {
                                t !== e.media.duration && (e.media.duration = t, ge.call(e, e.media, "durationchange"))
                            })
                        }), e.embed.on("seeked", () => {
                            e.media.seeking = !1, ge.call(e, e.media, "seeked")
                        }), e.embed.on("ended", () => {
                            e.media.paused = !0, ge.call(e, e.media, "ended")
                        }), e.embed.on("error", t => {
                            e.media.error = t, ge.call(e, e.media, "error")
                        }), t.customControls && setTimeout(() => Ze.build.call(e), 0)
                    }
                };

                function lt(e) {
                    e && !this.embed.hasPlayed && (this.embed.hasPlayed = !0), this.media.paused === e && (this.media.paused = !e, ge.call(this, this.media, e ? "play" : "pause"))
                }

                function it(e) {
                    return e.noCookie ? "https://www.youtube-nocookie.com" : "http:" === window.location.protocol ? "http://www.youtube.com" : void 0
                }
                const rt = {
                        setup() {
                            if (ne(this.elements.wrapper, this.config.classNames.embed, !0), A(window.YT) && O(window.YT.Player)) rt.ready.call(this);
                            else {
                                const e = window.onYouTubeIframeAPIReady;
                                window.onYouTubeIframeAPIReady = () => {
                                    O(e) && e(), rt.ready.call(this)
                                }, et(this.config.urls.youtube.sdk).catch(e => {
                                    this.debug.warn("YouTube API failed to load", e)
                                })
                            }
                        },
                        getTitle(e) {
                            Ne(Ae(this.config.urls.youtube.api, e)).then(e => {
                                if (A(e)) {
                                    const {
                                        title: t,
                                        height: n,
                                        width: l
                                    } = e;
                                    this.config.title = t, Ze.setTitle.call(this), this.embed.ratio = Ie(l, n)
                                }
                                Re.call(this)
                            }).catch(() => {
                                Re.call(this)
                            })
                        },
                        ready() {
                            const e = this,
                                t = e.config.youtube,
                                n = e.media && e.media.getAttribute("id");
                            if (!V(n) && n.startsWith("youtube-")) return;
                            let l = e.media.getAttribute("src");
                            V(l) && (l = e.media.getAttribute(this.config.attributes.embed.id));
                            const i = V(r = l) ? null : r.match(/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/) ? RegExp.$2 : r;
                            var r;
                            const s = W("div", {
                                id: `${e.provider}-${Math.floor(1e4*Math.random())}`,
                                "data-poster": t.customControls ? e.poster : void 0
                            });
                            if (e.media = Q(s, e.media), t.customControls) {
                                const t = e => `https://i.ytimg.com/vi/${i}/${e}default.jpg`;
                                Xe(t("maxres"), 121).catch(() => Xe(t("sd"), 121)).catch(() => Xe(t("hq"))).then(t => Ze.setPoster.call(e, t.src)).then(t => {
                                    t.includes("maxres") || (e.elements.poster.style.backgroundSize = "cover")
                                }).catch(() => {})
                            }
                            e.embed = new window.YT.Player(e.media, {
                                videoId: i,
                                host: it(t),
                                playerVars: Y({}, {
                                    autoplay: e.config.autoplay ? 1 : 0,
                                    hl: e.config.hl,
                                    controls: e.supported.ui && t.customControls ? 0 : 1,
                                    disablekb: 1,
                                    playsinline: e.config.fullscreen.iosNative ? 0 : 1,
                                    cc_load_policy: e.captions.active ? 1 : 0,
                                    cc_lang_pref: e.config.captions.language,
                                    widget_referrer: window ? window.location.href : null
                                }, t),
                                events: {
                                    onError(t) {
                                        if (!e.media.error) {
                                            const n = t.data;
                                            e.media.error = {
                                                code: n,
                                                message: {
                                                    2: "The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.",
                                                    5: "The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.",
                                                    100: "The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.",
                                                    101: "The owner of the requested video does not allow it to be played in embedded players.",
                                                    150: "The owner of the requested video does not allow it to be played in embedded players."
                                                }[n] || "An unknown error occured"
                                            }, ge.call(e, e.media, "error")
                                        }
                                    },
                                    onPlaybackRateChange(t) {
                                        e.media.playbackRate = t.target.getPlaybackRate(), ge.call(e, e.media, "ratechange")
                                    },
                                    onReady(n) {
                                        if (O(e.media.play)) return;
                                        const l = n.target;
                                        rt.getTitle.call(e, i), e.media.play = () => {
                                            lt.call(e, !0), l.playVideo()
                                        }, e.media.pause = () => {
                                            lt.call(e, !1), l.pauseVideo()
                                        }, e.media.stop = () => {
                                            l.stopVideo()
                                        }, e.media.duration = l.getDuration(), e.media.paused = !0, e.media.currentTime = 0, Object.defineProperty(e.media, "currentTime", {
                                            get: () => Number(l.getCurrentTime()),
                                            set(t) {
                                                e.paused && !e.embed.hasPlayed && e.embed.mute(), e.media.seeking = !0, ge.call(e, e.media, "seeking"), l.seekTo(t)
                                            }
                                        }), Object.defineProperty(e.media, "playbackRate", {
                                            get: () => l.getPlaybackRate(),
                                            set(e) {
                                                l.setPlaybackRate(e)
                                            }
                                        });
                                        let {
                                            volume: r
                                        } = e.config;
                                        Object.defineProperty(e.media, "volume", {
                                            get: () => r,
                                            set(t) {
                                                r = t, l.setVolume(100 * r), ge.call(e, e.media, "volumechange")
                                            }
                                        });
                                        let {
                                            muted: s
                                        } = e.config;
                                        Object.defineProperty(e.media, "muted", {
                                            get: () => s,
                                            set(t) {
                                                const n = D(t) ? t : s;
                                                s = n, l[n ? "mute" : "unMute"](), l.setVolume(100 * r), ge.call(e, e.media, "volumechange")
                                            }
                                        }), Object.defineProperty(e.media, "currentSrc", {
                                            get: () => l.getVideoUrl()
                                        }), Object.defineProperty(e.media, "ended", {
                                            get: () => e.currentTime === e.duration
                                        });
                                        const o = l.getAvailablePlaybackRates();
                                        e.options.speed = o.filter(t => e.config.speed.options.includes(t)), e.supported.ui && t.customControls && e.media.setAttribute("tabindex", -1), ge.call(e, e.media, "timeupdate"), ge.call(e, e.media, "durationchange"), clearInterval(e.timers.buffering), e.timers.buffering = setInterval(() => {
                                            e.media.buffered = l.getVideoLoadedFraction(), (null === e.media.lastBuffered || e.media.lastBuffered < e.media.buffered) && ge.call(e, e.media, "progress"), e.media.lastBuffered = e.media.buffered, 1 === e.media.buffered && (clearInterval(e.timers.buffering), ge.call(e, e.media, "canplaythrough"))
                                        }, 200), t.customControls && setTimeout(() => Ze.build.call(e), 50)
                                    },
                                    onStateChange(n) {
                                        const l = n.target;
                                        switch (clearInterval(e.timers.playing), e.media.seeking && [1, 2].includes(n.data) && (e.media.seeking = !1, ge.call(e, e.media, "seeked")), n.data) {
                                            case -1:
                                                ge.call(e, e.media, "timeupdate"), e.media.buffered = l.getVideoLoadedFraction(), ge.call(e, e.media, "progress");
                                                break;
                                            case 0:
                                                lt.call(e, !1), e.media.loop ? (l.stopVideo(), l.playVideo()) : ge.call(e, e.media, "ended");
                                                break;
                                            case 1:
                                                t.customControls && !e.config.autoplay && e.media.paused && !e.embed.hasPlayed ? e.media.pause() : (lt.call(e, !0), ge.call(e, e.media, "playing"), e.timers.playing = setInterval(() => {
                                                    ge.call(e, e.media, "timeupdate")
                                                }, 50), e.media.duration !== l.getDuration() && (e.media.duration = l.getDuration(), ge.call(e, e.media, "durationchange")));
                                                break;
                                            case 2:
                                                e.muted || e.embed.unMute(), lt.call(e, !1);
                                                break;
                                            case 3:
                                                ge.call(e, e.media, "waiting")
                                        }
                                        ge.call(e, e.elements.container, "statechange", !1, {
                                            code: n.data
                                        })
                                    }
                                }
                            })
                        }
                    },
                    st = {
                        setup() {
                            this.media ? (ne(this.elements.container, this.config.classNames.type.replace("{0}", this.type), !0), ne(this.elements.container, this.config.classNames.provider.replace("{0}", this.provider), !0), this.isEmbed && ne(this.elements.container, this.config.classNames.type.replace("{0}", "video"), !0), this.isVideo && (this.elements.wrapper = W("div", {
                                class: this.config.classNames.video
                            }), $(this.media, this.elements.wrapper), this.elements.poster = W("div", {
                                class: this.config.classNames.poster
                            }), this.elements.wrapper.appendChild(this.elements.poster)), this.isHTML5 ? ke.setup.call(this) : this.isYouTube ? rt.setup.call(this) : this.isVimeo && nt.setup.call(this)) : this.debug.warn("No media element found!")
                        }
                    };
                class ot {
                    constructor(t) {
                        e(this, "load", () => {
                            this.enabled && (A(window.google) && A(window.google.ima) ? this.ready() : et(this.player.config.urls.googleIMA.sdk).then(() => {
                                this.ready()
                            }).catch(() => {
                                this.trigger("error", new Error("Google IMA SDK failed to load"))
                            }))
                        }), e(this, "ready", () => {
                            var e;
                            this.enabled || ((e = this).manager && e.manager.destroy(), e.elements.displayContainer && e.elements.displayContainer.destroy(), e.elements.container.remove()), this.startSafetyTimer(12e3, "ready()"), this.managerPromise.then(() => {
                                this.clearSafetyTimer("onAdsManagerLoaded()")
                            }), this.listeners(), this.setupIMA()
                        }), e(this, "setupIMA", () => {
                            this.elements.container = W("div", {
                                class: this.player.config.classNames.ads
                            }), this.player.elements.container.appendChild(this.elements.container), google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED), google.ima.settings.setLocale(this.player.config.ads.language), google.ima.settings.setDisableCustomPlaybackForIOS10Plus(this.player.config.playsinline), this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container, this.player.media), this.loader = new google.ima.AdsLoader(this.elements.displayContainer), this.loader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, e => this.onAdsManagerLoaded(e), !1), this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, e => this.onAdError(e), !1), this.requestAds()
                        }), e(this, "requestAds", () => {
                            const {
                                container: e
                            } = this.player.elements;
                            try {
                                const t = new google.ima.AdsRequest;
                                t.adTagUrl = this.tagUrl, t.linearAdSlotWidth = e.offsetWidth, t.linearAdSlotHeight = e.offsetHeight, t.nonLinearAdSlotWidth = e.offsetWidth, t.nonLinearAdSlotHeight = e.offsetHeight, t.forceNonLinearFullSlot = !1, t.setAdWillPlayMuted(!this.player.muted), this.loader.requestAds(t)
                            } catch (e) {
                                this.onAdError(e)
                            }
                        }), e(this, "pollCountdown", (e = !1) => {
                            if (!e) return clearInterval(this.countdownTimer), void this.elements.container.removeAttribute("data-badge-text");
                            this.countdownTimer = setInterval(() => {
                                const e = Be(Math.max(this.manager.getRemainingTime(), 0)),
                                    t = `${Le.get("advertisement",this.player.config)} - ${e}`;
                                this.elements.container.setAttribute("data-badge-text", t)
                            }, 100)
                        }), e(this, "onAdsManagerLoaded", e => {
                            if (!this.enabled) return;
                            const t = new google.ima.AdsRenderingSettings;
                            t.restoreCustomPlaybackStateOnAdBreakComplete = !0, t.enablePreloading = !0, this.manager = e.getAdsManager(this.player, t), this.cuePoints = this.manager.getCuePoints(), this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, e => this.onAdError(e)), Object.keys(google.ima.AdEvent.Type).forEach(e => {
                                this.manager.addEventListener(google.ima.AdEvent.Type[e], e => this.onAdEvent(e))
                            }), this.trigger("loaded")
                        }), e(this, "addCuePoints", () => {
                            V(this.cuePoints) || this.cuePoints.forEach(e => {
                                if (0 !== e && -1 !== e && e < this.player.duration) {
                                    const t = this.player.elements.progress;
                                    if (N(t)) {
                                        const n = 100 / this.player.duration * e,
                                            l = W("span", {
                                                class: this.player.config.classNames.cues
                                            });
                                        l.style.left = n.toString() + "%", t.appendChild(l)
                                    }
                                }
                            })
                        }), e(this, "onAdEvent", e => {
                            const {
                                container: t
                            } = this.player.elements, n = e.getAd(), l = e.getAdData();
                            switch ((e => {
                                ge.call(this.player, this.player.media, "ads" + e.replace(/_/g, "").toLowerCase())
                            })(e.type), e.type) {
                                case google.ima.AdEvent.Type.LOADED:
                                    this.trigger("loaded"), this.pollCountdown(!0), n.isLinear() || (n.width = t.offsetWidth, n.height = t.offsetHeight);
                                    break;
                                case google.ima.AdEvent.Type.STARTED:
                                    this.manager.setVolume(this.player.volume);
                                    break;
                                case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:
                                    this.player.ended ? this.loadAds() : this.loader.contentComplete();
                                    break;
                                case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:
                                    this.pauseContent();
                                    break;
                                case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:
                                    this.pollCountdown(), this.resumeContent();
                                    break;
                                case google.ima.AdEvent.Type.LOG:
                                    l.adError && this.player.debug.warn("Non-fatal ad error: " + l.adError.getMessage())
                            }
                        }), e(this, "onAdError", e => {
                            this.cancel(), this.player.debug.warn("Ads error", e)
                        }), e(this, "listeners", () => {
                            const {
                                container: e
                            } = this.player.elements;
                            let t;
                            this.player.on("canplay", () => {
                                this.addCuePoints()
                            }), this.player.on("ended", () => {
                                this.loader.contentComplete()
                            }), this.player.on("timeupdate", () => {
                                t = this.player.currentTime
                            }), this.player.on("seeked", () => {
                                const e = this.player.currentTime;
                                V(this.cuePoints) || this.cuePoints.forEach((n, l) => {
                                    t < n && n < e && (this.manager.discardAdBreak(), this.cuePoints.splice(l, 1))
                                })
                            }), window.addEventListener("resize", () => {
                                this.manager && this.manager.resize(e.offsetWidth, e.offsetHeight, google.ima.ViewMode.NORMAL)
                            })
                        }), e(this, "play", () => {
                            const {
                                container: e
                            } = this.player.elements;
                            this.managerPromise || this.resumeContent(), this.managerPromise.then(() => {
                                this.manager.setVolume(this.player.volume), this.elements.displayContainer.initialize();
                                try {
                                    this.initialized || (this.manager.init(e.offsetWidth, e.offsetHeight, google.ima.ViewMode.NORMAL), this.manager.start()), this.initialized = !0
                                } catch (e) {
                                    this.onAdError(e)
                                }
                            }).catch(() => {})
                        }), e(this, "resumeContent", () => {
                            this.elements.container.style.zIndex = "", this.playing = !1, ye(this.player.media.play())
                        }), e(this, "pauseContent", () => {
                            this.elements.container.style.zIndex = 3, this.playing = !0, this.player.media.pause()
                        }), e(this, "cancel", () => {
                            this.initialized && this.resumeContent(), this.trigger("error"), this.loadAds()
                        }), e(this, "loadAds", () => {
                            this.managerPromise.then(() => {
                                this.manager && this.manager.destroy(), this.managerPromise = new Promise(e => {
                                    this.on("loaded", e), this.player.debug.log(this.manager)
                                }), this.initialized = !1, this.requestAds()
                            }).catch(() => {})
                        }), e(this, "trigger", (e, ...t) => {
                            const n = this.events[e];
                            L(n) && n.forEach(e => {
                                O(e) && e.apply(this, t)
                            })
                        }), e(this, "on", (e, t) => (L(this.events[e]) || (this.events[e] = []), this.events[e].push(t), this)), e(this, "startSafetyTimer", (e, t) => {
                            this.player.debug.log("Safety timer invoked from: " + t), this.safetyTimer = setTimeout(() => {
                                this.cancel(), this.clearSafetyTimer("startSafetyTimer()")
                            }, e)
                        }), e(this, "clearSafetyTimer", e => {
                            k(this.safetyTimer) || (this.player.debug.log("Safety timer cleared from: " + e), clearTimeout(this.safetyTimer), this.safetyTimer = null)
                        }), this.player = t, this.config = t.config.ads, this.playing = !1, this.initialized = !1, this.elements = {
                            container: null,
                            displayContainer: null
                        }, this.manager = null, this.loader = null, this.cuePoints = null, this.events = {}, this.safetyTimer = null, this.countdownTimer = null, this.managerPromise = new Promise((e, t) => {
                            this.on("loaded", e), this.on("error", t)
                        }), this.load()
                    }
                    get enabled() {
                        const {
                            config: e
                        } = this;
                        return this.player.isHTML5 && this.player.isVideo && e.enabled && (!V(e.publisherId) || U(e.tagUrl))
                    }
                    get tagUrl() {
                        const {
                            config: e
                        } = this;
                        return U(e.tagUrl) ? e.tagUrl : "https://go.aniview.com/api/adserver6/vast/?" + Ge({
                            AV_PUBLISHERID: "58c25bb0073ef448b1087ad6",
                            AV_CHANNELID: "5a0458dc28a06145e4519d21",
                            AV_URL: window.location.hostname,
                            cb: Date.now(),
                            AV_WIDTH: 640,
                            AV_HEIGHT: 480,
                            AV_CDIM2: e.publisherId
                        })
                    }
                }
                const at = e => {
                        const t = [];
                        return e.split(/\r\n\r\n|\n\n|\r\r/).forEach(e => {
                            const n = {};
                            e.split(/\r\n|\n|\r/).forEach(e => {
                                if (P(n.startTime)) {
                                    if (!V(e.trim()) && V(n.text)) {
                                        const t = e.trim().split("#xywh=");
                                        [n.text] = t, t[1] && ([n.x, n.y, n.w, n.h] = t[1].split(","))
                                    }
                                } else {
                                    const t = e.match(/([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})( ?--> ?)([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})/);
                                    t && (n.startTime = 60 * Number(t[1] || 0) * 60 + 60 * Number(t[2]) + Number(t[3]) + Number("0." + t[4]), n.endTime = 60 * Number(t[6] || 0) * 60 + 60 * Number(t[7]) + Number(t[8]) + Number("0." + t[9]))
                                }
                            }), n.text && t.push(n)
                        }), t
                    },
                    ut = (e, t) => {
                        const n = {};
                        return e > t.width / t.height ? (n.width = t.width, n.height = 1 / e * t.width) : (n.height = t.height, n.width = e * t.height), n
                    };
                class ct {
                    constructor(t) {
                        e(this, "load", () => {
                            this.player.elements.display.seekTooltip && (this.player.elements.display.seekTooltip.hidden = this.enabled), this.enabled && this.getThumbnails().then(() => {
                                this.enabled && (this.render(), this.determineContainerAutoSizing(), this.loaded = !0)
                            })
                        }), e(this, "getThumbnails", () => new Promise(e => {
                            const {
                                src: t
                            } = this.player.config.previewThumbnails;
                            if (V(t)) throw new Error("Missing previewThumbnails.src config attribute");
                            const n = () => {
                                this.thumbnails.sort((e, t) => e.height - t.height), this.player.debug.log("Preview thumbnails", this.thumbnails), e()
                            };
                            if (O(t)) t(e => {
                                this.thumbnails = e, n()
                            });
                            else {
                                const e = (x(t) ? [t] : t).map(e => this.getThumbnail(e));
                                Promise.all(e).then(n)
                            }
                        })), e(this, "getThumbnail", e => new Promise(t => {
                            Ne(e).then(n => {
                                const l = {
                                    frames: at(n),
                                    height: null,
                                    urlPrefix: ""
                                };
                                l.frames[0].text.startsWith("/") || l.frames[0].text.startsWith("http://") || l.frames[0].text.startsWith("https://") || (l.urlPrefix = e.substring(0, e.lastIndexOf("/") + 1));
                                const i = new Image;
                                i.onload = () => {
                                    l.height = i.naturalHeight, l.width = i.naturalWidth, this.thumbnails.push(l), t()
                                }, i.src = l.urlPrefix + l.frames[0].text
                            })
                        })), e(this, "startMove", e => {
                            if (this.loaded && F(e) && ["touchmove", "mousemove"].includes(e.type) && this.player.media.duration) {
                                if ("touchmove" === e.type) this.seekTime = this.player.media.duration * (this.player.elements.inputs.seek.value / 100);
                                else {
                                    const t = this.player.elements.progress.getBoundingClientRect();
                                    this.seekTime = this.player.media.duration * (100 / t.width * (e.pageX - t.left) / 100), this.seekTime < 0 && (this.seekTime = 0), this.seekTime > this.player.media.duration - 1 && (this.seekTime = this.player.media.duration - 1), this.mousePosX = e.pageX, this.elements.thumb.time.innerText = Be(this.seekTime)
                                }
                                this.showImageAtCurrentTime()
                            }
                        }), e(this, "endMove", () => {
                            this.toggleThumbContainer(!1, !0)
                        }), e(this, "startScrubbing", e => {
                            (k(e.button) || !1 === e.button || 0 === e.button) && (this.mouseDown = !0, this.player.media.duration && (this.toggleScrubbingContainer(!0), this.toggleThumbContainer(!1, !0), this.showImageAtCurrentTime()))
                        }), e(this, "endScrubbing", () => {
                            this.mouseDown = !1, Math.ceil(this.lastTime) === Math.ceil(this.player.media.currentTime) ? this.toggleScrubbingContainer(!1) : he.call(this.player, this.player.media, "timeupdate", () => {
                                this.mouseDown || this.toggleScrubbingContainer(!1)
                            })
                        }), e(this, "listeners", () => {
                            this.player.on("play", () => {
                                this.toggleThumbContainer(!1, !0)
                            }), this.player.on("seeked", () => {
                                this.toggleThumbContainer(!1)
                            }), this.player.on("timeupdate", () => {
                                this.lastTime = this.player.media.currentTime
                            })
                        }), e(this, "render", () => {
                            this.elements.thumb.container = W("div", {
                                class: this.player.config.classNames.previewThumbnails.thumbContainer
                            }), this.elements.thumb.imageContainer = W("div", {
                                class: this.player.config.classNames.previewThumbnails.imageContainer
                            }), this.elements.thumb.container.appendChild(this.elements.thumb.imageContainer);
                            const e = W("div", {
                                class: this.player.config.classNames.previewThumbnails.timeContainer
                            });
                            this.elements.thumb.time = W("span", {}, "00:00"), e.appendChild(this.elements.thumb.time), this.elements.thumb.container.appendChild(e), N(this.player.elements.progress) && this.player.elements.progress.appendChild(this.elements.thumb.container), this.elements.scrubbing.container = W("div", {
                                class: this.player.config.classNames.previewThumbnails.scrubbingContainer
                            }), this.player.elements.wrapper.appendChild(this.elements.scrubbing.container)
                        }), e(this, "destroy", () => {
                            this.elements.thumb.container && this.elements.thumb.container.remove(), this.elements.scrubbing.container && this.elements.scrubbing.container.remove()
                        }), e(this, "showImageAtCurrentTime", () => {
                            this.mouseDown ? this.setScrubbingContainerSize() : this.setThumbContainerSizeAndPos();
                            const e = this.thumbnails[0].frames.findIndex(e => this.seekTime >= e.startTime && this.seekTime <= e.endTime),
                                t = e >= 0;
                            let n = 0;
                            this.mouseDown || this.toggleThumbContainer(t), t && (this.thumbnails.forEach((t, l) => {
                                this.loadedImages.includes(t.frames[e].text) && (n = l)
                            }), e !== this.showingThumb && (this.showingThumb = e, this.loadImage(n)))
                        }), e(this, "loadImage", (e = 0) => {
                            const t = this.showingThumb,
                                n = this.thumbnails[e],
                                {
                                    urlPrefix: l
                                } = n,
                                i = n.frames[t],
                                r = n.frames[t].text,
                                s = l + r;
                            if (this.currentImageElement && this.currentImageElement.dataset.filename === r) this.showImage(this.currentImageElement, i, e, t, r, !1), this.currentImageElement.dataset.index = t, this.removeOldImages(this.currentImageElement);
                            else {
                                this.loadingImage && this.usingSprites && (this.loadingImage.onload = null);
                                const n = new Image;
                                n.src = s, n.dataset.index = t, n.dataset.filename = r, this.showingThumbFilename = r, this.player.debug.log("Loading image: " + s), n.onload = () => this.showImage(n, i, e, t, r, !0), this.loadingImage = n, this.removeOldImages(n)
                            }
                        }), e(this, "showImage", (e, t, n, l, i, r = !0) => {
                            this.player.debug.log(`Showing thumb: ${i}. num: ${l}. qual: ${n}. newimg: ${r}`), this.setImageSizeAndOffset(e, t), r && (this.currentImageContainer.appendChild(e), this.currentImageElement = e, this.loadedImages.includes(i) || this.loadedImages.push(i)), this.preloadNearby(l, !0).then(this.preloadNearby(l, !1)).then(this.getHigherQuality(n, e, t, i))
                        }), e(this, "removeOldImages", e => {
                            Array.from(this.currentImageContainer.children).forEach(t => {
                                if ("img" !== t.tagName.toLowerCase()) return;
                                const n = this.usingSprites ? 500 : 1e3;
                                if (t.dataset.index !== e.dataset.index && !t.dataset.deleting) {
                                    t.dataset.deleting = !0;
                                    const {
                                        currentImageContainer: e
                                    } = this;
                                    setTimeout(() => {
                                        e.removeChild(t), this.player.debug.log("Removing thumb: " + t.dataset.filename)
                                    }, n)
                                }
                            })
                        }), e(this, "preloadNearby", (e, t = !0) => new Promise(n => {
                            setTimeout(() => {
                                const l = this.thumbnails[0].frames[e].text;
                                if (this.showingThumbFilename === l) {
                                    let i;
                                    i = t ? this.thumbnails[0].frames.slice(e) : this.thumbnails[0].frames.slice(0, e).reverse();
                                    let r = !1;
                                    i.forEach(e => {
                                        const t = e.text;
                                        if (t !== l && !this.loadedImages.includes(t)) {
                                            r = !0, this.player.debug.log("Preloading thumb filename: " + t);
                                            const {
                                                urlPrefix: e
                                            } = this.thumbnails[0], l = e + t, i = new Image;
                                            i.src = l, i.onload = () => {
                                                this.player.debug.log("Preloaded thumb filename: " + t), this.loadedImages.includes(t) || this.loadedImages.push(t), n()
                                            }
                                        }
                                    }), r || n()
                                }
                            }, 300)
                        })), e(this, "getHigherQuality", (e, t, n, l) => {
                            if (e < this.thumbnails.length - 1) {
                                let i = t.naturalHeight;
                                this.usingSprites && (i = n.h), i < this.thumbContainerHeight && setTimeout(() => {
                                    this.showingThumbFilename === l && (this.player.debug.log("Showing higher quality thumb for: " + l), this.loadImage(e + 1))
                                }, 300)
                            }
                        }), e(this, "toggleThumbContainer", (e = !1, t = !1) => {
                            this.elements.thumb.container.classList.toggle(this.player.config.classNames.previewThumbnails.thumbContainerShown, e), !e && t && (this.showingThumb = null, this.showingThumbFilename = null)
                        }), e(this, "toggleScrubbingContainer", (e = !1) => {
                            this.elements.scrubbing.container.classList.toggle(this.player.config.classNames.previewThumbnails.scrubbingContainerShown, e), e || (this.showingThumb = null, this.showingThumbFilename = null)
                        }), e(this, "determineContainerAutoSizing", () => {
                            (this.elements.thumb.imageContainer.clientHeight > 20 || this.elements.thumb.imageContainer.clientWidth > 20) && (this.sizeSpecifiedInCSS = !0)
                        }), e(this, "setThumbContainerSizeAndPos", () => {
                            if (this.sizeSpecifiedInCSS) {
                                if (this.elements.thumb.imageContainer.clientHeight > 20 && this.elements.thumb.imageContainer.clientWidth < 20) {
                                    const e = Math.floor(this.elements.thumb.imageContainer.clientHeight * this.thumbAspectRatio);
                                    this.elements.thumb.imageContainer.style.width = e + "px"
                                } else if (this.elements.thumb.imageContainer.clientHeight < 20 && this.elements.thumb.imageContainer.clientWidth > 20) {
                                    const e = Math.floor(this.elements.thumb.imageContainer.clientWidth / this.thumbAspectRatio);
                                    this.elements.thumb.imageContainer.style.height = e + "px"
                                }
                            } else {
                                const e = Math.floor(this.thumbContainerHeight * this.thumbAspectRatio);
                                this.elements.thumb.imageContainer.style.height = this.thumbContainerHeight + "px", this.elements.thumb.imageContainer.style.width = e + "px"
                            }
                            this.setThumbContainerPos()
                        }), e(this, "setThumbContainerPos", () => {
                            const e = this.player.elements.progress.getBoundingClientRect(),
                                t = this.player.elements.container.getBoundingClientRect(),
                                {
                                    container: n
                                } = this.elements.thumb,
                                l = t.left - e.left + 10,
                                i = t.right - e.left - n.clientWidth - 10;
                            let r = this.mousePosX - e.left - n.clientWidth / 2;
                            r < l && (r = l), r > i && (r = i), n.style.left = r + "px"
                        }), e(this, "setScrubbingContainerSize", () => {
                            const {
                                width: e,
                                height: t
                            } = ut(this.thumbAspectRatio, {
                                width: this.player.media.clientWidth,
                                height: this.player.media.clientHeight
                            });
                            this.elements.scrubbing.container.style.width = e + "px", this.elements.scrubbing.container.style.height = t + "px"
                        }), e(this, "setImageSizeAndOffset", (e, t) => {
                            if (!this.usingSprites) return;
                            const n = this.thumbContainerHeight / t.h;
                            e.style.height = e.naturalHeight * n + "px", e.style.width = e.naturalWidth * n + "px", e.style.left = `-${t.x*n}px`, e.style.top = `-${t.y*n}px`
                        }), this.player = t, this.thumbnails = [], this.loaded = !1, this.lastMouseMoveTime = Date.now(), this.mouseDown = !1, this.loadedImages = [], this.elements = {
                            thumb: {},
                            scrubbing: {}
                        }, this.load()
                    }
                    get enabled() {
                        return this.player.isHTML5 && this.player.isVideo && this.player.config.previewThumbnails.enabled
                    }
                    get currentImageContainer() {
                        return this.mouseDown ? this.elements.scrubbing.container : this.elements.thumb.imageContainer
                    }
                    get usingSprites() {
                        return Object.keys(this.thumbnails[0].frames[0]).includes("w")
                    }
                    get thumbAspectRatio() {
                        return this.usingSprites ? this.thumbnails[0].frames[0].w / this.thumbnails[0].frames[0].h : this.thumbnails[0].width / this.thumbnails[0].height
                    }
                    get thumbContainerHeight() {
                        if (this.mouseDown) {
                            const {
                                height: e
                            } = ut(this.thumbAspectRatio, {
                                width: this.player.media.clientWidth,
                                height: this.player.media.clientHeight
                            });
                            return e
                        }
                        return this.sizeSpecifiedInCSS ? this.elements.thumb.imageContainer.clientHeight : Math.floor(this.player.media.clientWidth / this.thumbAspectRatio / 4)
                    }
                    get currentImageElement() {
                        return this.mouseDown ? this.currentScrubbingImageElement : this.currentThumbnailImageElement
                    }
                    set currentImageElement(e) {
                        this.mouseDown ? this.currentScrubbingImageElement = e : this.currentThumbnailImageElement = e
                    }
                }
                const dt = {
                    insertElements(e, t) {
                        x(t) ? X(e, this.media, {
                            src: t
                        }) : L(t) && t.forEach(t => {
                            X(e, this.media, t)
                        })
                    },
                    change(e) {
                        q(e, "sources.length") ? (ke.cancelRequests.call(this), this.destroy.call(this, () => {
                            this.options.quality = [], Z(this.media), this.media = null, N(this.elements.container) && this.elements.container.removeAttribute("class");
                            const {
                                sources: t,
                                type: n
                            } = e, [{
                                provider: l = Ye.html5,
                                src: i
                            }] = t, r = "html5" === l ? n : "div", s = "html5" === l ? {} : {
                                src: i
                            };
                            Object.assign(this, {
                                provider: l,
                                type: n,
                                supported: ue.check(n, l, this.config.playsinline),
                                media: W(r, s)
                            }), this.elements.container.appendChild(this.media), D(e.autoplay) && (this.config.autoplay = e.autoplay), this.isHTML5 && (this.config.crossorigin && this.media.setAttribute("crossorigin", ""), this.config.autoplay && this.media.setAttribute("autoplay", ""), V(e.poster) || (this.poster = e.poster), this.config.loop.active && this.media.setAttribute("loop", ""), this.config.muted && this.media.setAttribute("muted", ""), this.config.playsinline && this.media.setAttribute("playsinline", "")), Ze.addStyleHook.call(this), this.isHTML5 && dt.insertElements.call(this, "source", t), this.config.title = e.title, st.setup.call(this), this.isHTML5 && Object.keys(e).includes("tracks") && dt.insertElements.call(this, "track", e.tracks), (this.isHTML5 || this.isEmbed && !this.supported.ui) && Ze.build.call(this), this.isHTML5 && this.media.load(), V(e.previewThumbnails) || (Object.assign(this.config.previewThumbnails, e.previewThumbnails), this.previewThumbnails && this.previewThumbnails.loaded && (this.previewThumbnails.destroy(), this.previewThumbnails = null), this.config.previewThumbnails.enabled && (this.previewThumbnails = new ct(this))), this.fullscreen.update()
                        }, !0)) : this.debug.warn("Invalid source format")
                    }
                };
                class ft {
                    constructor(t, n) {
                        if (e(this, "play", () => O(this.media.play) ? (this.ads && this.ads.enabled && this.ads.managerPromise.then(() => this.ads.play()).catch(() => ye(this.media.play())), this.media.play()) : null), e(this, "pause", () => this.playing && O(this.media.pause) ? this.media.pause() : null), e(this, "togglePlay", e => (D(e) ? e : !this.playing) ? this.play() : this.pause()), e(this, "stop", () => {
                                this.isHTML5 ? (this.pause(), this.restart()) : O(this.media.stop) && this.media.stop()
                            }), e(this, "restart", () => {
                                this.currentTime = 0
                            }), e(this, "rewind", e => {
                                this.currentTime -= P(e) ? e : this.config.seekTime
                            }), e(this, "forward", e => {
                                this.currentTime += P(e) ? e : this.config.seekTime
                            }), e(this, "increaseVolume", e => {
                                this.volume = (this.media.muted ? 0 : this.volume) + (P(e) ? e : 0)
                            }), e(this, "decreaseVolume", e => {
                                this.increaseVolume(-e)
                            }), e(this, "airplay", () => {
                                ue.airplay && this.media.webkitShowPlaybackTargetPicker()
                            }), e(this, "toggleControls", e => {
                                if (this.supported.ui && !this.isAudio) {
                                    const t = le(this.elements.container, this.config.classNames.hideControls),
                                        n = ne(this.elements.container, this.config.classNames.hideControls, void 0 === e ? void 0 : !e);
                                    return n && L(this.config.controls) && this.config.controls.includes("settings") && !V(this.config.settings) && Ue.toggleMenu.call(this, !1), n !== t && ge.call(this, this.media, n ? "controlshidden" : "controlsshown"), !n
                                }
                                return !1
                            }), e(this, "on", (e, t) => {
                                fe.call(this, this.elements.container, e, t)
                            }), e(this, "once", (e, t) => {
                                he.call(this, this.elements.container, e, t)
                            }), e(this, "off", (e, t) => {
                                pe(this.elements.container, e, t)
                            }), e(this, "destroy", (e, t = !1) => {
                                if (!this.ready) return;
                                const n = () => {
                                    document.body.style.overflow = "", this.embed = null, t ? (Object.keys(this.elements).length && (Z(this.elements.buttons.play), Z(this.elements.captions), Z(this.elements.controls), Z(this.elements.wrapper), this.elements.buttons.play = null, this.elements.captions = null, this.elements.controls = null, this.elements.wrapper = null), O(e) && e()) : (me.call(this), ke.cancelRequests.call(this), Q(this.elements.original, this.elements.container), ge.call(this, this.elements.original, "destroyed", !0), O(e) && e.call(this.elements.original), this.ready = !1, setTimeout(() => {
                                        this.elements = null, this.media = null
                                    }, 200))
                                };
                                this.stop(), clearTimeout(this.timers.loading), clearTimeout(this.timers.controls), clearTimeout(this.timers.resized), this.isHTML5 ? (Ze.toggleNativeControls.call(this, !0), n()) : this.isYouTube ? (clearInterval(this.timers.buffering), clearInterval(this.timers.playing), null !== this.embed && O(this.embed.destroy) && this.embed.destroy(), n()) : this.isVimeo && (null !== this.embed && this.embed.unload().then(n), setTimeout(n, 200))
                            }), e(this, "supports", e => ue.mime.call(this, e)), this.timers = {}, this.ready = !1, this.loading = !1, this.failed = !1, this.touch = ue.touch, this.media = t, x(this.media) && (this.media = document.querySelectorAll(this.media)), (window.jQuery && this.media instanceof jQuery || M(this.media) || L(this.media)) && (this.media = this.media[0]), this.config = Y({}, He, ft.defaults, n || {}, (() => {
                                try {
                                    return JSON.parse(this.media.getAttribute("data-plyr-config"))
                                } catch (e) {
                                    return {}
                                }
                            })()), this.elements = {
                                container: null,
                                fullscreen: null,
                                captions: null,
                                buttons: {},
                                display: {},
                                progress: {},
                                inputs: {},
                                settings: {
                                    popup: null,
                                    menu: null,
                                    panels: {},
                                    buttons: {}
                                }
                            }, this.captions = {
                                active: null,
                                currentTrack: -1,
                                meta: new WeakMap
                            }, this.fullscreen = {
                                active: !1
                            }, this.options = {
                                speed: [],
                                quality: []
                            }, this.debug = new ze(this.config.debug), this.debug.log("Config", this.config), this.debug.log("Support", ue), k(this.media) || !N(this.media)) return void this.debug.error("Setup failed: no suitable element passed");
                        if (this.media.plyr) return void this.debug.warn("Target already setup");
                        if (!this.config.enabled) return void this.debug.error("Setup failed: disabled by config");
                        if (!ue.check().api) return void this.debug.error("Setup failed: no support");
                        const l = this.media.cloneNode(!0);
                        l.autoplay = !1, this.elements.original = l;
                        const i = this.media.tagName.toLowerCase();
                        let r = null,
                            s = null;
                        switch (i) {
                            case "div":
                                if (r = this.media.querySelector("iframe"), N(r)) {
                                    if (s = Ve(r.getAttribute("src")), this.provider = function(e) {
                                            return /^(https?:\/\/)?(www\.)?(youtube\.com|youtube-nocookie\.com|youtu\.?be)\/.+$/.test(e) ? Ye.youtube : /^https?:\/\/player.vimeo.com\/video\/\d{0,9}(?=\b|\/)/.test(e) ? Ye.vimeo : null
                                        }(s.toString()), this.elements.container = this.media, this.media = r, this.elements.container.className = "", s.search.length) {
                                        const e = ["1", "true"];
                                        e.includes(s.searchParams.get("autoplay")) && (this.config.autoplay = !0), e.includes(s.searchParams.get("loop")) && (this.config.loop.active = !0), this.isYouTube ? (this.config.playsinline = e.includes(s.searchParams.get("playsinline")), this.config.youtube.hl = s.searchParams.get("hl")) : this.config.playsinline = !0
                                    }
                                } else this.provider = this.media.getAttribute(this.config.attributes.embed.provider), this.media.removeAttribute(this.config.attributes.embed.provider);
                                if (V(this.provider) || !Object.values(Ye).includes(this.provider)) return void this.debug.error("Setup failed: Invalid provider");
                                this.type = "video";
                                break;
                            case "video":
                            case "audio":
                                this.type = i, this.provider = Ye.html5, this.media.hasAttribute("crossorigin") && (this.config.crossorigin = !0), this.media.hasAttribute("autoplay") && (this.config.autoplay = !0), (this.media.hasAttribute("playsinline") || this.media.hasAttribute("webkit-playsinline")) && (this.config.playsinline = !0), this.media.hasAttribute("muted") && (this.config.muted = !0), this.media.hasAttribute("loop") && (this.config.loop.active = !0);
                                break;
                            default:
                                return void this.debug.error("Setup failed: unsupported type")
                        }
                        this.supported = ue.check(this.type, this.provider, this.config.playsinline), this.supported.api ? (this.eventListeners = [], this.listeners = new Je(this), this.storage = new Me(this), this.media.plyr = this, N(this.elements.container) || (this.elements.container = W("div", {
                            tabindex: 0
                        }), $(this.media, this.elements.container)), Ze.migrateStyles.call(this), Ze.addStyleHook.call(this), st.setup.call(this), this.config.debug && fe.call(this, this.elements.container, this.config.events.join(" "), e => {
                            this.debug.log("event: " + e.type)
                        }), this.fullscreen = new We(this), (this.isHTML5 || this.isEmbed && !this.supported.ui) && Ze.build.call(this), this.listeners.container(), this.listeners.global(), this.config.ads.enabled && (this.ads = new ot(this)), this.isHTML5 && this.config.autoplay && this.once("canplay", () => ye(this.play())), this.lastSeekTime = 0, this.config.previewThumbnails.enabled && (this.previewThumbnails = new ct(this))) : this.debug.error("Setup failed: no support")
                    }
                    get isHTML5() {
                        return this.provider === Ye.html5
                    }
                    get isEmbed() {
                        return this.isYouTube || this.isVimeo
                    }
                    get isYouTube() {
                        return this.provider === Ye.youtube
                    }
                    get isVimeo() {
                        return this.provider === Ye.vimeo
                    }
                    get isVideo() {
                        return "video" === this.type
                    }
                    get isAudio() {
                        return "audio" === this.type
                    }
                    get playing() {
                        return Boolean(this.ready && !this.paused && !this.ended)
                    }
                    get paused() {
                        return Boolean(this.media.paused)
                    }
                    get stopped() {
                        return Boolean(this.paused && 0 === this.currentTime)
                    }
                    get ended() {
                        return Boolean(this.media.ended)
                    }
                    set currentTime(e) {
                        if (!this.duration) return;
                        const t = P(e) && e > 0;
                        this.media.currentTime = t ? Math.min(e, this.duration) : 0, this.debug.log(`Seeking to ${this.currentTime} seconds`)
                    }
                    get currentTime() {
                        return Number(this.media.currentTime)
                    }
                    get buffered() {
                        const {
                            buffered: e
                        } = this.media;
                        return P(e) ? e : e && e.length && this.duration > 0 ? e.end(0) / this.duration : 0
                    }
                    get seeking() {
                        return Boolean(this.media.seeking)
                    }
                    get duration() {
                        const e = parseFloat(this.config.duration),
                            t = (this.media || {}).duration,
                            n = P(t) && t !== 1 / 0 ? t : 0;
                        return e || n
                    }
                    set volume(e) {
                        let t = e;
                        x(t) && (t = Number(t)), P(t) || (t = this.storage.get("volume")), P(t) || ({
                            volume: t
                        } = this.config), t > 1 && (t = 1), t < 0 && (t = 0), this.config.volume = t, this.media.volume = t, !V(e) && this.muted && t > 0 && (this.muted = !1)
                    }
                    get volume() {
                        return Number(this.media.volume)
                    }
                    set muted(e) {
                        let t = e;
                        D(t) || (t = this.storage.get("muted")), D(t) || (t = this.config.muted), this.config.muted = t, this.media.muted = t
                    }
                    get muted() {
                        return Boolean(this.media.muted)
                    }
                    get hasAudio() {
                        return !this.isHTML5 || !!this.isAudio || Boolean(this.media.mozHasAudio) || Boolean(this.media.webkitAudioDecodedByteCount) || Boolean(this.media.audioTracks && this.media.audioTracks.length)
                    }
                    set speed(e) {
                        let t = null;
                        P(e) && (t = e), P(t) || (t = this.storage.get("speed")), P(t) || (t = this.config.speed.selected);
                        const {
                            minimumSpeed: n,
                            maximumSpeed: l
                        } = this;
                        t = function(e = 0, t = 0, n = 255) {
                            return Math.min(Math.max(e, t), n)
                        }(t, n, l), this.config.speed.selected = t, setTimeout(() => {
                            this.media.playbackRate = t
                        }, 0)
                    }
                    get speed() {
                        return Number(this.media.playbackRate)
                    }
                    get minimumSpeed() {
                        return this.isYouTube ? Math.min(...this.options.speed) : this.isVimeo ? .5 : .0625
                    }
                    get maximumSpeed() {
                        return this.isYouTube ? Math.max(...this.options.speed) : this.isVimeo ? 2 : 16
                    }
                    set quality(e) {
                        const t = this.config.quality,
                            n = this.options.quality;
                        if (!n.length) return;
                        let l = [!V(e) && Number(e), this.storage.get("quality"), t.selected, t.default].find(P),
                            i = !0;
                        if (!n.includes(l)) {
                            const e = Te(n, l);
                            this.debug.warn(`Unsupported quality option: ${l}, using ${e} instead`), l = e, i = !1
                        }
                        t.selected = l, this.media.quality = l, i && this.storage.set({
                            quality: l
                        })
                    }
                    get quality() {
                        return this.media.quality
                    }
                    set loop(e) {
                        const t = D(e) ? e : this.config.loop.active;
                        this.config.loop.active = t, this.media.loop = t
                    }
                    get loop() {
                        return Boolean(this.media.loop)
                    }
                    set source(e) {
                        dt.change.call(this, e)
                    }
                    get source() {
                        return this.media.currentSrc
                    }
                    get download() {
                        const {
                            download: e
                        } = this.config.urls;
                        return U(e) ? e : this.source
                    }
                    set download(e) {
                        U(e) && (this.config.urls.download = e, Ue.setDownloadUrl.call(this))
                    }
                    set poster(e) {
                        this.isVideo ? Ze.setPoster.call(this, e, !1).catch(() => {}) : this.debug.warn("Poster can only be set for video")
                    }
                    get poster() {
                        return this.isVideo ? this.media.getAttribute("poster") || this.media.getAttribute("data-poster") : null
                    }
                    get ratio() {
                        if (!this.isVideo) return null;
                        const e = _e(Ce.call(this));
                        return L(e) ? e.join(":") : e
                    }
                    set ratio(e) {
                        this.isVideo ? x(e) && Ee(e) ? (this.config.ratio = _e(e), Re.call(this)) : this.debug.error(`Invalid aspect ratio specified (${e})`) : this.debug.warn("Aspect ratio can only be set for video")
                    }
                    set autoplay(e) {
                        const t = D(e) ? e : this.config.autoplay;
                        this.config.autoplay = t
                    }
                    get autoplay() {
                        return Boolean(this.config.autoplay)
                    }
                    toggleCaptions(e) {
                        Ke.toggle.call(this, e, !1)
                    }
                    set currentTrack(e) {
                        Ke.set.call(this, e, !1)
                    }
                    get currentTrack() {
                        const {
                            toggled: e,
                            currentTrack: t
                        } = this.captions;
                        return e ? t : -1
                    }
                    set language(e) {
                        Ke.setLanguage.call(this, e, !1)
                    }
                    get language() {
                        return (Ke.getCurrentTrack.call(this) || {}).language
                    }
                    set pip(e) {
                        if (!ue.pip) return;
                        const t = D(e) ? e : !this.pip;
                        O(this.media.webkitSetPresentationMode) && this.media.webkitSetPresentationMode(t ? qe : "inline"), O(this.media.requestPictureInPicture) && (!this.pip && t ? this.media.requestPictureInPicture() : this.pip && !t && document.exitPictureInPicture())
                    }
                    get pip() {
                        return ue.pip ? V(this.media.webkitPresentationMode) ? this.media === document.pictureInPictureElement : this.media.webkitPresentationMode === qe : null
                    }
                    static supported(e, t, n) {
                        return ue.check(e, t, n)
                    }
                    static loadSprite(e, t) {
                        return Fe(e, t)
                    }
                    static setup(e, t = {}) {
                        let n = null;
                        return x(e) ? n = Array.from(document.querySelectorAll(e)) : M(e) ? n = Array.from(e) : L(e) && (n = e.filter(N)), V(n) ? null : n.map(e => new ft(e, t))
                    }
                }
                return ft.defaults = JSON.parse(JSON.stringify(He)), ft
            }())
        },
        ulZh: function(e, t, n) {
            var l;
            "undefined" != typeof window && (l = function() {
                return function(e) {
                    var t = {};

                    function n(l) {
                        if (t[l]) return t[l].exports;
                        var i = t[l] = {
                            i: l,
                            l: !1,
                            exports: {}
                        };
                        return e[l].call(i.exports, i, i.exports, n), i.l = !0, i.exports
                    }
                    return n.m = e, n.c = t, n.d = function(e, t, l) {
                        n.o(e, t) || Object.defineProperty(e, t, {
                            enumerable: !0,
                            get: l
                        })
                    }, n.r = function(e) {
                        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                            value: "Module"
                        }), Object.defineProperty(e, "__esModule", {
                            value: !0
                        })
                    }, n.t = function(e, t) {
                        if (1 & t && (e = n(e)), 8 & t) return e;
                        if (4 & t && "object" == typeof e && e && e.__esModule) return e;
                        var l = Object.create(null);
                        if (n.r(l), Object.defineProperty(l, "default", {
                                enumerable: !0,
                                value: e
                            }), 2 & t && "string" != typeof e)
                            for (var i in e) n.d(l, i, (function(t) {
                                return e[t]
                            }).bind(null, i));
                        return l
                    }, n.n = function(e) {
                        var t = e && e.__esModule ? function() {
                            return e.default
                        } : function() {
                            return e
                        };
                        return n.d(t, "a", t), t
                    }, n.o = function(e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t)
                    }, n.p = "/dist/", n(n.s = "./src/hls.js")
                }({
                    "./node_modules/eventemitter3/index.js": function(e, t, n) {
                        "use strict";
                        var l = Object.prototype.hasOwnProperty,
                            i = "~";

                        function r() {}

                        function s(e, t, n) {
                            this.fn = e, this.context = t, this.once = n || !1
                        }

                        function o(e, t, n, l, r) {
                            if ("function" != typeof n) throw new TypeError("The listener must be a function");
                            var o = new s(n, l || e, r),
                                a = i ? i + t : t;
                            return e._events[a] ? e._events[a].fn ? e._events[a] = [e._events[a], o] : e._events[a].push(o) : (e._events[a] = o, e._eventsCount++), e
                        }

                        function a(e, t) {
                            0 == --e._eventsCount ? e._events = new r : delete e._events[t]
                        }

                        function u() {
                            this._events = new r, this._eventsCount = 0
                        }
                        Object.create && (r.prototype = Object.create(null), (new r).__proto__ || (i = !1)), u.prototype.eventNames = function() {
                            var e, t, n = [];
                            if (0 === this._eventsCount) return n;
                            for (t in e = this._events) l.call(e, t) && n.push(i ? t.slice(1) : t);
                            return Object.getOwnPropertySymbols ? n.concat(Object.getOwnPropertySymbols(e)) : n
                        }, u.prototype.listeners = function(e) {
                            var t = this._events[i ? i + e : e];
                            if (!t) return [];
                            if (t.fn) return [t.fn];
                            for (var n = 0, l = t.length, r = new Array(l); n < l; n++) r[n] = t[n].fn;
                            return r
                        }, u.prototype.listenerCount = function(e) {
                            var t = this._events[i ? i + e : e];
                            return t ? t.fn ? 1 : t.length : 0
                        }, u.prototype.emit = function(e, t, n, l, r, s) {
                            var o = i ? i + e : e;
                            if (!this._events[o]) return !1;
                            var a, u, c = this._events[o],
                                d = arguments.length;
                            if (c.fn) {
                                switch (c.once && this.removeListener(e, c.fn, void 0, !0), d) {
                                    case 1:
                                        return c.fn.call(c.context), !0;
                                    case 2:
                                        return c.fn.call(c.context, t), !0;
                                    case 3:
                                        return c.fn.call(c.context, t, n), !0;
                                    case 4:
                                        return c.fn.call(c.context, t, n, l), !0;
                                    case 5:
                                        return c.fn.call(c.context, t, n, l, r), !0;
                                    case 6:
                                        return c.fn.call(c.context, t, n, l, r, s), !0
                                }
                                for (u = 1, a = new Array(d - 1); u < d; u++) a[u - 1] = arguments[u];
                                c.fn.apply(c.context, a)
                            } else {
                                var f, p = c.length;
                                for (u = 0; u < p; u++) switch (c[u].once && this.removeListener(e, c[u].fn, void 0, !0), d) {
                                    case 1:
                                        c[u].fn.call(c[u].context);
                                        break;
                                    case 2:
                                        c[u].fn.call(c[u].context, t);
                                        break;
                                    case 3:
                                        c[u].fn.call(c[u].context, t, n);
                                        break;
                                    case 4:
                                        c[u].fn.call(c[u].context, t, n, l);
                                        break;
                                    default:
                                        if (!a)
                                            for (f = 1, a = new Array(d - 1); f < d; f++) a[f - 1] = arguments[f];
                                        c[u].fn.apply(c[u].context, a)
                                }
                            }
                            return !0
                        }, u.prototype.on = function(e, t, n) {
                            return o(this, e, t, n, !1)
                        }, u.prototype.once = function(e, t, n) {
                            return o(this, e, t, n, !0)
                        }, u.prototype.removeListener = function(e, t, n, l) {
                            var r = i ? i + e : e;
                            if (!this._events[r]) return this;
                            if (!t) return a(this, r), this;
                            var s = this._events[r];
                            if (s.fn) s.fn !== t || l && !s.once || n && s.context !== n || a(this, r);
                            else {
                                for (var o = 0, u = [], c = s.length; o < c; o++)(s[o].fn !== t || l && !s[o].once || n && s[o].context !== n) && u.push(s[o]);
                                u.length ? this._events[r] = 1 === u.length ? u[0] : u : a(this, r)
                            }
                            return this
                        }, u.prototype.removeAllListeners = function(e) {
                            var t;
                            return e ? this._events[t = i ? i + e : e] && a(this, t) : (this._events = new r, this._eventsCount = 0), this
                        }, u.prototype.off = u.prototype.removeListener, u.prototype.addListener = u.prototype.on, u.prefixed = i, u.EventEmitter = u, e.exports = u
                    },
                    "./node_modules/node-libs-browser/node_modules/events/events.js": function(e, t) {
                        function n() {
                            this._events = this._events || {}, this._maxListeners = this._maxListeners || void 0
                        }

                        function l(e) {
                            return "function" == typeof e
                        }

                        function i(e) {
                            return "object" == typeof e && null !== e
                        }

                        function r(e) {
                            return void 0 === e
                        }
                        e.exports = n, n.EventEmitter = n, n.prototype._events = void 0, n.prototype._maxListeners = void 0, n.defaultMaxListeners = 10, n.prototype.setMaxListeners = function(e) {
                            if ("number" != typeof e || e < 0 || isNaN(e)) throw TypeError("n must be a positive number");
                            return this._maxListeners = e, this
                        }, n.prototype.emit = function(e) {
                            var t, n, s, o, a, u;
                            if (this._events || (this._events = {}), "error" === e && (!this._events.error || i(this._events.error) && !this._events.error.length)) {
                                if ((t = arguments[1]) instanceof Error) throw t;
                                var c = new Error('Uncaught, unspecified "error" event. (' + t + ")");
                                throw c.context = t, c
                            }
                            if (r(n = this._events[e])) return !1;
                            if (l(n)) switch (arguments.length) {
                                case 1:
                                    n.call(this);
                                    break;
                                case 2:
                                    n.call(this, arguments[1]);
                                    break;
                                case 3:
                                    n.call(this, arguments[1], arguments[2]);
                                    break;
                                default:
                                    o = Array.prototype.slice.call(arguments, 1), n.apply(this, o)
                            } else if (i(n))
                                for (o = Array.prototype.slice.call(arguments, 1), s = (u = n.slice()).length, a = 0; a < s; a++) u[a].apply(this, o);
                            return !0
                        }, n.prototype.on = n.prototype.addListener = function(e, t) {
                            var s;
                            if (!l(t)) throw TypeError("listener must be a function");
                            return this._events || (this._events = {}), this._events.newListener && this.emit("newListener", e, l(t.listener) ? t.listener : t), this._events[e] ? i(this._events[e]) ? this._events[e].push(t) : this._events[e] = [this._events[e], t] : this._events[e] = t, i(this._events[e]) && !this._events[e].warned && (s = r(this._maxListeners) ? n.defaultMaxListeners : this._maxListeners) && s > 0 && this._events[e].length > s && (this._events[e].warned = !0, console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[e].length), "function" == typeof console.trace && console.trace()), this
                        }, n.prototype.once = function(e, t) {
                            if (!l(t)) throw TypeError("listener must be a function");
                            var n = !1;

                            function i() {
                                this.removeListener(e, i), n || (n = !0, t.apply(this, arguments))
                            }
                            return i.listener = t, this.on(e, i), this
                        }, n.prototype.removeListener = function(e, t) {
                            var n, r, s, o;
                            if (!l(t)) throw TypeError("listener must be a function");
                            if (!this._events || !this._events[e]) return this;
                            if (s = (n = this._events[e]).length, r = -1, n === t || l(n.listener) && n.listener === t) delete this._events[e], this._events.removeListener && this.emit("removeListener", e, t);
                            else if (i(n)) {
                                for (o = s; o-- > 0;)
                                    if (n[o] === t || n[o].listener && n[o].listener === t) {
                                        r = o;
                                        break
                                    }
                                if (r < 0) return this;
                                1 === n.length ? (n.length = 0, delete this._events[e]) : n.splice(r, 1), this._events.removeListener && this.emit("removeListener", e, t)
                            }
                            return this
                        }, n.prototype.removeAllListeners = function(e) {
                            var t, n;
                            if (!this._events) return this;
                            if (!this._events.removeListener) return 0 === arguments.length ? this._events = {} : this._events[e] && delete this._events[e], this;
                            if (0 === arguments.length) {
                                for (t in this._events) "removeListener" !== t && this.removeAllListeners(t);
                                return this.removeAllListeners("removeListener"), this._events = {}, this
                            }
                            if (l(n = this._events[e])) this.removeListener(e, n);
                            else if (n)
                                for (; n.length;) this.removeListener(e, n[n.length - 1]);
                            return delete this._events[e], this
                        }, n.prototype.listeners = function(e) {
                            return this._events && this._events[e] ? l(this._events[e]) ? [this._events[e]] : this._events[e].slice() : []
                        }, n.prototype.listenerCount = function(e) {
                            if (this._events) {
                                var t = this._events[e];
                                if (l(t)) return 1;
                                if (t) return t.length
                            }
                            return 0
                        }, n.listenerCount = function(e, t) {
                            return e.listenerCount(t)
                        }
                    },
                    "./node_modules/url-toolkit/src/url-toolkit.js": function(e, t, n) {
                        var l, i, r, s, o;
                        l = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/\?#]*\/)*.*?)??(;.*?)?(\?.*?)?(#.*?)?$/, i = /^([^\/?#]*)(.*)$/, r = /(?:\/|^)\.(?=\/)/g, s = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g, e.exports = o = {
                            buildAbsoluteURL: function(e, t, n) {
                                if (n = n || {}, e = e.trim(), !(t = t.trim())) {
                                    if (!n.alwaysNormalize) return e;
                                    var l = o.parseURL(e);
                                    if (!l) throw new Error("Error trying to parse base URL.");
                                    return l.path = o.normalizePath(l.path), o.buildURLFromParts(l)
                                }
                                var r = o.parseURL(t);
                                if (!r) throw new Error("Error trying to parse relative URL.");
                                if (r.scheme) return n.alwaysNormalize ? (r.path = o.normalizePath(r.path), o.buildURLFromParts(r)) : t;
                                var s = o.parseURL(e);
                                if (!s) throw new Error("Error trying to parse base URL.");
                                if (!s.netLoc && s.path && "/" !== s.path[0]) {
                                    var a = i.exec(s.path);
                                    s.netLoc = a[1], s.path = a[2]
                                }
                                s.netLoc && !s.path && (s.path = "/");
                                var u = {
                                    scheme: s.scheme,
                                    netLoc: r.netLoc,
                                    path: null,
                                    params: r.params,
                                    query: r.query,
                                    fragment: r.fragment
                                };
                                if (!r.netLoc && (u.netLoc = s.netLoc, "/" !== r.path[0]))
                                    if (r.path) {
                                        var c = s.path,
                                            d = c.substring(0, c.lastIndexOf("/") + 1) + r.path;
                                        u.path = o.normalizePath(d)
                                    } else u.path = s.path, r.params || (u.params = s.params, r.query || (u.query = s.query));
                                return null === u.path && (u.path = n.alwaysNormalize ? o.normalizePath(r.path) : r.path), o.buildURLFromParts(u)
                            },
                            parseURL: function(e) {
                                var t = l.exec(e);
                                return t ? {
                                    scheme: t[1] || "",
                                    netLoc: t[2] || "",
                                    path: t[3] || "",
                                    params: t[4] || "",
                                    query: t[5] || "",
                                    fragment: t[6] || ""
                                } : null
                            },
                            normalizePath: function(e) {
                                for (e = e.split("").reverse().join("").replace(r, ""); e.length !== (e = e.replace(s, "")).length;);
                                return e.split("").reverse().join("")
                            },
                            buildURLFromParts: function(e) {
                                return e.scheme + e.netLoc + e.path + e.params + e.query + e.fragment
                            }
                        }
                    },
                    "./node_modules/webworkify-webpack/index.js": function(e, t, n) {
                        function l(e) {
                            var t = {};

                            function n(l) {
                                if (t[l]) return t[l].exports;
                                var i = t[l] = {
                                    i: l,
                                    l: !1,
                                    exports: {}
                                };
                                return e[l].call(i.exports, i, i.exports, n), i.l = !0, i.exports
                            }
                            n.m = e, n.c = t, n.i = function(e) {
                                return e
                            }, n.d = function(e, t, l) {
                                n.o(e, t) || Object.defineProperty(e, t, {
                                    configurable: !1,
                                    enumerable: !0,
                                    get: l
                                })
                            }, n.r = function(e) {
                                Object.defineProperty(e, "__esModule", {
                                    value: !0
                                })
                            }, n.n = function(e) {
                                var t = e && e.__esModule ? function() {
                                    return e.default
                                } : function() {
                                    return e
                                };
                                return n.d(t, "a", t), t
                            }, n.o = function(e, t) {
                                return Object.prototype.hasOwnProperty.call(e, t)
                            }, n.p = "/", n.oe = function(e) {
                                throw console.error(e), e
                            };
                            var l = n(n.s = ENTRY_MODULE);
                            return l.default || l
                        }

                        function i(e) {
                            return (e + "").replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&")
                        }

                        function r(e, t, l) {
                            var r = {};
                            r[l] = [];
                            var s = t.toString(),
                                o = s.match(/^function\s?\(\w+,\s*\w+,\s*(\w+)\)/);
                            if (!o) return r;
                            for (var a, u = o[1], c = new RegExp("(\\\\n|\\W)" + i(u) + "\\((/\\*.*?\\*/)?s?.*?([\\.|\\-|\\+|\\w|/|@]+).*?\\)", "g"); a = c.exec(s);) "dll-reference" !== a[3] && r[l].push(a[3]);
                            for (c = new RegExp("\\(" + i(u) + '\\("(dll-reference\\s([\\.|\\-|\\+|\\w|/|@]+))"\\)\\)\\((/\\*.*?\\*/)?s?.*?([\\.|\\-|\\+|\\w|/|@]+).*?\\)', "g"); a = c.exec(s);) e[a[2]] || (r[l].push(a[1]), e[a[2]] = n(a[1]).m), r[a[2]] = r[a[2]] || [], r[a[2]].push(a[4]);
                            for (var d = Object.keys(r), f = 0; f < d.length; f++)
                                for (var p = 0; p < r[d[f]].length; p++) isNaN(1 * r[d[f]][p]) || (r[d[f]][p] = 1 * r[d[f]][p]);
                            return r
                        }

                        function s(e) {
                            return Object.keys(e).reduce((function(t, n) {
                                return t || e[n].length > 0
                            }), !1)
                        }
                        e.exports = function(e, t) {
                            var i = {
                                    main: n.m
                                },
                                o = (t = t || {}).all ? {
                                    main: Object.keys(i.main)
                                } : function(e, t) {
                                    for (var n = {
                                            main: [t]
                                        }, l = {
                                            main: []
                                        }, i = {
                                            main: {}
                                        }; s(n);)
                                        for (var o = Object.keys(n), a = 0; a < o.length; a++) {
                                            var u = o[a],
                                                c = n[u].pop();
                                            if (i[u] = i[u] || {}, !i[u][c] && e[u][c]) {
                                                i[u][c] = !0, l[u] = l[u] || [], l[u].push(c);
                                                for (var d = r(e, e[u][c], u), f = Object.keys(d), p = 0; p < f.length; p++) n[f[p]] = n[f[p]] || [], n[f[p]] = n[f[p]].concat(d[f[p]])
                                            }
                                        }
                                    return l
                                }(i, e),
                                a = "";
                            Object.keys(o).filter((function(e) {
                                return "main" !== e
                            })).forEach((function(e) {
                                for (var t = 0; o[e][t];) t++;
                                o[e].push(t), i[e][t] = "(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })", a = a + "var " + e + " = (" + l.toString().replace("ENTRY_MODULE", JSON.stringify(t)) + ")({" + o[e].map((function(t) {
                                    return JSON.stringify(t) + ": " + i[e][t].toString()
                                })).join(",") + "});\n"
                            })), a = a + "new ((" + l.toString().replace("ENTRY_MODULE", JSON.stringify(e)) + ")({" + o.main.map((function(e) {
                                return JSON.stringify(e) + ": " + i.main[e].toString()
                            })).join(",") + "}))(self);";
                            var u = new window.Blob([a], {
                                type: "text/javascript"
                            });
                            if (t.bare) return u;
                            var c = (window.URL || window.webkitURL || window.mozURL || window.msURL).createObjectURL(u),
                                d = new window.Worker(c);
                            return d.objectURL = c, d
                        }
                    },
                    "./src/config.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/controller/abr-controller.js"),
                            i = n("./src/controller/buffer-controller.js"),
                            r = n("./src/controller/cap-level-controller.js"),
                            s = n("./src/controller/fps-controller.js"),
                            o = n("./src/utils/xhr-loader.js"),
                            a = n("./src/controller/audio-track-controller.js"),
                            u = n("./src/controller/audio-stream-controller.js"),
                            c = n("./src/utils/cues.js"),
                            d = n("./src/controller/timeline-controller.js"),
                            f = n("./src/controller/subtitle-track-controller.js"),
                            p = n("./src/controller/subtitle-stream-controller.js"),
                            h = n("./src/controller/eme-controller.js"),
                            g = n("./src/utils/mediakeys-helper.js");
                        t.hlsDefaultConfig = {
                            autoStartLoad: !0,
                            startPosition: -1,
                            defaultAudioCodec: void 0,
                            debug: !1,
                            capLevelOnFPSDrop: !1,
                            capLevelToPlayerSize: !1,
                            initialLiveManifestSize: 1,
                            maxBufferLength: 30,
                            maxBufferSize: 6e7,
                            maxBufferHole: .5,
                            lowBufferWatchdogPeriod: .5,
                            highBufferWatchdogPeriod: 3,
                            nudgeOffset: .1,
                            nudgeMaxRetry: 3,
                            maxFragLookUpTolerance: .25,
                            liveSyncDurationCount: 3,
                            liveMaxLatencyDurationCount: 1 / 0,
                            liveSyncDuration: void 0,
                            liveMaxLatencyDuration: void 0,
                            liveDurationInfinity: !1,
                            liveBackBufferLength: 1 / 0,
                            maxMaxBufferLength: 600,
                            enableWorker: !0,
                            enableSoftwareAES: !0,
                            manifestLoadingTimeOut: 1e4,
                            manifestLoadingMaxRetry: 1,
                            manifestLoadingRetryDelay: 1e3,
                            manifestLoadingMaxRetryTimeout: 64e3,
                            startLevel: void 0,
                            levelLoadingTimeOut: 1e4,
                            levelLoadingMaxRetry: 4,
                            levelLoadingRetryDelay: 1e3,
                            levelLoadingMaxRetryTimeout: 64e3,
                            fragLoadingTimeOut: 2e4,
                            fragLoadingMaxRetry: 6,
                            fragLoadingRetryDelay: 1e3,
                            fragLoadingMaxRetryTimeout: 64e3,
                            startFragPrefetch: !1,
                            fpsDroppedMonitoringPeriod: 5e3,
                            fpsDroppedMonitoringThreshold: .2,
                            appendErrorMaxRetry: 3,
                            loader: o.default,
                            fLoader: void 0,
                            pLoader: void 0,
                            xhrSetup: void 0,
                            licenseXhrSetup: void 0,
                            abrController: l.default,
                            bufferController: i.default,
                            capLevelController: r.default,
                            fpsController: s.default,
                            stretchShortVideoTrack: !1,
                            maxAudioFramesDrift: 1,
                            forceKeyFrameOnDiscontinuity: !0,
                            abrEwmaFastLive: 3,
                            abrEwmaSlowLive: 9,
                            abrEwmaFastVoD: 3,
                            abrEwmaSlowVoD: 9,
                            abrEwmaDefaultEstimate: 5e5,
                            abrBandWidthFactor: .95,
                            abrBandWidthUpFactor: .7,
                            abrMaxWithRealBitrate: !1,
                            maxStarvationDelay: 4,
                            maxLoadingDelay: 4,
                            minAutoBitrate: 0,
                            emeEnabled: !1,
                            widevineLicenseUrl: void 0,
                            requestMediaKeySystemAccessFunc: g.requestMediaKeySystemAccess
                        }, t.hlsDefaultConfig.subtitleStreamController = p.SubtitleStreamController, t.hlsDefaultConfig.subtitleTrackController = f.default, t.hlsDefaultConfig.timelineController = d.default, t.hlsDefaultConfig.cueHandler = c, t.hlsDefaultConfig.enableCEA708Captions = !0, t.hlsDefaultConfig.enableWebVTT = !0, t.hlsDefaultConfig.captionsTextTrack1Label = "English", t.hlsDefaultConfig.captionsTextTrack1LanguageCode = "en", t.hlsDefaultConfig.captionsTextTrack2Label = "Spanish", t.hlsDefaultConfig.captionsTextTrack2LanguageCode = "es", t.hlsDefaultConfig.audioStreamController = u.default, t.hlsDefaultConfig.audioTrackController = a.default, t.hlsDefaultConfig.emeController = h.default
                    },
                    "./src/controller/abr-controller.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                    __proto__: []
                                }
                                instanceof Array && function(e, t) {
                                    e.__proto__ = t
                                } || function(e, t) {
                                    for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                                },
                                function(e, t) {
                                    function n() {
                                        this.constructor = e
                                    }
                                    l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                                });
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var r = n("./src/events.js"),
                                s = n("./src/event-handler.js"),
                                o = n("./src/utils/buffer-helper.js"),
                                a = n("./src/errors.js"),
                                u = n("./src/utils/logger.js"),
                                c = n("./src/utils/ewma-bandwidth-estimator.js"),
                                d = window.performance;
                            t.default = function(t) {
                                function n(e) {
                                    var n = t.call(this, e, r.default.FRAG_LOADING, r.default.FRAG_LOADED, r.default.FRAG_BUFFERED, r.default.ERROR) || this;
                                    return n.lastLoadedFragLevel = 0, n._nextAutoLevel = -1, n.hls = e, n.timer = null, n._bwEstimator = null, n.onCheck = n._abandonRulesCheck.bind(n), n
                                }
                                return i(n, t), n.prototype.destroy = function() {
                                    this.clearTimer(), s.default.prototype.destroy.call(this)
                                }, n.prototype.onFragLoading = function(e) {
                                    var t = e.frag;
                                    if ("main" === t.type && (this.timer || (this.fragCurrent = t, this.timer = setInterval(this.onCheck, 100)), !this._bwEstimator)) {
                                        var n = this.hls,
                                            l = n.config,
                                            i = void 0,
                                            r = void 0;
                                        n.levels[t.level].details.live ? (i = l.abrEwmaFastLive, r = l.abrEwmaSlowLive) : (i = l.abrEwmaFastVoD, r = l.abrEwmaSlowVoD), this._bwEstimator = new c.default(n, r, i, l.abrEwmaDefaultEstimate)
                                    }
                                }, n.prototype._abandonRulesCheck = function() {
                                    var e = this.hls,
                                        t = e.media,
                                        n = this.fragCurrent;
                                    if (n) {
                                        var l = n.loader,
                                            i = e.minAutoLevel;
                                        if (!l || l.stats && l.stats.aborted) return u.logger.warn("frag loader destroy or aborted, disarm abandonRules"), this.clearTimer(), void(this._nextAutoLevel = -1);
                                        var s = l.stats;
                                        if (t && s && (!t.paused && 0 !== t.playbackRate || !t.readyState) && n.autoLevel && n.level) {
                                            var a = d.now() - s.trequest,
                                                c = Math.abs(t.playbackRate);
                                            if (a > 500 * n.duration / c) {
                                                var f = e.levels,
                                                    p = Math.max(1, s.bw ? s.bw / 8 : 1e3 * s.loaded / a),
                                                    h = f[n.level],
                                                    g = h.realBitrate ? Math.max(h.realBitrate, h.bitrate) : h.bitrate,
                                                    m = s.total ? s.total : Math.max(s.loaded, Math.round(n.duration * g / 8)),
                                                    v = t.currentTime,
                                                    y = (m - s.loaded) / p,
                                                    b = (o.BufferHelper.bufferInfo(t, v, e.config.maxBufferHole).end - v) / c;
                                                if (b < 2 * n.duration / c && y > b) {
                                                    var T = void 0,
                                                        w = void 0;
                                                    for (w = n.level - 1; w > i; w--) {
                                                        var S = f[w].realBitrate ? Math.max(f[w].realBitrate, f[w].bitrate) : f[w].bitrate;
                                                        if ((T = n.duration * S / (6.4 * p)) < b) break
                                                    }
                                                    T < y && (u.logger.warn("loading too slow, abort fragment loading and switch to level " + w + ":fragLoadedDelay[" + w + "]<fragLoadedDelay[" + (n.level - 1) + "];bufferStarvationDelay:" + T.toFixed(1) + "<" + y.toFixed(1) + ":" + b.toFixed(1)), e.nextLoadLevel = w, this._bwEstimator.sample(a, s.loaded), l.abort(), this.clearTimer(), e.trigger(r.default.FRAG_LOAD_EMERGENCY_ABORTED, {
                                                        frag: n,
                                                        stats: s
                                                    }))
                                                }
                                            }
                                        }
                                    }
                                }, n.prototype.onFragLoaded = function(t) {
                                    var n = t.frag;
                                    if ("main" === n.type && e.isFinite(n.sn)) {
                                        if (this.clearTimer(), this.lastLoadedFragLevel = n.level, this._nextAutoLevel = -1, this.hls.config.abrMaxWithRealBitrate) {
                                            var l = this.hls.levels[n.level],
                                                i = (l.loaded ? l.loaded.bytes : 0) + t.stats.loaded,
                                                r = (l.loaded ? l.loaded.duration : 0) + t.frag.duration;
                                            l.loaded = {
                                                bytes: i,
                                                duration: r
                                            }, l.realBitrate = Math.round(8 * i / r)
                                        }
                                        if (t.frag.bitrateTest) {
                                            var s = t.stats;
                                            s.tparsed = s.tbuffered = s.tload, this.onFragBuffered(t)
                                        }
                                    }
                                }, n.prototype.onFragBuffered = function(t) {
                                    var n = t.stats,
                                        l = t.frag;
                                    if (!0 !== n.aborted && "main" === l.type && e.isFinite(l.sn) && (!l.bitrateTest || n.tload === n.tbuffered)) {
                                        var i = n.tparsed - n.trequest;
                                        u.logger.log("latency/loading/parsing/append/kbps:" + Math.round(n.tfirst - n.trequest) + "/" + Math.round(n.tload - n.tfirst) + "/" + Math.round(n.tparsed - n.tload) + "/" + Math.round(n.tbuffered - n.tparsed) + "/" + Math.round(8 * n.loaded / (n.tbuffered - n.trequest))), this._bwEstimator.sample(i, n.loaded), n.bwEstimate = this._bwEstimator.getEstimate(), this.bitrateTestDelay = l.bitrateTest ? i / 1e3 : 0
                                    }
                                }, n.prototype.onError = function(e) {
                                    switch (e.details) {
                                        case a.ErrorDetails.FRAG_LOAD_ERROR:
                                        case a.ErrorDetails.FRAG_LOAD_TIMEOUT:
                                            this.clearTimer()
                                    }
                                }, n.prototype.clearTimer = function() {
                                    clearInterval(this.timer), this.timer = null
                                }, Object.defineProperty(n.prototype, "nextAutoLevel", {
                                    get: function() {
                                        var e = this._nextAutoLevel,
                                            t = this._bwEstimator;
                                        if (!(-1 === e || t && t.canEstimate())) return e;
                                        var n = this._nextABRAutoLevel;
                                        return -1 !== e && (n = Math.min(e, n)), n
                                    },
                                    set: function(e) {
                                        this._nextAutoLevel = e
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), Object.defineProperty(n.prototype, "_nextABRAutoLevel", {
                                    get: function() {
                                        var e = this.hls,
                                            t = e.maxAutoLevel,
                                            n = e.levels,
                                            l = e.config,
                                            i = e.minAutoLevel,
                                            r = e.media,
                                            s = this.lastLoadedFragLevel,
                                            a = this.fragCurrent ? this.fragCurrent.duration : 0,
                                            c = r ? r.currentTime : 0,
                                            d = r && 0 !== r.playbackRate ? Math.abs(r.playbackRate) : 1,
                                            f = this._bwEstimator ? this._bwEstimator.getEstimate() : l.abrEwmaDefaultEstimate,
                                            p = (o.BufferHelper.bufferInfo(r, c, l.maxBufferHole).end - c) / d,
                                            h = this._findBestLevel(s, a, f, i, t, p, l.abrBandWidthFactor, l.abrBandWidthUpFactor, n);
                                        if (h >= 0) return h;
                                        u.logger.trace("rebuffering expected to happen, lets try to find a quality level minimizing the rebuffering");
                                        var g = a ? Math.min(a, l.maxStarvationDelay) : l.maxStarvationDelay,
                                            m = l.abrBandWidthFactor,
                                            v = l.abrBandWidthUpFactor;
                                        if (0 === p) {
                                            var y = this.bitrateTestDelay;
                                            y && (g = (a ? Math.min(a, l.maxLoadingDelay) : l.maxLoadingDelay) - y, u.logger.trace("bitrate test took " + Math.round(1e3 * y) + "ms, set first fragment max fetchDuration to " + Math.round(1e3 * g) + " ms"), m = v = 1)
                                        }
                                        return h = this._findBestLevel(s, a, f, i, t, p + g, m, v, n), Math.max(h, 0)
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), n.prototype._findBestLevel = function(e, t, n, l, i, r, s, o, a) {
                                    for (var c = i; c >= l; c--) {
                                        var d = a[c];
                                        if (d) {
                                            var f, p = d.details,
                                                h = p ? p.totalduration / p.fragments.length : t,
                                                g = !!p && p.live;
                                            f = c <= e ? s * n : o * n;
                                            var m = a[c].realBitrate ? Math.max(a[c].realBitrate, a[c].bitrate) : a[c].bitrate,
                                                v = m * h / f;
                                            if (u.logger.trace("level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: " + c + "/" + Math.round(f) + "/" + m + "/" + h + "/" + r + "/" + v), f > m && (!v || g && !this.bitrateTestDelay || v < r)) return c
                                        }
                                    }
                                    return -1
                                }, n
                            }(s.default)
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/controller/audio-stream-controller.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                    __proto__: []
                                }
                                instanceof Array && function(e, t) {
                                    e.__proto__ = t
                                } || function(e, t) {
                                    for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                                },
                                function(e, t) {
                                    function n() {
                                        this.constructor = e
                                    }
                                    l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                                });
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var r = n("./src/utils/binary-search.js"),
                                s = n("./src/utils/buffer-helper.js"),
                                o = n("./src/demux/demuxer.js"),
                                a = n("./src/events.js"),
                                u = n("./src/controller/level-helper.js"),
                                c = n("./src/utils/time-ranges.js"),
                                d = n("./src/errors.js"),
                                f = n("./src/utils/logger.js"),
                                p = n("./src/utils/discontinuities.js"),
                                h = n("./src/controller/fragment-tracker.js"),
                                g = n("./src/loader/fragment.js"),
                                m = n("./src/controller/base-stream-controller.js"),
                                v = window.performance;
                            t.default = function(t) {
                                function n(e, n) {
                                    var l = t.call(this, e, a.default.MEDIA_ATTACHED, a.default.MEDIA_DETACHING, a.default.AUDIO_TRACKS_UPDATED, a.default.AUDIO_TRACK_SWITCHING, a.default.AUDIO_TRACK_LOADED, a.default.KEY_LOADED, a.default.FRAG_LOADED, a.default.FRAG_PARSING_INIT_SEGMENT, a.default.FRAG_PARSING_DATA, a.default.FRAG_PARSED, a.default.ERROR, a.default.BUFFER_RESET, a.default.BUFFER_CREATED, a.default.BUFFER_APPENDED, a.default.BUFFER_FLUSHED, a.default.INIT_PTS_FOUND) || this;
                                    return l.fragmentTracker = n, l.config = e.config, l.audioCodecSwap = !1, l._state = m.State.STOPPED, l.initPTS = [], l.waitingFragment = null, l.videoTrackCC = null, l
                                }
                                return i(n, t), n.prototype.onInitPtsFound = function(e) {
                                    var t = e.frag.cc,
                                        n = e.initPTS;
                                    "main" === e.id && (this.initPTS[t] = n, this.videoTrackCC = t, f.logger.log("InitPTS for cc: " + t + " found from video track: " + n), this.state === m.State.WAITING_INIT_PTS && this.tick())
                                }, n.prototype.startLoad = function(e) {
                                    if (this.tracks) {
                                        var t = this.lastCurrentTime;
                                        this.stopLoad(), this.setInterval(100), this.fragLoadError = 0, t > 0 && -1 === e ? (f.logger.log("audio:override startPosition with lastCurrentTime @" + t.toFixed(3)), this.state = m.State.IDLE) : (this.lastCurrentTime = this.startPosition ? this.startPosition : e, this.state = m.State.STARTING), this.nextLoadPosition = this.startPosition = this.lastCurrentTime, this.tick()
                                    } else this.startPosition = e, this.state = m.State.STOPPED
                                }, Object.defineProperty(n.prototype, "state", {
                                    get: function() {
                                        return this._state
                                    },
                                    set: function(e) {
                                        if (this.state !== e) {
                                            var t = this.state;
                                            this._state = e, f.logger.log("audio stream:" + t + "->" + e)
                                        }
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), n.prototype.doTick = function() {
                                    var t, n, l, i = this.hls,
                                        o = i.config;
                                    switch (this.state) {
                                        case m.State.ERROR:
                                        case m.State.PAUSED:
                                        case m.State.BUFFER_FLUSHING:
                                            break;
                                        case m.State.STARTING:
                                            this.state = m.State.WAITING_TRACK, this.loadedmetadata = !1;
                                            break;
                                        case m.State.IDLE:
                                            var u = this.tracks;
                                            if (!u) break;
                                            if (!this.media && (this.startFragRequested || !o.startFragPrefetch)) break;
                                            if (this.loadedmetadata) t = this.media.currentTime;
                                            else if (void 0 === (t = this.nextLoadPosition)) break;
                                            var c = this.mediaBuffer ? this.mediaBuffer : this.media,
                                                d = this.videoBuffer ? this.videoBuffer : this.media,
                                                g = s.BufferHelper.bufferInfo(c, t, o.maxBufferHole),
                                                y = s.BufferHelper.bufferInfo(d, t, o.maxBufferHole),
                                                b = g.len,
                                                T = g.end,
                                                w = this.fragPrevious,
                                                S = Math.min(o.maxBufferLength, o.maxMaxBufferLength),
                                                E = Math.max(S, y.len),
                                                _ = this.audioSwitch,
                                                C = this.trackId;
                                            if ((b < E || _) && C < u.length) {
                                                if (void 0 === (l = u[C].details)) {
                                                    this.state = m.State.WAITING_TRACK;
                                                    break
                                                }
                                                if (!_ && this._streamEnded(g, l)) return this.hls.trigger(a.default.BUFFER_EOS, {
                                                    type: "audio"
                                                }), void(this.state = m.State.ENDED);
                                                var R = l.fragments,
                                                    I = R.length,
                                                    k = R[0].start,
                                                    A = R[I - 1].start + R[I - 1].duration,
                                                    P = void 0;
                                                if (_)
                                                    if (l.live && !l.PTSKnown) f.logger.log("switching audiotrack, live stream, unknown PTS,load first fragment"), T = 0;
                                                    else if (T = t, l.PTSKnown && t < k) {
                                                    if (!(g.end > k || g.nextStart)) return;
                                                    f.logger.log("alt audio track ahead of main track, seek to start of alt audio track"), this.media.currentTime = k + .05
                                                }
                                                if (l.initSegment && !l.initSegment.data) P = l.initSegment;
                                                else if (T <= k) {
                                                    if (P = R[0], null !== this.videoTrackCC && P.cc !== this.videoTrackCC && (P = p.findFragWithCC(R, this.videoTrackCC)), l.live && P.loadIdx && P.loadIdx === this.fragLoadIdx) {
                                                        var x = g.nextStart ? g.nextStart : k;
                                                        return f.logger.log("no alt audio available @currentTime:" + this.media.currentTime + ", seeking @" + (x + .05)), void(this.media.currentTime = x + .05)
                                                    }
                                                } else {
                                                    var D = void 0,
                                                        O = o.maxFragLookUpTolerance,
                                                        L = w ? R[w.sn - R[0].sn + 1] : void 0,
                                                        M = function(e) {
                                                            var t = Math.min(O, e.duration);
                                                            return e.start + e.duration - t <= T ? 1 : e.start - t > T && e.start ? -1 : 0
                                                        };
                                                    T < A ? (T > A - O && (O = 0), D = L && !M(L) ? L : r.default.search(R, M)) : D = R[I - 1], D && (P = D, k = D.start, w && P.level === w.level && P.sn === w.sn && (P.sn < l.endSN ? f.logger.log("SN just loaded, load next one: " + (P = R[P.sn + 1 - l.startSN]).sn) : P = null))
                                                }
                                                P && (P.encrypted ? (f.logger.log("Loading key for " + P.sn + " of [" + l.startSN + " ," + l.endSN + "],track " + C), this.state = m.State.KEY_LOADING, i.trigger(a.default.KEY_LOADING, {
                                                    frag: P
                                                })) : (f.logger.log("Loading " + P.sn + ", cc: " + P.cc + " of [" + l.startSN + " ," + l.endSN + "],track " + C + ", currentTime:" + t + ",bufferEnd:" + T.toFixed(3)), this.fragCurrent = P, (_ || this.fragmentTracker.getState(P) === h.FragmentState.NOT_LOADED) && (this.startFragRequested = !0, e.isFinite(P.sn) && (this.nextLoadPosition = P.start + P.duration), i.trigger(a.default.FRAG_LOADING, {
                                                    frag: P
                                                }), this.state = m.State.FRAG_LOADING)))
                                            }
                                            break;
                                        case m.State.WAITING_TRACK:
                                            (n = this.tracks[this.trackId]) && n.details && (this.state = m.State.IDLE);
                                            break;
                                        case m.State.FRAG_LOADING_WAITING_RETRY:
                                            var N = v.now(),
                                                F = this.retryDate;
                                            c = this.media, (!F || N >= F || c && c.seeking) && (f.logger.log("audioStreamController: retryDate reached, switch back to IDLE state"), this.state = m.State.IDLE);
                                            break;
                                        case m.State.WAITING_INIT_PTS:
                                            var j = this.videoTrackCC;
                                            if (void 0 === this.initPTS[j]) break;
                                            var B = this.waitingFragment;
                                            if (B) {
                                                var U = B.frag.cc;
                                                j !== U ? (n = this.tracks[this.trackId]).details && n.details.live && (f.logger.warn("Waiting fragment CC (" + U + ") does not match video track CC (" + j + ")"), this.waitingFragment = null, this.state = m.State.IDLE) : (this.state = m.State.FRAG_LOADING, this.onFragLoaded(this.waitingFragment), this.waitingFragment = null)
                                            } else this.state = m.State.IDLE
                                    }
                                }, n.prototype.onMediaAttached = function(e) {
                                    var t = this.media = this.mediaBuffer = e.media;
                                    this.onvseeking = this.onMediaSeeking.bind(this), this.onvended = this.onMediaEnded.bind(this), t.addEventListener("seeking", this.onvseeking), t.addEventListener("ended", this.onvended);
                                    var n = this.config;
                                    this.tracks && n.autoStartLoad && this.startLoad(n.startPosition)
                                }, n.prototype.onMediaDetaching = function() {
                                    var e = this.media;
                                    e && e.ended && (f.logger.log("MSE detaching and video ended, reset startPosition"), this.startPosition = this.lastCurrentTime = 0), e && (e.removeEventListener("seeking", this.onvseeking), e.removeEventListener("ended", this.onvended), this.onvseeking = this.onvseeked = this.onvended = null), this.media = this.mediaBuffer = this.videoBuffer = null, this.loadedmetadata = !1, this.stopLoad()
                                }, n.prototype.onAudioTracksUpdated = function(e) {
                                    f.logger.log("audio tracks updated"), this.tracks = e.audioTracks
                                }, n.prototype.onAudioTrackSwitching = function(e) {
                                    var t = !!e.url;
                                    this.trackId = e.id, this.fragCurrent = null, this.state = m.State.PAUSED, this.waitingFragment = null, t ? this.setInterval(100) : this.demuxer && (this.demuxer.destroy(), this.demuxer = null), t && (this.audioSwitch = !0, this.state = m.State.IDLE), this.tick()
                                }, n.prototype.onAudioTrackLoaded = function(t) {
                                    var n = t.details,
                                        l = t.id,
                                        i = this.tracks[l];
                                    if (f.logger.log("track " + l + " loaded [" + n.startSN + "," + n.endSN + "],duration:" + n.totalduration), n.live) {
                                        var r = i.details;
                                        r && n.fragments.length > 0 ? (u.mergeDetails(r, n), f.logger.log(n.PTSKnown ? "live audio playlist sliding:" + n.fragments[0].start.toFixed(3) : "live audio playlist - outdated PTS, unknown sliding")) : (n.PTSKnown = !1, f.logger.log("live audio playlist - first load, unknown sliding"))
                                    } else n.PTSKnown = !1;
                                    if (i.details = n, !this.startFragRequested) {
                                        if (-1 === this.startPosition) {
                                            var s = n.startTimeOffset;
                                            e.isFinite(s) ? (f.logger.log("start time offset found in playlist, adjust startPosition to " + s), this.startPosition = s) : this.startPosition = 0
                                        }
                                        this.nextLoadPosition = this.startPosition
                                    }
                                    this.state === m.State.WAITING_TRACK && (this.state = m.State.IDLE), this.tick()
                                }, n.prototype.onKeyLoaded = function() {
                                    this.state === m.State.KEY_LOADING && (this.state = m.State.IDLE, this.tick())
                                }, n.prototype.onFragLoaded = function(e) {
                                    var t = this.fragCurrent,
                                        n = e.frag;
                                    if (this.state === m.State.FRAG_LOADING && t && "audio" === n.type && n.level === t.level && n.sn === t.sn) {
                                        var l = this.tracks[this.trackId],
                                            i = l.details,
                                            r = i.totalduration,
                                            s = t.level,
                                            u = t.sn,
                                            c = t.cc,
                                            d = this.config.defaultAudioCodec || l.audioCodec || "mp4a.40.2",
                                            p = this.stats = e.stats;
                                        if ("initSegment" === u) this.state = m.State.IDLE, p.tparsed = p.tbuffered = v.now(), i.initSegment.data = e.payload, this.hls.trigger(a.default.FRAG_BUFFERED, {
                                            stats: p,
                                            frag: t,
                                            id: "audio"
                                        }), this.tick();
                                        else {
                                            this.state = m.State.PARSING, this.appended = !1, this.demuxer || (this.demuxer = new o.default(this.hls, "audio"));
                                            var h = this.initPTS[c],
                                                g = i.initSegment ? i.initSegment.data : [];
                                            i.initSegment || void 0 !== h ? (this.pendingBuffering = !0, f.logger.log("Demuxing " + u + " of [" + i.startSN + " ," + i.endSN + "],track " + s), this.demuxer.push(e.payload, g, d, null, t, r, !1, h)) : (f.logger.log("unknown video PTS for continuity counter " + c + ", waiting for video PTS before demuxing audio frag " + u + " of [" + i.startSN + " ," + i.endSN + "],track " + s), this.waitingFragment = e, this.state = m.State.WAITING_INIT_PTS)
                                        }
                                    }
                                    this.fragLoadError = 0
                                }, n.prototype.onFragParsingInitSegment = function(e) {
                                    var t = this.fragCurrent,
                                        n = e.frag;
                                    if (t && "audio" === e.id && n.sn === t.sn && n.level === t.level && this.state === m.State.PARSING) {
                                        var l = e.tracks,
                                            i = void 0;
                                        if (l.video && delete l.video, i = l.audio) {
                                            i.levelCodec = i.codec, i.id = e.id, this.hls.trigger(a.default.BUFFER_CODECS, l), f.logger.log("audio track:audio,container:" + i.container + ",codecs[level/parsed]=[" + i.levelCodec + "/" + i.codec + "]");
                                            var r = i.initSegment;
                                            if (r) {
                                                var s = {
                                                    type: "audio",
                                                    data: r,
                                                    parent: "audio",
                                                    content: "initSegment"
                                                };
                                                this.audioSwitch ? this.pendingData = [s] : (this.appended = !0, this.pendingBuffering = !0, this.hls.trigger(a.default.BUFFER_APPENDING, s))
                                            }
                                            this.tick()
                                        }
                                    }
                                }, n.prototype.onFragParsingData = function(t) {
                                    var n = this,
                                        l = this.fragCurrent,
                                        i = t.frag;
                                    if (l && "audio" === t.id && "audio" === t.type && i.sn === l.sn && i.level === l.level && this.state === m.State.PARSING) {
                                        var r = this.trackId,
                                            s = this.tracks[r],
                                            o = this.hls;
                                        e.isFinite(t.endPTS) || (t.endPTS = t.startPTS + l.duration, t.endDTS = t.startDTS + l.duration), l.addElementaryStream(g.default.ElementaryStreamTypes.AUDIO), f.logger.log("parsed " + t.type + ",PTS:[" + t.startPTS.toFixed(3) + "," + t.endPTS.toFixed(3) + "],DTS:[" + t.startDTS.toFixed(3) + "/" + t.endDTS.toFixed(3) + "],nb:" + t.nb), u.updateFragPTSDTS(s.details, l, t.startPTS, t.endPTS);
                                        var c = this.media,
                                            p = !1;
                                        if (this.audioSwitch && c)
                                            if (c.readyState) {
                                                var h = c.currentTime;
                                                f.logger.log("switching audio track : currentTime:" + h), h >= t.startPTS && (f.logger.log("switching audio track : flushing all audio"), this.state = m.State.BUFFER_FLUSHING, o.trigger(a.default.BUFFER_FLUSHING, {
                                                    startOffset: 0,
                                                    endOffset: e.POSITIVE_INFINITY,
                                                    type: "audio"
                                                }), p = !0, this.audioSwitch = !1, o.trigger(a.default.AUDIO_TRACK_SWITCHED, {
                                                    id: r
                                                }))
                                            } else this.audioSwitch = !1, o.trigger(a.default.AUDIO_TRACK_SWITCHED, {
                                                id: r
                                            });
                                        var v = this.pendingData;
                                        if (!v) return f.logger.warn("Apparently attempt to enqueue media payload without codec initialization data upfront"), void o.trigger(a.default.ERROR, {
                                            type: d.ErrorTypes.MEDIA_ERROR,
                                            details: null,
                                            fatal: !0
                                        });
                                        this.audioSwitch || ([t.data1, t.data2].forEach((function(e) {
                                            e && e.length && v.push({
                                                type: t.type,
                                                data: e,
                                                parent: "audio",
                                                content: "data"
                                            })
                                        })), !p && v.length && (v.forEach((function(e) {
                                            n.state === m.State.PARSING && (n.pendingBuffering = !0, n.hls.trigger(a.default.BUFFER_APPENDING, e))
                                        })), this.pendingData = [], this.appended = !0)), this.tick()
                                    }
                                }, n.prototype.onFragParsed = function(e) {
                                    var t = this.fragCurrent,
                                        n = e.frag;
                                    t && "audio" === e.id && n.sn === t.sn && n.level === t.level && this.state === m.State.PARSING && (this.stats.tparsed = v.now(), this.state = m.State.PARSED, this._checkAppendedParsed())
                                }, n.prototype.onBufferReset = function() {
                                    this.mediaBuffer = this.videoBuffer = null, this.loadedmetadata = !1
                                }, n.prototype.onBufferCreated = function(e) {
                                    var t = e.tracks.audio;
                                    t && (this.mediaBuffer = t.buffer, this.loadedmetadata = !0), e.tracks.video && (this.videoBuffer = e.tracks.video.buffer)
                                }, n.prototype.onBufferAppended = function(e) {
                                    if ("audio" === e.parent) {
                                        var t = this.state;
                                        t !== m.State.PARSING && t !== m.State.PARSED || (this.pendingBuffering = e.pending > 0, this._checkAppendedParsed())
                                    }
                                }, n.prototype._checkAppendedParsed = function() {
                                    if (!(this.state !== m.State.PARSED || this.appended && this.pendingBuffering)) {
                                        var e = this.fragCurrent,
                                            t = this.stats,
                                            n = this.hls;
                                        e && (this.fragPrevious = e, t.tbuffered = v.now(), n.trigger(a.default.FRAG_BUFFERED, {
                                            stats: t,
                                            frag: e,
                                            id: "audio"
                                        }), f.logger.log("audio buffered : " + c.default.toString((this.mediaBuffer ? this.mediaBuffer : this.media).buffered)), this.audioSwitch && this.appended && (this.audioSwitch = !1, n.trigger(a.default.AUDIO_TRACK_SWITCHED, {
                                            id: this.trackId
                                        })), this.state = m.State.IDLE), this.tick()
                                    }
                                }, n.prototype.onError = function(t) {
                                    var n = t.frag;
                                    if (!n || "audio" === n.type) switch (t.details) {
                                        case d.ErrorDetails.FRAG_LOAD_ERROR:
                                        case d.ErrorDetails.FRAG_LOAD_TIMEOUT:
                                            var l = t.frag;
                                            if (l && "audio" !== l.type) break;
                                            if (!t.fatal) {
                                                var i = this.fragLoadError;
                                                if (i ? i++ : i = 1, i <= (o = this.config).fragLoadingMaxRetry) {
                                                    this.fragLoadError = i;
                                                    var r = Math.min(Math.pow(2, i - 1) * o.fragLoadingRetryDelay, o.fragLoadingMaxRetryTimeout);
                                                    f.logger.warn("AudioStreamController: frag loading failed, retry in " + r + " ms"), this.retryDate = v.now() + r, this.state = m.State.FRAG_LOADING_WAITING_RETRY
                                                } else f.logger.error("AudioStreamController: " + t.details + " reaches max retry, redispatch as fatal ..."), t.fatal = !0, this.state = m.State.ERROR
                                            }
                                            break;
                                        case d.ErrorDetails.AUDIO_TRACK_LOAD_ERROR:
                                        case d.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT:
                                        case d.ErrorDetails.KEY_LOAD_ERROR:
                                        case d.ErrorDetails.KEY_LOAD_TIMEOUT:
                                            this.state !== m.State.ERROR && (this.state = t.fatal ? m.State.ERROR : m.State.IDLE, f.logger.warn("AudioStreamController: " + t.details + " while loading frag, now switching to " + this.state + " state ..."));
                                            break;
                                        case d.ErrorDetails.BUFFER_FULL_ERROR:
                                            if ("audio" === t.parent && (this.state === m.State.PARSING || this.state === m.State.PARSED)) {
                                                var o, u = this.mediaBuffer,
                                                    c = this.media.currentTime;
                                                u && s.BufferHelper.isBuffered(u, c) && s.BufferHelper.isBuffered(u, c + .5) ? ((o = this.config).maxMaxBufferLength >= o.maxBufferLength && (o.maxMaxBufferLength /= 2, f.logger.warn("AudioStreamController: reduce max buffer length to " + o.maxMaxBufferLength + "s")), this.state = m.State.IDLE) : (f.logger.warn("AudioStreamController: buffer full error also media.currentTime is not buffered, flush audio buffer"), this.fragCurrent = null, this.state = m.State.BUFFER_FLUSHING, this.hls.trigger(a.default.BUFFER_FLUSHING, {
                                                    startOffset: 0,
                                                    endOffset: e.POSITIVE_INFINITY,
                                                    type: "audio"
                                                }))
                                            }
                                    }
                                }, n.prototype.onBufferFlushed = function() {
                                    var e = this,
                                        t = this.pendingData;
                                    t && t.length ? (f.logger.log("AudioStreamController: appending pending audio data after buffer flushed"), t.forEach((function(t) {
                                        e.hls.trigger(a.default.BUFFER_APPENDING, t)
                                    })), this.appended = !0, this.pendingData = [], this.state = m.State.PARSED) : (this.state = m.State.IDLE, this.fragPrevious = null, this.tick())
                                }, n
                            }(m.default)
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/controller/audio-track-controller.js": function(e, t, n) {
                        "use strict";
                        var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(e, t) {
                                e.__proto__ = t
                            } || function(e, t) {
                                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                            },
                            function(e, t) {
                                function n() {
                                    this.constructor = e
                                }
                                l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                            });
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var r = n("./src/events.js"),
                            s = n("./src/task-loop.js"),
                            o = n("./src/utils/logger.js"),
                            a = n("./src/errors.js");
                        t.default = function(e) {
                            function t(t) {
                                var n = e.call(this, t, r.default.MANIFEST_LOADING, r.default.MANIFEST_PARSED, r.default.AUDIO_TRACK_LOADED, r.default.AUDIO_TRACK_SWITCHED, r.default.LEVEL_LOADED, r.default.ERROR) || this;
                                return n._trackId = -1, n._selectDefaultTrack = !0, n.tracks = [], n.trackIdBlacklist = Object.create(null), n.audioGroupId = null, n
                            }
                            return i(t, e), t.prototype.onManifestLoading = function() {
                                this.tracks = [], this._trackId = -1, this._selectDefaultTrack = !0
                            }, t.prototype.onManifestParsed = function(e) {
                                var t = this.tracks = e.audioTracks || [];
                                this.hls.trigger(r.default.AUDIO_TRACKS_UPDATED, {
                                    audioTracks: t
                                })
                            }, t.prototype.onAudioTrackLoaded = function(e) {
                                e.id >= this.tracks.length ? o.logger.warn("Invalid audio track id:", e.id) : (o.logger.log("audioTrack " + e.id + " loaded"), this.tracks[e.id].details = e.details, e.details.live && !this.hasInterval() && this.setInterval(1e3 * e.details.targetduration), !e.details.live && this.hasInterval() && this.clearInterval())
                            }, t.prototype.onAudioTrackSwitched = function(e) {
                                var t = this.tracks[e.id].groupId;
                                t && this.audioGroupId !== t && (this.audioGroupId = t)
                            }, t.prototype.onLevelLoaded = function(e) {
                                var t = this.hls.levels[e.level];
                                if (t.audioGroupIds) {
                                    var n = t.audioGroupIds[t.urlId];
                                    this.audioGroupId !== n && (this.audioGroupId = n, this._selectInitialAudioTrack())
                                }
                            }, t.prototype.onError = function(e) {
                                e.type === a.ErrorTypes.NETWORK_ERROR && (e.fatal && this.clearInterval(), e.details === a.ErrorDetails.AUDIO_TRACK_LOAD_ERROR && (o.logger.warn("Network failure on audio-track id:", e.context.id), this._handleLoadError()))
                            }, Object.defineProperty(t.prototype, "audioTracks", {
                                get: function() {
                                    return this.tracks
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "audioTrack", {
                                get: function() {
                                    return this._trackId
                                },
                                set: function(e) {
                                    this._setAudioTrack(e), this._selectDefaultTrack = !1
                                },
                                enumerable: !0,
                                configurable: !0
                            }), t.prototype._setAudioTrack = function(e) {
                                if (this._trackId === e && this.tracks[this._trackId].details) o.logger.debug("Same id as current audio-track passed, and track details available -> no-op");
                                else if (e < 0 || e >= this.tracks.length) o.logger.warn("Invalid id passed to audio-track controller");
                                else {
                                    var t = this.tracks[e];
                                    o.logger.log("Now switching to audio-track index " + e), this.clearInterval(), this._trackId = e, this.hls.trigger(r.default.AUDIO_TRACK_SWITCHING, {
                                        id: t.id,
                                        type: t.type,
                                        url: t.url
                                    }), this._loadTrackDetailsIfNeeded(t)
                                }
                            }, t.prototype.doTick = function() {
                                this._updateTrack(this._trackId)
                            }, t.prototype._selectInitialAudioTrack = function() {
                                var e = this,
                                    t = this.tracks;
                                if (t.length) {
                                    var n = this.tracks[this._trackId],
                                        l = null;
                                    if (n && (l = n.name), this._selectDefaultTrack) {
                                        var i = t.filter((function(e) {
                                            return e.default
                                        }));
                                        i.length ? t = i : o.logger.warn("No default audio tracks defined")
                                    }
                                    var s = !1,
                                        u = function() {
                                            t.forEach((function(t) {
                                                s || e.audioGroupId && t.groupId !== e.audioGroupId || l && l !== t.name || (e._setAudioTrack(t.id), s = !0)
                                            }))
                                        };
                                    u(), s || (l = null, u()), s || (o.logger.error("No track found for running audio group-ID: " + this.audioGroupId), this.hls.trigger(r.default.ERROR, {
                                        type: a.ErrorTypes.MEDIA_ERROR,
                                        details: a.ErrorDetails.AUDIO_TRACK_LOAD_ERROR,
                                        fatal: !0
                                    }))
                                }
                            }, t.prototype._needsTrackLoading = function(e) {
                                var t = e.details;
                                return !(t && !t.live || !e.url)
                            }, t.prototype._loadTrackDetailsIfNeeded = function(e) {
                                if (this._needsTrackLoading(e)) {
                                    var t = e.url,
                                        n = e.id;
                                    o.logger.log("loading audio-track playlist for id: " + n), this.hls.trigger(r.default.AUDIO_TRACK_LOADING, {
                                        url: t,
                                        id: n
                                    })
                                }
                            }, t.prototype._updateTrack = function(e) {
                                e < 0 || e >= this.tracks.length || (this.clearInterval(), this._trackId = e, o.logger.log("trying to update audio-track " + e), this._loadTrackDetailsIfNeeded(this.tracks[e]))
                            }, t.prototype._handleLoadError = function() {
                                this.trackIdBlacklist[this._trackId] = !0;
                                var e = this._trackId,
                                    t = this.tracks[e],
                                    n = t.name,
                                    l = t.language;
                                o.logger.warn("Loading failed on audio track id: " + e + ", group-id: " + t.groupId + ', name/language: "' + n + '" / "' + l + '"');
                                for (var i = e, r = 0; r < this.tracks.length; r++)
                                    if (!this.trackIdBlacklist[r] && this.tracks[r].name === n) {
                                        i = r;
                                        break
                                    }
                                i !== e ? (o.logger.log("Attempting audio-track fallback id:", i, "group-id:", this.tracks[i].groupId), this._setAudioTrack(i)) : o.logger.warn('No fallback audio-track found for name/language: "' + n + '" / "' + l + '"')
                            }, t
                        }(s.default)
                    },
                    "./src/controller/base-stream-controller.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                    __proto__: []
                                }
                                instanceof Array && function(e, t) {
                                    e.__proto__ = t
                                } || function(e, t) {
                                    for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                                },
                                function(e, t) {
                                    function n() {
                                        this.constructor = e
                                    }
                                    l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                                });
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var r = n("./src/task-loop.js"),
                                s = n("./src/controller/fragment-tracker.js"),
                                o = n("./src/utils/buffer-helper.js"),
                                a = n("./src/utils/logger.js");
                            t.State = {
                                STOPPED: "STOPPED",
                                STARTING: "STARTING",
                                IDLE: "IDLE",
                                PAUSED: "PAUSED",
                                KEY_LOADING: "KEY_LOADING",
                                FRAG_LOADING: "FRAG_LOADING",
                                FRAG_LOADING_WAITING_RETRY: "FRAG_LOADING_WAITING_RETRY",
                                WAITING_TRACK: "WAITING_TRACK",
                                PARSING: "PARSING",
                                PARSED: "PARSED",
                                BUFFER_FLUSHING: "BUFFER_FLUSHING",
                                ENDED: "ENDED",
                                ERROR: "ERROR",
                                WAITING_INIT_PTS: "WAITING_INIT_PTS",
                                WAITING_LEVEL: "WAITING_LEVEL"
                            }, t.default = function(n) {
                                function l() {
                                    return null !== n && n.apply(this, arguments) || this
                                }
                                return i(l, n), l.prototype.doTick = function() {}, l.prototype.startLoad = function() {}, l.prototype.stopLoad = function() {
                                    var e = this.fragCurrent;
                                    e && (e.loader && e.loader.abort(), this.fragmentTracker.removeFragment(e)), this.demuxer && (this.demuxer.destroy(), this.demuxer = null), this.fragCurrent = null, this.fragPrevious = null, this.clearInterval(), this.clearNextTick(), this.state = t.State.STOPPED
                                }, l.prototype._streamEnded = function(e, t) {
                                    var n = this.fragCurrent;
                                    if (!t.live && n && !n.backtracked && n.sn === t.endSN && !e.nextStart) {
                                        var l = this.fragmentTracker.getState(n);
                                        return l === s.FragmentState.PARTIAL || l === s.FragmentState.OK
                                    }
                                    return !1
                                }, l.prototype.onMediaSeeking = function() {
                                    var n = this.config,
                                        l = this.media,
                                        i = this.state,
                                        r = l ? l.currentTime : null,
                                        s = o.BufferHelper.bufferInfo(this.mediaBuffer || l, r, this.config.maxBufferHole);
                                    if (e.isFinite(r) && a.logger.log("media seeking to " + r.toFixed(3)), i === t.State.FRAG_LOADING) {
                                        var u = this.fragCurrent;
                                        if (0 === s.len && u) {
                                            var c = n.maxFragLookUpTolerance;
                                            r < u.start - c || r > u.start + u.duration + c ? (u.loader && (a.logger.log("seeking outside of buffer while fragment load in progress, cancel fragment load"), u.loader.abort()), this.fragCurrent = null, this.fragPrevious = null, this.state = t.State.IDLE) : a.logger.log("seeking outside of buffer but within currently loaded fragment range")
                                        }
                                    } else i === t.State.ENDED && (0 === s.len && (this.fragPrevious = null, this.fragCurrent = null), this.state = t.State.IDLE);
                                    l && (this.lastCurrentTime = r), this.loadedmetadata || (this.nextLoadPosition = this.startPosition = r), this.tick()
                                }, l.prototype.onMediaEnded = function() {
                                    this.startPosition = this.lastCurrentTime = 0
                                }, l.prototype.onHandlerDestroying = function() {
                                    this.stopLoad(), n.prototype.onHandlerDestroying.call(this)
                                }, l.prototype.onHandlerDestroyed = function() {
                                    this.state = t.State.STOPPED, this.fragmentTracker = null
                                }, l
                            }(r.default)
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/controller/buffer-controller.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                    __proto__: []
                                }
                                instanceof Array && function(e, t) {
                                    e.__proto__ = t
                                } || function(e, t) {
                                    for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                                },
                                function(e, t) {
                                    function n() {
                                        this.constructor = e
                                    }
                                    l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                                });
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var r = n("./src/events.js"),
                                s = n("./src/event-handler.js"),
                                o = n("./src/utils/logger.js"),
                                a = n("./src/errors.js"),
                                u = n("./src/utils/mediasource-helper.js").getMediaSource();
                            t.default = function(t) {
                                function n(e) {
                                    var n = t.call(this, e, r.default.MEDIA_ATTACHING, r.default.MEDIA_DETACHING, r.default.MANIFEST_PARSED, r.default.BUFFER_RESET, r.default.BUFFER_APPENDING, r.default.BUFFER_CODECS, r.default.BUFFER_EOS, r.default.BUFFER_FLUSHING, r.default.LEVEL_PTS_UPDATED, r.default.LEVEL_UPDATED) || this;
                                    return n._msDuration = null, n._levelDuration = null, n._levelTargetDuration = 10, n._live = null, n._objectUrl = null, n.bufferCodecEventsExpected = 0, n.onsbue = n.onSBUpdateEnd.bind(n), n.onsbe = n.onSBUpdateError.bind(n), n.pendingTracks = {}, n.tracks = {}, n
                                }
                                return i(n, t), n.prototype.destroy = function() {
                                    s.default.prototype.destroy.call(this)
                                }, n.prototype.onLevelPtsUpdated = function(e) {
                                    var t = this.tracks.audio;
                                    if ("audio" === e.type && t && "audio/mpeg" === t.container) {
                                        var n = this.sourceBuffer.audio;
                                        if (Math.abs(n.timestampOffset - e.start) > .1) {
                                            var l = n.updating;
                                            try {
                                                n.abort()
                                            } catch (i) {
                                                o.logger.warn("can not abort audio buffer: " + i)
                                            }
                                            l ? this.audioTimestampOffset = e.start : (o.logger.warn("change mpeg audio timestamp offset from " + n.timestampOffset + " to " + e.start), n.timestampOffset = e.start)
                                        }
                                    }
                                }, n.prototype.onManifestParsed = function(e) {
                                    this.bufferCodecEventsExpected = e.altAudio ? 2 : 1, o.logger.log(this.bufferCodecEventsExpected + " bufferCodec event(s) expected")
                                }, n.prototype.onMediaAttaching = function(e) {
                                    var t = this.media = e.media;
                                    if (t) {
                                        var n = this.mediaSource = new u;
                                        this.onmso = this.onMediaSourceOpen.bind(this), this.onmse = this.onMediaSourceEnded.bind(this), this.onmsc = this.onMediaSourceClose.bind(this), n.addEventListener("sourceopen", this.onmso), n.addEventListener("sourceended", this.onmse), n.addEventListener("sourceclose", this.onmsc), t.src = window.URL.createObjectURL(n), this._objectUrl = t.src
                                    }
                                }, n.prototype.onMediaDetaching = function() {
                                    o.logger.log("media source detaching");
                                    var e = this.mediaSource;
                                    if (e) {
                                        if ("open" === e.readyState) try {
                                            e.endOfStream()
                                        } catch (t) {
                                            o.logger.warn("onMediaDetaching:" + t.message + " while calling endOfStream")
                                        }
                                        e.removeEventListener("sourceopen", this.onmso), e.removeEventListener("sourceended", this.onmse), e.removeEventListener("sourceclose", this.onmsc), this.media && (window.URL.revokeObjectURL(this._objectUrl), this.media.src === this._objectUrl ? (this.media.removeAttribute("src"), this.media.load()) : o.logger.warn("media.src was changed by a third party - skip cleanup")), this.mediaSource = null, this.media = null, this._objectUrl = null, this.pendingTracks = {}, this.tracks = {}, this.sourceBuffer = {}, this.flushRange = [], this.segments = [], this.appended = 0
                                    }
                                    this.onmso = this.onmse = this.onmsc = null, this.hls.trigger(r.default.MEDIA_DETACHED)
                                }, n.prototype.onMediaSourceOpen = function() {
                                    o.logger.log("media source opened"), this.hls.trigger(r.default.MEDIA_ATTACHED, {
                                        media: this.media
                                    });
                                    var e = this.mediaSource;
                                    e && e.removeEventListener("sourceopen", this.onmso), this.checkPendingTracks()
                                }, n.prototype.checkPendingTracks = function() {
                                    var e = this.bufferCodecEventsExpected,
                                        t = this.pendingTracks,
                                        n = Object.keys(t).length;
                                    (n && !e || 2 === n) && (this.createSourceBuffers(t), this.pendingTracks = {}, this.doAppending())
                                }, n.prototype.onMediaSourceClose = function() {
                                    o.logger.log("media source closed")
                                }, n.prototype.onMediaSourceEnded = function() {
                                    o.logger.log("media source ended")
                                }, n.prototype.onSBUpdateEnd = function() {
                                    if (this.audioTimestampOffset) {
                                        var e = this.sourceBuffer.audio;
                                        o.logger.warn("change mpeg audio timestamp offset from " + e.timestampOffset + " to " + this.audioTimestampOffset), e.timestampOffset = this.audioTimestampOffset, delete this.audioTimestampOffset
                                    }
                                    this._needsFlush && this.doFlush(), this._needsEos && this.checkEos(), this.appending = !1;
                                    var t = this.parent,
                                        n = this.segments.reduce((function(e, n) {
                                            return n.parent === t ? e + 1 : e
                                        }), 0),
                                        l = {},
                                        i = this.sourceBuffer;
                                    for (var s in i) l[s] = i[s].buffered;
                                    this.hls.trigger(r.default.BUFFER_APPENDED, {
                                        parent: t,
                                        pending: n,
                                        timeRanges: l
                                    }), this._needsFlush || this.doAppending(), this.updateMediaElementDuration(), 0 === n && this.flushLiveBackBuffer()
                                }, n.prototype.onSBUpdateError = function(e) {
                                    o.logger.error("sourceBuffer error:", e), this.hls.trigger(r.default.ERROR, {
                                        type: a.ErrorTypes.MEDIA_ERROR,
                                        details: a.ErrorDetails.BUFFER_APPENDING_ERROR,
                                        fatal: !1
                                    })
                                }, n.prototype.onBufferReset = function() {
                                    var e = this.sourceBuffer;
                                    for (var t in e) {
                                        var n = e[t];
                                        try {
                                            this.mediaSource.removeSourceBuffer(n), n.removeEventListener("updateend", this.onsbue), n.removeEventListener("error", this.onsbe)
                                        } catch (l) {}
                                    }
                                    this.sourceBuffer = {}, this.flushRange = [], this.segments = [], this.appended = 0
                                }, n.prototype.onBufferCodecs = function(e) {
                                    var t = this;
                                    if (!Object.keys(this.sourceBuffer).length) {
                                        Object.keys(e).forEach((function(n) {
                                            t.pendingTracks[n] = e[n]
                                        }));
                                        var n = this.mediaSource;
                                        this.bufferCodecEventsExpected = Math.max(this.bufferCodecEventsExpected - 1, 0), n && "open" === n.readyState && this.checkPendingTracks()
                                    }
                                }, n.prototype.createSourceBuffers = function(e) {
                                    var t = this.sourceBuffer,
                                        n = this.mediaSource;
                                    for (var l in e)
                                        if (!t[l]) {
                                            var i = e[l],
                                                s = i.levelCodec || i.codec,
                                                u = i.container + ";codecs=" + s;
                                            o.logger.log("creating sourceBuffer(" + u + ")");
                                            try {
                                                var c = t[l] = n.addSourceBuffer(u);
                                                c.addEventListener("updateend", this.onsbue), c.addEventListener("error", this.onsbe), this.tracks[l] = {
                                                    codec: s,
                                                    container: i.container
                                                }, i.buffer = c
                                            } catch (d) {
                                                o.logger.error("error while trying to add sourceBuffer:" + d.message), this.hls.trigger(r.default.ERROR, {
                                                    type: a.ErrorTypes.MEDIA_ERROR,
                                                    details: a.ErrorDetails.BUFFER_ADD_CODEC_ERROR,
                                                    fatal: !1,
                                                    err: d,
                                                    mimeType: u
                                                })
                                            }
                                        }
                                    this.hls.trigger(r.default.BUFFER_CREATED, {
                                        tracks: e
                                    })
                                }, n.prototype.onBufferAppending = function(e) {
                                    this._needsFlush || (this.segments ? this.segments.push(e) : this.segments = [e], this.doAppending())
                                }, n.prototype.onBufferAppendFail = function(e) {
                                    o.logger.error("sourceBuffer error:", e.event), this.hls.trigger(r.default.ERROR, {
                                        type: a.ErrorTypes.MEDIA_ERROR,
                                        details: a.ErrorDetails.BUFFER_APPENDING_ERROR,
                                        fatal: !1
                                    })
                                }, n.prototype.onBufferEos = function(e) {
                                    var t = this.sourceBuffer,
                                        n = e.type;
                                    for (var l in t) n && l !== n || t[l].ended || (t[l].ended = !0, o.logger.log(l + " sourceBuffer now EOS"));
                                    this.checkEos()
                                }, n.prototype.checkEos = function() {
                                    var e = this.sourceBuffer,
                                        t = this.mediaSource;
                                    if (t && "open" === t.readyState) {
                                        for (var n in e) {
                                            var l = e[n];
                                            if (!l.ended) return;
                                            if (l.updating) return void(this._needsEos = !0)
                                        }
                                        o.logger.log("all media data are available, signal endOfStream() to MediaSource and stop loading fragment");
                                        try {
                                            t.endOfStream()
                                        } catch (i) {
                                            o.logger.warn("exception while calling mediaSource.endOfStream()")
                                        }
                                        this._needsEos = !1
                                    } else this._needsEos = !1
                                }, n.prototype.onBufferFlushing = function(e) {
                                    this.flushRange.push({
                                        start: e.startOffset,
                                        end: e.endOffset,
                                        type: e.type
                                    }), this.flushBufferCounter = 0, this.doFlush()
                                }, n.prototype.flushLiveBackBuffer = function() {
                                    if (this._live) {
                                        var e = this.hls.config.liveBackBufferLength;
                                        if (isFinite(e) && !(e < 0))
                                            for (var t = this.media.currentTime, n = this.sourceBuffer, l = Object.keys(n), i = t - Math.max(e, this._levelTargetDuration), r = l.length - 1; r >= 0; r--) {
                                                var s = l[r],
                                                    o = n[s].buffered;
                                                o.length > 0 && i > o.start(0) && this.removeBufferRange(s, n[s], 0, i)
                                            }
                                    }
                                }, n.prototype.onLevelUpdated = function(e) {
                                    var t = e.details;
                                    t.fragments.length > 0 && (this._levelDuration = t.totalduration + t.fragments[0].start, this._levelTargetDuration = t.averagetargetduration || t.targetduration || 10, this._live = t.live, this.updateMediaElementDuration())
                                }, n.prototype.updateMediaElementDuration = function() {
                                    var t, n = this.hls.config;
                                    if (null !== this._levelDuration && this.media && this.mediaSource && this.sourceBuffer && 0 !== this.media.readyState && "open" === this.mediaSource.readyState) {
                                        for (var l in this.sourceBuffer)
                                            if (!0 === this.sourceBuffer[l].updating) return;
                                        t = this.media.duration, null === this._msDuration && (this._msDuration = this.mediaSource.duration), !0 === this._live && !0 === n.liveDurationInfinity ? (o.logger.log("Media Source duration is set to Infinity"), this._msDuration = this.mediaSource.duration = 1 / 0) : (this._levelDuration > this._msDuration && this._levelDuration > t || !e.isFinite(t)) && (o.logger.log("Updating Media Source duration to " + this._levelDuration.toFixed(3)), this._msDuration = this.mediaSource.duration = this._levelDuration)
                                    }
                                }, n.prototype.doFlush = function() {
                                    for (; this.flushRange.length;) {
                                        var e = this.flushRange[0];
                                        if (!this.flushBuffer(e.start, e.end, e.type)) return void(this._needsFlush = !0);
                                        this.flushRange.shift(), this.flushBufferCounter = 0
                                    }
                                    if (0 === this.flushRange.length) {
                                        this._needsFlush = !1;
                                        var t = 0,
                                            n = this.sourceBuffer;
                                        try {
                                            for (var l in n) t += n[l].buffered.length
                                        } catch (i) {
                                            o.logger.error("error while accessing sourceBuffer.buffered")
                                        }
                                        this.appended = t, this.hls.trigger(r.default.BUFFER_FLUSHED)
                                    }
                                }, n.prototype.doAppending = function() {
                                    var e = this.hls,
                                        t = this.segments,
                                        n = this.sourceBuffer;
                                    if (Object.keys(n).length) {
                                        if (this.media.error) return this.segments = [], void o.logger.error("trying to append although a media error occured, flush segment and abort");
                                        if (this.appending) return;
                                        if (t && t.length) {
                                            var l = t.shift();
                                            try {
                                                var i = n[l.type];
                                                i ? i.updating ? t.unshift(l) : (i.ended = !1, this.parent = l.parent, i.appendBuffer(l.data), this.appendError = 0, this.appended++, this.appending = !0) : this.onSBUpdateEnd()
                                            } catch (u) {
                                                o.logger.error("error while trying to append buffer:" + u.message), t.unshift(l);
                                                var s = {
                                                    type: a.ErrorTypes.MEDIA_ERROR,
                                                    parent: l.parent
                                                };
                                                22 !== u.code ? (this.appendError ? this.appendError++ : this.appendError = 1, s.details = a.ErrorDetails.BUFFER_APPEND_ERROR, this.appendError > e.config.appendErrorMaxRetry ? (o.logger.log("fail " + e.config.appendErrorMaxRetry + " times to append segment in sourceBuffer"), this.segments = [], s.fatal = !0, e.trigger(r.default.ERROR, s)) : (s.fatal = !1, e.trigger(r.default.ERROR, s))) : (this.segments = [], s.details = a.ErrorDetails.BUFFER_FULL_ERROR, s.fatal = !1, e.trigger(r.default.ERROR, s))
                                            }
                                        }
                                    }
                                }, n.prototype.flushBuffer = function(e, t, n) {
                                    var l, i = this.sourceBuffer;
                                    if (Object.keys(i).length) {
                                        if (o.logger.log("flushBuffer,pos/start/end: " + this.media.currentTime.toFixed(3) + "/" + e + "/" + t), this.flushBufferCounter < this.appended) {
                                            for (var r in i)
                                                if (!n || r === n) {
                                                    if ((l = i[r]).ended = !1, l.updating) return o.logger.warn("cannot flush, sb updating in progress"), !1;
                                                    if (this.removeBufferRange(r, l, e, t)) return this.flushBufferCounter++, !1
                                                }
                                        } else o.logger.warn("abort flushing too many retries");
                                        o.logger.log("buffer flushed")
                                    }
                                    return !0
                                }, n.prototype.removeBufferRange = function(e, t, n, l) {
                                    try {
                                        for (var i = 0; i < t.buffered.length; i++) {
                                            var r = t.buffered.start(i),
                                                s = t.buffered.end(i),
                                                a = Math.max(r, n),
                                                u = Math.min(s, l);
                                            if (Math.min(u, s) - a > .5) return o.logger.log("sb remove " + e + " [" + a + "," + u + "], of [" + r + "," + s + "], pos:" + this.media.currentTime), t.remove(a, u), !0
                                        }
                                    } catch (c) {
                                        o.logger.warn("removeBufferRange failed", c)
                                    }
                                    return !1
                                }, n
                            }(s.default)
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/controller/cap-level-controller.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                    __proto__: []
                                }
                                instanceof Array && function(e, t) {
                                    e.__proto__ = t
                                } || function(e, t) {
                                    for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                                },
                                function(e, t) {
                                    function n() {
                                        this.constructor = e
                                    }
                                    l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                                });
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var r = n("./src/events.js"),
                                s = n("./src/event-handler.js");
                            t.default = function(t) {
                                function n(n) {
                                    var l = t.call(this, n, r.default.FPS_DROP_LEVEL_CAPPING, r.default.MEDIA_ATTACHING, r.default.MANIFEST_PARSED, r.default.BUFFER_CODECS, r.default.MEDIA_DETACHING) || this;
                                    return l.autoLevelCapping = e.POSITIVE_INFINITY, l.firstLevel = null, l.levels = [], l.media = null, l.restrictedLevels = [], l.timer = null, l
                                }
                                return i(n, t), n.prototype.destroy = function() {
                                    this.hls.config.capLevelToPlayerSize && (this.media = null, this._stopCapping())
                                }, n.prototype.onFpsDropLevelCapping = function(e) {
                                    n.isLevelAllowed(e.droppedLevel, this.restrictedLevels) && this.restrictedLevels.push(e.droppedLevel)
                                }, n.prototype.onMediaAttaching = function(e) {
                                    this.media = e.media instanceof window.HTMLVideoElement ? e.media : null
                                }, n.prototype.onManifestParsed = function(e) {
                                    var t = this.hls;
                                    this.restrictedLevels = [], this.levels = e.levels, this.firstLevel = e.firstLevel, t.config.capLevelToPlayerSize && e.video && this._startCapping()
                                }, n.prototype.onBufferCodecs = function(e) {
                                    this.hls.config.capLevelToPlayerSize && e.video && this._startCapping()
                                }, n.prototype.onLevelsUpdated = function(e) {
                                    this.levels = e.levels
                                }, n.prototype.onMediaDetaching = function() {
                                    this._stopCapping()
                                }, n.prototype.detectPlayerSize = function() {
                                    if (this.media) {
                                        var e = this.levels ? this.levels.length : 0;
                                        if (e) {
                                            var t = this.hls;
                                            t.autoLevelCapping = this.getMaxLevel(e - 1), t.autoLevelCapping > this.autoLevelCapping && t.streamController.nextLevelSwitch(), this.autoLevelCapping = t.autoLevelCapping
                                        }
                                    }
                                }, n.prototype.getMaxLevel = function(e) {
                                    var t = this;
                                    if (!this.levels) return -1;
                                    var l = this.levels.filter((function(l, i) {
                                        return n.isLevelAllowed(i, t.restrictedLevels) && i <= e
                                    }));
                                    return n.getMaxLevelByMediaSize(l, this.mediaWidth, this.mediaHeight)
                                }, n.prototype._startCapping = function() {
                                    this.timer || (this.autoLevelCapping = e.POSITIVE_INFINITY, this.hls.firstLevel = this.getMaxLevel(this.firstLevel), clearInterval(this.timer), this.timer = setInterval(this.detectPlayerSize.bind(this), 1e3), this.detectPlayerSize())
                                }, n.prototype._stopCapping = function() {
                                    this.restrictedLevels = [], this.firstLevel = null, this.autoLevelCapping = e.POSITIVE_INFINITY, this.timer && (this.timer = clearInterval(this.timer), this.timer = null)
                                }, Object.defineProperty(n.prototype, "mediaWidth", {
                                    get: function() {
                                        var e, t = this.media;
                                        return t && (e = t.width || t.clientWidth || t.offsetWidth, e *= n.contentScaleFactor), e
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), Object.defineProperty(n.prototype, "mediaHeight", {
                                    get: function() {
                                        var e, t = this.media;
                                        return t && (e = t.height || t.clientHeight || t.offsetHeight, e *= n.contentScaleFactor), e
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), Object.defineProperty(n, "contentScaleFactor", {
                                    get: function() {
                                        var e = 1;
                                        try {
                                            e = window.devicePixelRatio
                                        } catch (t) {}
                                        return e
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), n.isLevelAllowed = function(e, t) {
                                    return void 0 === t && (t = []), -1 === t.indexOf(e)
                                }, n.getMaxLevelByMediaSize = function(e, t, n) {
                                    if (!e || e && !e.length) return -1;
                                    for (var l, i, r = e.length - 1, s = 0; s < e.length; s += 1) {
                                        var o = e[s];
                                        if ((o.width >= t || o.height >= n) && (l = o, !(i = e[s + 1]) || l.width !== i.width || l.height !== i.height)) {
                                            r = s;
                                            break
                                        }
                                    }
                                    return r
                                }, n
                            }(s.default)
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/controller/eme-controller.js": function(e, t, n) {
                        "use strict";
                        var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(e, t) {
                                e.__proto__ = t
                            } || function(e, t) {
                                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                            },
                            function(e, t) {
                                function n() {
                                    this.constructor = e
                                }
                                l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                            });
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var r = n("./src/event-handler.js"),
                            s = n("./src/events.js"),
                            o = n("./src/errors.js"),
                            a = n("./src/utils/logger.js"),
                            u = window.XMLHttpRequest;
                        t.default = function(e) {
                            function t(t) {
                                var n = e.call(this, t, s.default.MEDIA_ATTACHED, s.default.MANIFEST_PARSED) || this;
                                return n._widevineLicenseUrl = t.config.widevineLicenseUrl, n._licenseXhrSetup = t.config.licenseXhrSetup, n._emeEnabled = t.config.emeEnabled, n._requestMediaKeySystemAccess = t.config.requestMediaKeySystemAccessFunc, n._mediaKeysList = [], n._media = null, n._hasSetMediaKeys = !1, n._isMediaEncrypted = !1, n._requestLicenseFailureCount = 0, n
                            }
                            return i(t, e), t.prototype.getLicenseServerUrl = function(e) {
                                var t;
                                switch (e) {
                                    case "com.widevine.alpha":
                                        t = this._widevineLicenseUrl;
                                        break;
                                    default:
                                        t = null
                                }
                                return t || (a.logger.error('No license server URL configured for key-system "' + e + '"'), this.hls.trigger(s.default.ERROR, {
                                    type: o.ErrorTypes.KEY_SYSTEM_ERROR,
                                    details: o.ErrorDetails.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                    fatal: !0
                                })), t
                            }, t.prototype._attemptKeySystemAccess = function(e, t, n) {
                                var l = this,
                                    i = function(e, t, n) {
                                        switch (e) {
                                            case "com.widevine.alpha":
                                                return function(e, t, n) {
                                                    var l = {
                                                        videoCapabilities: []
                                                    };
                                                    return t.forEach((function(e) {
                                                        l.videoCapabilities.push({
                                                            contentType: 'video/mp4; codecs="' + e + '"'
                                                        })
                                                    })), [l]
                                                }(0, n);
                                            default:
                                                throw Error("Unknown key-system: " + e)
                                        }
                                    }(e, 0, n);
                                i ? (a.logger.log("Requesting encrypted media key-system access"), this.requestMediaKeySystemAccess(e, i).then((function(t) {
                                    l._onMediaKeySystemAccessObtained(e, t)
                                })).catch((function(t) {
                                    a.logger.error('Failed to obtain key-system "' + e + '" access:', t)
                                }))) : a.logger.warn("Can not create config for key-system (maybe because platform is not supported):", e)
                            }, Object.defineProperty(t.prototype, "requestMediaKeySystemAccess", {
                                get: function() {
                                    if (!this._requestMediaKeySystemAccess) throw new Error("No requestMediaKeySystemAccess function configured");
                                    return this._requestMediaKeySystemAccess
                                },
                                enumerable: !0,
                                configurable: !0
                            }), t.prototype._onMediaKeySystemAccessObtained = function(e, t) {
                                var n = this;
                                a.logger.log('Access for key-system "' + e + '" obtained');
                                var l = {
                                    mediaKeys: null,
                                    mediaKeysSession: null,
                                    mediaKeysSessionInitialized: !1,
                                    mediaKeySystemAccess: t,
                                    mediaKeySystemDomain: e
                                };
                                this._mediaKeysList.push(l), t.createMediaKeys().then((function(t) {
                                    l.mediaKeys = t, a.logger.log('Media-keys created for key-system "' + e + '"'), n._onMediaKeysCreated()
                                })).catch((function(e) {
                                    a.logger.error("Failed to create media-keys:", e)
                                }))
                            }, t.prototype._onMediaKeysCreated = function() {
                                var e = this;
                                this._mediaKeysList.forEach((function(t) {
                                    t.mediaKeysSession || (t.mediaKeysSession = t.mediaKeys.createSession(), e._onNewMediaKeySession(t.mediaKeysSession))
                                }))
                            }, t.prototype._onNewMediaKeySession = function(e) {
                                var t = this;
                                a.logger.log("New key-system session " + e.sessionId), e.addEventListener("message", (function(n) {
                                    t._onKeySessionMessage(e, n.message)
                                }), !1)
                            }, t.prototype._onKeySessionMessage = function(e, t) {
                                a.logger.log("Got EME message event, creating license request"), this._requestLicense(t, (function(t) {
                                    a.logger.log("Received license data, updating key-session"), e.update(t)
                                }))
                            }, t.prototype._onMediaEncrypted = function(e, t) {
                                a.logger.log('Media is encrypted using "' + e + '" init data type'), this._isMediaEncrypted = !0, this._mediaEncryptionInitDataType = e, this._mediaEncryptionInitData = t, this._attemptSetMediaKeys(), this._generateRequestWithPreferredKeySession()
                            }, t.prototype._attemptSetMediaKeys = function() {
                                if (!this._hasSetMediaKeys) {
                                    var e = this._mediaKeysList[0];
                                    if (!e || !e.mediaKeys) return a.logger.error("Fatal: Media is encrypted but no CDM access or no keys have been obtained yet"), void this.hls.trigger(s.default.ERROR, {
                                        type: o.ErrorTypes.KEY_SYSTEM_ERROR,
                                        details: o.ErrorDetails.KEY_SYSTEM_NO_KEYS,
                                        fatal: !0
                                    });
                                    a.logger.log("Setting keys for encrypted media"), this._media.setMediaKeys(e.mediaKeys), this._hasSetMediaKeys = !0
                                }
                            }, t.prototype._generateRequestWithPreferredKeySession = function() {
                                var e = this,
                                    t = this._mediaKeysList[0];
                                if (!t) return a.logger.error("Fatal: Media is encrypted but not any key-system access has been obtained yet"), void this.hls.trigger(s.default.ERROR, {
                                    type: o.ErrorTypes.KEY_SYSTEM_ERROR,
                                    details: o.ErrorDetails.KEY_SYSTEM_NO_ACCESS,
                                    fatal: !0
                                });
                                if (t.mediaKeysSessionInitialized) a.logger.warn("Key-Session already initialized but requested again");
                                else {
                                    var n = t.mediaKeysSession;
                                    n || (a.logger.error("Fatal: Media is encrypted but no key-session existing"), this.hls.trigger(s.default.ERROR, {
                                        type: o.ErrorTypes.KEY_SYSTEM_ERROR,
                                        details: o.ErrorDetails.KEY_SYSTEM_NO_SESSION,
                                        fatal: !0
                                    }));
                                    var l = this._mediaEncryptionInitDataType,
                                        i = this._mediaEncryptionInitData;
                                    a.logger.log('Generating key-session request for "' + l + '" init data type'), t.mediaKeysSessionInitialized = !0, n.generateRequest(l, i).then((function() {
                                        a.logger.debug("Key-session generation succeeded")
                                    })).catch((function(t) {
                                        a.logger.error("Error generating key-session request:", t), e.hls.trigger(s.default.ERROR, {
                                            type: o.ErrorTypes.KEY_SYSTEM_ERROR,
                                            details: o.ErrorDetails.KEY_SYSTEM_NO_SESSION,
                                            fatal: !1
                                        })
                                    }))
                                }
                            }, t.prototype._createLicenseXhr = function(e, t, n) {
                                var l = new u,
                                    i = this._licenseXhrSetup;
                                try {
                                    if (i) try {
                                        i(l, e)
                                    } catch (r) {
                                        l.open("POST", e, !0), i(l, e)
                                    }
                                    l.readyState || l.open("POST", e, !0)
                                } catch (r) {
                                    return a.logger.error("Error setting up key-system license XHR", r), void this.hls.trigger(s.default.ERROR, {
                                        type: o.ErrorTypes.KEY_SYSTEM_ERROR,
                                        details: o.ErrorDetails.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                        fatal: !0
                                    })
                                }
                                return l.responseType = "arraybuffer", l.onreadystatechange = this._onLicenseRequestReadyStageChange.bind(this, l, e, t, n), l
                            }, t.prototype._onLicenseRequestReadyStageChange = function(e, t, n, l) {
                                switch (e.readyState) {
                                    case 4:
                                        if (200 === e.status) this._requestLicenseFailureCount = 0, a.logger.log("License request succeeded"), l(e.response);
                                        else {
                                            if (a.logger.error("License Request XHR failed (" + t + "). Status: " + e.status + " (" + e.statusText + ")"), this._requestLicenseFailureCount++, this._requestLicenseFailureCount <= 3) return a.logger.warn("Retrying license request, " + (3 - this._requestLicenseFailureCount + 1) + " attempts left"), void this._requestLicense(n, l);
                                            this.hls.trigger(s.default.ERROR, {
                                                type: o.ErrorTypes.KEY_SYSTEM_ERROR,
                                                details: o.ErrorDetails.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                                fatal: !0
                                            })
                                        }
                                }
                            }, t.prototype._generateLicenseRequestChallenge = function(e, t) {
                                var n;
                                return "com.microsoft.playready" === e.mediaKeySystemDomain ? a.logger.error("PlayReady is not supported (yet)") : "com.widevine.alpha" === e.mediaKeySystemDomain ? n = t : a.logger.error("Unsupported key-system:", e.mediaKeySystemDomain), n
                            }, t.prototype._requestLicense = function(e, t) {
                                a.logger.log("Requesting content license for key-system");
                                var n = this._mediaKeysList[0];
                                if (!n) return a.logger.error("Fatal error: Media is encrypted but no key-system access has been obtained yet"), void this.hls.trigger(s.default.ERROR, {
                                    type: o.ErrorTypes.KEY_SYSTEM_ERROR,
                                    details: o.ErrorDetails.KEY_SYSTEM_NO_ACCESS,
                                    fatal: !0
                                });
                                var l = this.getLicenseServerUrl(n.mediaKeySystemDomain),
                                    i = this._createLicenseXhr(l, e, t);
                                a.logger.log("Sending license request to URL: " + l), i.send(this._generateLicenseRequestChallenge(n, e))
                            }, t.prototype.onMediaAttached = function(e) {
                                var t = this;
                                if (this._emeEnabled) {
                                    var n = e.media;
                                    this._media = n, n.addEventListener("encrypted", (function(e) {
                                        t._onMediaEncrypted(e.initDataType, e.initData)
                                    }))
                                }
                            }, t.prototype.onManifestParsed = function(e) {
                                if (this._emeEnabled) {
                                    var t = e.levels.map((function(e) {
                                            return e.audioCodec
                                        })),
                                        n = e.levels.map((function(e) {
                                            return e.videoCodec
                                        }));
                                    this._attemptKeySystemAccess("com.widevine.alpha", t, n)
                                }
                            }, t
                        }(r.default)
                    },
                    "./src/controller/fps-controller.js": function(e, t, n) {
                        "use strict";
                        var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(e, t) {
                                e.__proto__ = t
                            } || function(e, t) {
                                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                            },
                            function(e, t) {
                                function n() {
                                    this.constructor = e
                                }
                                l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                            });
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var r = n("./src/events.js"),
                            s = n("./src/event-handler.js"),
                            o = n("./src/utils/logger.js"),
                            a = window.performance;
                        t.default = function(e) {
                            function t(t) {
                                return e.call(this, t, r.default.MEDIA_ATTACHING) || this
                            }
                            return i(t, e), t.prototype.destroy = function() {
                                this.timer && clearInterval(this.timer), this.isVideoPlaybackQualityAvailable = !1
                            }, t.prototype.onMediaAttaching = function(e) {
                                var t = this.hls.config;
                                t.capLevelOnFPSDrop && ("function" == typeof(this.video = e.media instanceof window.HTMLVideoElement ? e.media : null).getVideoPlaybackQuality && (this.isVideoPlaybackQualityAvailable = !0), clearInterval(this.timer), this.timer = setInterval(this.checkFPSInterval.bind(this), t.fpsDroppedMonitoringPeriod))
                            }, t.prototype.checkFPS = function(e, t, n) {
                                var l = a.now();
                                if (t) {
                                    if (this.lastTime) {
                                        var i = n - this.lastDroppedFrames,
                                            s = t - this.lastDecodedFrames,
                                            u = 1e3 * i / (l - this.lastTime),
                                            c = this.hls;
                                        if (c.trigger(r.default.FPS_DROP, {
                                                currentDropped: i,
                                                currentDecoded: s,
                                                totalDroppedFrames: n
                                            }), u > 0 && i > c.config.fpsDroppedMonitoringThreshold * s) {
                                            var d = c.currentLevel;
                                            o.logger.warn("drop FPS ratio greater than max allowed value for currentLevel: " + d), d > 0 && (-1 === c.autoLevelCapping || c.autoLevelCapping >= d) && (c.trigger(r.default.FPS_DROP_LEVEL_CAPPING, {
                                                level: d -= 1,
                                                droppedLevel: c.currentLevel
                                            }), c.autoLevelCapping = d, c.streamController.nextLevelSwitch())
                                        }
                                    }
                                    this.lastTime = l, this.lastDroppedFrames = n, this.lastDecodedFrames = t
                                }
                            }, t.prototype.checkFPSInterval = function() {
                                var e = this.video;
                                if (e)
                                    if (this.isVideoPlaybackQualityAvailable) {
                                        var t = e.getVideoPlaybackQuality();
                                        this.checkFPS(e, t.totalVideoFrames, t.droppedVideoFrames)
                                    } else this.checkFPS(e, e.webkitDecodedFrameCount, e.webkitDroppedFrameCount)
                            }, t
                        }(s.default)
                    },
                    "./src/controller/fragment-finders.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var l = n("./src/utils/binary-search.js");

                            function i(e, t, n) {
                                void 0 === e && (e = 0), void 0 === t && (t = 0);
                                var l = Math.min(t, n.duration + (n.deltaPTS ? n.deltaPTS : 0));
                                return n.start + n.duration - l <= e ? 1 : n.start - l > e && n.start ? -1 : 0
                            }

                            function r(e, t, n) {
                                var l = 1e3 * Math.min(t, n.duration + (n.deltaPTS ? n.deltaPTS : 0));
                                return n.endProgramDateTime - l > e
                            }
                            t.findFragmentByPDT = function(t, n, l) {
                                if (!Array.isArray(t) || !t.length || !e.isFinite(n)) return null;
                                if (n < t[0].programDateTime) return null;
                                if (n >= t[t.length - 1].endProgramDateTime) return null;
                                l = l || 0;
                                for (var i = 0; i < t.length; ++i) {
                                    var s = t[i];
                                    if (r(n, l, s)) return s
                                }
                                return null
                            }, t.findFragmentByPTS = function(e, t, n, r) {
                                void 0 === n && (n = 0), void 0 === r && (r = 0);
                                var s = e ? t[e.sn - t[0].sn + 1] : null;
                                return s && !i(n, r, s) ? s : l.default.search(t, i.bind(null, n, r))
                            }, t.fragmentWithinToleranceTest = i, t.pdtWithinToleranceTest = r
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/controller/fragment-tracker.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                    __proto__: []
                                }
                                instanceof Array && function(e, t) {
                                    e.__proto__ = t
                                } || function(e, t) {
                                    for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                                },
                                function(e, t) {
                                    function n() {
                                        this.constructor = e
                                    }
                                    l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                                });
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var r = n("./src/event-handler.js"),
                                s = n("./src/events.js");
                            t.FragmentState = {
                                NOT_LOADED: "NOT_LOADED",
                                APPENDING: "APPENDING",
                                PARTIAL: "PARTIAL",
                                OK: "OK"
                            }, t.FragmentTracker = function(n) {
                                function l(e) {
                                    var t = n.call(this, e, s.default.BUFFER_APPENDED, s.default.FRAG_BUFFERED, s.default.FRAG_LOADED) || this;
                                    return t.bufferPadding = .2, t.fragments = Object.create(null), t.timeRanges = Object.create(null), t.config = e.config, t
                                }
                                return i(l, n), l.prototype.destroy = function() {
                                    this.fragments = Object.create(null), this.timeRanges = Object.create(null), this.config = null, r.default.prototype.destroy.call(this), n.prototype.destroy.call(this)
                                }, l.prototype.getBufferedFrag = function(e, t) {
                                    var n = this.fragments,
                                        l = Object.keys(n).filter((function(l) {
                                            var i = n[l];
                                            if (i.body.type !== t) return !1;
                                            if (!i.buffered) return !1;
                                            var r = i.body;
                                            return r.startPTS <= e && e <= r.endPTS
                                        }));
                                    if (0 === l.length) return null;
                                    var i = l.pop();
                                    return n[i].body
                                }, l.prototype.detectEvictedFragments = function(e, t) {
                                    var n, l, i = this;
                                    Object.keys(this.fragments).forEach((function(r) {
                                        var s = i.fragments[r];
                                        if (!0 === s.buffered) {
                                            var o = s.range[e];
                                            if (o) {
                                                n = o.time;
                                                for (var a = 0; a < n.length; a++)
                                                    if (!1 === i.isTimeBuffered((l = n[a]).startPTS, l.endPTS, t)) {
                                                        i.removeFragment(s.body);
                                                        break
                                                    }
                                            }
                                        }
                                    }))
                                }, l.prototype.detectPartialFragments = function(e) {
                                    var t = this,
                                        n = this.getFragmentKey(e),
                                        l = this.fragments[n];
                                    l && (l.buffered = !0, Object.keys(this.timeRanges).forEach((function(n) {
                                        e.hasElementaryStream(n) && (l.range[n] = t.getBufferedTimes(e.startPTS, e.endPTS, t.timeRanges[n]))
                                    })))
                                }, l.prototype.getBufferedTimes = function(e, t, n) {
                                    for (var l, i, r = [], s = !1, o = 0; o < n.length; o++) {
                                        if (l = n.start(o) - this.bufferPadding, i = n.end(o) + this.bufferPadding, e >= l && t <= i) {
                                            r.push({
                                                startPTS: Math.max(e, n.start(o)),
                                                endPTS: Math.min(t, n.end(o))
                                            });
                                            break
                                        }
                                        if (e < i && t > l) r.push({
                                            startPTS: Math.max(e, n.start(o)),
                                            endPTS: Math.min(t, n.end(o))
                                        }), s = !0;
                                        else if (t <= l) break
                                    }
                                    return {
                                        time: r,
                                        partial: s
                                    }
                                }, l.prototype.getFragmentKey = function(e) {
                                    return e.type + "_" + e.level + "_" + e.urlId + "_" + e.sn
                                }, l.prototype.getPartialFragment = function(e) {
                                    var t, n, l, i = this,
                                        r = null,
                                        s = 0;
                                    return Object.keys(this.fragments).forEach((function(o) {
                                        var a = i.fragments[o];
                                        i.isPartial(a) && (l = a.body.endPTS + i.bufferPadding, e >= (n = a.body.startPTS - i.bufferPadding) && e <= l && (t = Math.min(e - n, l - e), s <= t && (r = a.body, s = t)))
                                    })), r
                                }, l.prototype.getState = function(e) {
                                    var n = this.getFragmentKey(e),
                                        l = this.fragments[n],
                                        i = t.FragmentState.NOT_LOADED;
                                    return void 0 !== l && (i = l.buffered ? !0 === this.isPartial(l) ? t.FragmentState.PARTIAL : t.FragmentState.OK : t.FragmentState.APPENDING), i
                                }, l.prototype.isPartial = function(e) {
                                    return !0 === e.buffered && (void 0 !== e.range.video && !0 === e.range.video.partial || void 0 !== e.range.audio && !0 === e.range.audio.partial)
                                }, l.prototype.isTimeBuffered = function(e, t, n) {
                                    for (var l, i, r = 0; r < n.length; r++) {
                                        if (l = n.start(r) - this.bufferPadding, i = n.end(r) + this.bufferPadding, e >= l && t <= i) return !0;
                                        if (t <= l) return !1
                                    }
                                    return !1
                                }, l.prototype.onFragLoaded = function(t) {
                                    var n = t.frag;
                                    e.isFinite(n.sn) && !n.bitrateTest && (this.fragments[this.getFragmentKey(n)] = {
                                        body: n,
                                        range: Object.create(null),
                                        buffered: !1
                                    })
                                }, l.prototype.onBufferAppended = function(e) {
                                    var t = this;
                                    this.timeRanges = e.timeRanges, Object.keys(this.timeRanges).forEach((function(e) {
                                        t.detectEvictedFragments(e, t.timeRanges[e])
                                    }))
                                }, l.prototype.onFragBuffered = function(e) {
                                    this.detectPartialFragments(e.frag)
                                }, l.prototype.hasFragment = function(e) {
                                    var t = this.getFragmentKey(e);
                                    return void 0 !== this.fragments[t]
                                }, l.prototype.removeFragment = function(e) {
                                    var t = this.getFragmentKey(e);
                                    delete this.fragments[t]
                                }, l.prototype.removeAllFragments = function() {
                                    this.fragments = Object.create(null)
                                }, l
                            }(r.default)
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/controller/gap-controller.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/utils/buffer-helper.js"),
                            i = n("./src/errors.js"),
                            r = n("./src/events.js"),
                            s = n("./src/utils/logger.js");
                        t.default = function() {
                            function e(e, t, n, l) {
                                this.config = e, this.media = t, this.fragmentTracker = n, this.hls = l, this.stallReported = !1
                            }
                            return e.prototype.poll = function(e, t) {
                                var n = this.config,
                                    i = this.media,
                                    r = i.currentTime,
                                    o = window.performance.now();
                                if (r !== e) return this.stallReported && (s.logger.warn("playback not stuck anymore @" + r + ", after " + Math.round(o - this.stalled) + "ms"), this.stallReported = !1), this.stalled = null, void(this.nudgeRetry = 0);
                                if (!(i.ended || !i.buffered.length || i.readyState > 2 || i.seeking && l.BufferHelper.isBuffered(i, r))) {
                                    var a = o - this.stalled,
                                        u = l.BufferHelper.bufferInfo(i, r, n.maxBufferHole);
                                    this.stalled ? (a >= 1e3 && this._reportStall(u.len), this._tryFixBufferStall(u, a)) : this.stalled = o
                                }
                            }, e.prototype._tryFixBufferStall = function(e, t) {
                                var n = this.config,
                                    l = this.fragmentTracker.getPartialFragment(this.media.currentTime);
                                l && this._trySkipBufferHole(l), e.len > .5 && t > 1e3 * n.highBufferWatchdogPeriod && (this.stalled = null, this._tryNudgeBuffer())
                            }, e.prototype._reportStall = function(e) {
                                var t = this.hls,
                                    n = this.media;
                                this.stallReported || (this.stallReported = !0, s.logger.warn("Playback stalling at @" + n.currentTime + " due to low buffer"), t.trigger(r.default.ERROR, {
                                    type: i.ErrorTypes.MEDIA_ERROR,
                                    details: i.ErrorDetails.BUFFER_STALLED_ERROR,
                                    fatal: !1,
                                    buffer: e
                                }))
                            }, e.prototype._trySkipBufferHole = function(e) {
                                for (var t = this.hls, n = this.media, l = n.currentTime, o = 0, a = 0; a < n.buffered.length; a++) {
                                    var u = n.buffered.start(a);
                                    if (l >= o && l < u) return n.currentTime = Math.max(u, n.currentTime + .1), s.logger.warn("skipping hole, adjusting currentTime from " + l + " to " + n.currentTime), this.stalled = null, void t.trigger(r.default.ERROR, {
                                        type: i.ErrorTypes.MEDIA_ERROR,
                                        details: i.ErrorDetails.BUFFER_SEEK_OVER_HOLE,
                                        fatal: !1,
                                        reason: "fragment loaded with buffer holes, seeking from " + l + " to " + n.currentTime,
                                        frag: e
                                    });
                                    o = n.buffered.end(a)
                                }
                            }, e.prototype._tryNudgeBuffer = function() {
                                var e = this.config,
                                    t = this.hls,
                                    n = this.media,
                                    l = n.currentTime,
                                    o = (this.nudgeRetry || 0) + 1;
                                if (this.nudgeRetry = o, o < e.nudgeMaxRetry) {
                                    var a = l + o * e.nudgeOffset;
                                    s.logger.log("adjust currentTime from " + l + " to " + a), n.currentTime = a, t.trigger(r.default.ERROR, {
                                        type: i.ErrorTypes.MEDIA_ERROR,
                                        details: i.ErrorDetails.BUFFER_NUDGE_ON_STALL,
                                        fatal: !1
                                    })
                                } else s.logger.error("still stuck in high buffer @" + l + " after " + e.nudgeMaxRetry + ", raise fatal error"), t.trigger(r.default.ERROR, {
                                    type: i.ErrorTypes.MEDIA_ERROR,
                                    details: i.ErrorDetails.BUFFER_STALLED_ERROR,
                                    fatal: !0
                                })
                            }, e
                        }()
                    },
                    "./src/controller/id3-track-controller.js": function(e, t, n) {
                        "use strict";
                        var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(e, t) {
                                e.__proto__ = t
                            } || function(e, t) {
                                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                            },
                            function(e, t) {
                                function n() {
                                    this.constructor = e
                                }
                                l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                            });
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var r = n("./src/events.js"),
                            s = n("./src/event-handler.js"),
                            o = n("./src/demux/id3.js"),
                            a = n("./src/utils/texttrack-utils.js");
                        t.default = function(e) {
                            function t(t) {
                                var n = e.call(this, t, r.default.MEDIA_ATTACHED, r.default.MEDIA_DETACHING, r.default.FRAG_PARSING_METADATA) || this;
                                return n.id3Track = void 0, n.media = void 0, n
                            }
                            return i(t, e), t.prototype.destroy = function() {
                                s.default.prototype.destroy.call(this)
                            }, t.prototype.onMediaAttached = function(e) {
                                this.media = e.media
                            }, t.prototype.onMediaDetaching = function() {
                                a.clearCurrentCues(this.id3Track), this.id3Track = void 0, this.media = void 0
                            }, t.prototype.getID3Track = function(e) {
                                for (var t = 0; t < e.length; t++) {
                                    var n = e[t];
                                    if ("metadata" === n.kind && "id3" === n.label) return a.sendAddTrackEvent(n, this.media), n
                                }
                                return this.media.addTextTrack("metadata", "id3")
                            }, t.prototype.onFragParsingMetadata = function(e) {
                                var t = e.frag,
                                    n = e.samples;
                                this.id3Track || (this.id3Track = this.getID3Track(this.media.textTracks), this.id3Track.mode = "hidden");
                                for (var l = window.WebKitDataCue || window.VTTCue || window.TextTrackCue, i = 0; i < n.length; i++) {
                                    var r = o.default.getID3Frames(n[i].data);
                                    if (r) {
                                        var s = n[i].pts,
                                            a = i < n.length - 1 ? n[i + 1].pts : t.endPTS;
                                        s === a && (a += 1e-4);
                                        for (var u = 0; u < r.length; u++) {
                                            var c = r[u];
                                            if (!o.default.isTimeStampFrame(c)) {
                                                var d = new l(s, a, "");
                                                d.value = c, this.id3Track.addCue(d)
                                            }
                                        }
                                    }
                                }
                            }, t
                        }(s.default)
                    },
                    "./src/controller/level-controller.js": function(e, t, n) {
                        "use strict";
                        var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(e, t) {
                                e.__proto__ = t
                            } || function(e, t) {
                                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                            },
                            function(e, t) {
                                function n() {
                                    this.constructor = e
                                }
                                l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                            });
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var r, s = n("./src/events.js"),
                            o = n("./src/event-handler.js"),
                            a = n("./src/utils/logger.js"),
                            u = n("./src/errors.js"),
                            c = n("./src/utils/codecs.js"),
                            d = n("./src/controller/level-helper.js");
                        window, t.default = function(e) {
                            function t(t) {
                                var n = e.call(this, t, s.default.MANIFEST_LOADED, s.default.LEVEL_LOADED, s.default.AUDIO_TRACK_SWITCHED, s.default.FRAG_LOADED, s.default.ERROR) || this;
                                return n.canload = !1, n.currentLevelIndex = null, n.manualLevelIndex = -1, n.timer = null, r = /chrome|firefox/.test(navigator.userAgent.toLowerCase()), n
                            }
                            return i(t, e), t.prototype.onHandlerDestroying = function() {
                                this.clearTimer(), this.manualLevelIndex = -1
                            }, t.prototype.clearTimer = function() {
                                null !== this.timer && (clearTimeout(this.timer), this.timer = null)
                            }, t.prototype.startLoad = function() {
                                var e = this._levels;
                                this.canload = !0, this.levelRetryCount = 0, e && e.forEach((function(e) {
                                    e.loadError = 0;
                                    var t = e.details;
                                    t && t.live && (e.details = void 0)
                                })), null !== this.timer && this.loadLevel()
                            }, t.prototype.stopLoad = function() {
                                this.canload = !1
                            }, t.prototype.onManifestLoaded = function(e) {
                                var t, n = [],
                                    l = [],
                                    i = {},
                                    o = null,
                                    f = !1,
                                    p = !1;
                                if (e.levels.forEach((function(e) {
                                        var t = e.attrs;
                                        e.loadError = 0, e.fragmentError = !1, f = f || !!e.videoCodec, p = p || !!e.audioCodec, r && e.audioCodec && -1 !== e.audioCodec.indexOf("mp4a.40.34") && (e.audioCodec = void 0), (o = i[e.bitrate]) ? o.url.push(e.url) : (e.url = [e.url], e.urlId = 0, i[e.bitrate] = e, n.push(e)), t && (t.AUDIO && (p = !0, d.addGroupId(o || e, "audio", t.AUDIO)), t.SUBTITLES && d.addGroupId(o || e, "text", t.SUBTITLES))
                                    })), f && p && (n = n.filter((function(e) {
                                        return !!e.videoCodec
                                    }))), n = n.filter((function(e) {
                                        var t = e.audioCodec,
                                            n = e.videoCodec;
                                        return (!t || c.isCodecSupportedInMp4(t, "audio")) && (!n || c.isCodecSupportedInMp4(n, "video"))
                                    })), e.audioTracks && (l = e.audioTracks.filter((function(e) {
                                        return !e.audioCodec || c.isCodecSupportedInMp4(e.audioCodec, "audio")
                                    }))).forEach((function(e, t) {
                                        e.id = t
                                    })), n.length > 0) {
                                    t = n[0].bitrate, n.sort((function(e, t) {
                                        return e.bitrate - t.bitrate
                                    })), this._levels = n;
                                    for (var h = 0; h < n.length; h++)
                                        if (n[h].bitrate === t) {
                                            this._firstLevel = h, a.logger.log("manifest loaded," + n.length + " level(s) found, first bitrate:" + t);
                                            break
                                        }
                                    this.hls.trigger(s.default.MANIFEST_PARSED, {
                                        levels: n,
                                        audioTracks: l,
                                        firstLevel: this._firstLevel,
                                        stats: e.stats,
                                        audio: p,
                                        video: f,
                                        altAudio: l.some((function(e) {
                                            return !!e.url
                                        }))
                                    })
                                } else this.hls.trigger(s.default.ERROR, {
                                    type: u.ErrorTypes.MEDIA_ERROR,
                                    details: u.ErrorDetails.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                                    fatal: !0,
                                    url: this.hls.url,
                                    reason: "no level with compatible codecs found in manifest"
                                })
                            }, Object.defineProperty(t.prototype, "levels", {
                                get: function() {
                                    return this._levels
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "level", {
                                get: function() {
                                    return this.currentLevelIndex
                                },
                                set: function(e) {
                                    var t = this._levels;
                                    t && (e = Math.min(e, t.length - 1), this.currentLevelIndex === e && t[e].details || this.setLevelInternal(e))
                                },
                                enumerable: !0,
                                configurable: !0
                            }), t.prototype.setLevelInternal = function(e) {
                                var t = this._levels,
                                    n = this.hls;
                                if (e >= 0 && e < t.length) {
                                    if (this.clearTimer(), this.currentLevelIndex !== e) {
                                        a.logger.log("switching to level " + e), this.currentLevelIndex = e;
                                        var l = t[e];
                                        l.level = e, n.trigger(s.default.LEVEL_SWITCHING, l)
                                    }
                                    var i = t[e],
                                        r = i.details;
                                    if (!r || r.live) {
                                        var o = i.urlId;
                                        n.trigger(s.default.LEVEL_LOADING, {
                                            url: i.url[o],
                                            level: e,
                                            id: o
                                        })
                                    }
                                } else n.trigger(s.default.ERROR, {
                                    type: u.ErrorTypes.OTHER_ERROR,
                                    details: u.ErrorDetails.LEVEL_SWITCH_ERROR,
                                    level: e,
                                    fatal: !1,
                                    reason: "invalid level idx"
                                })
                            }, Object.defineProperty(t.prototype, "manualLevel", {
                                get: function() {
                                    return this.manualLevelIndex
                                },
                                set: function(e) {
                                    this.manualLevelIndex = e, void 0 === this._startLevel && (this._startLevel = e), -1 !== e && (this.level = e)
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "firstLevel", {
                                get: function() {
                                    return this._firstLevel
                                },
                                set: function(e) {
                                    this._firstLevel = e
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "startLevel", {
                                get: function() {
                                    if (void 0 === this._startLevel) {
                                        var e = this.hls.config.startLevel;
                                        return void 0 !== e ? e : this._firstLevel
                                    }
                                    return this._startLevel
                                },
                                set: function(e) {
                                    this._startLevel = e
                                },
                                enumerable: !0,
                                configurable: !0
                            }), t.prototype.onError = function(e) {
                                if (e.fatal) e.type === u.ErrorTypes.NETWORK_ERROR && this.clearTimer();
                                else {
                                    var t, n = !1,
                                        l = !1;
                                    switch (e.details) {
                                        case u.ErrorDetails.FRAG_LOAD_ERROR:
                                        case u.ErrorDetails.FRAG_LOAD_TIMEOUT:
                                        case u.ErrorDetails.KEY_LOAD_ERROR:
                                        case u.ErrorDetails.KEY_LOAD_TIMEOUT:
                                            t = e.frag.level, l = !0;
                                            break;
                                        case u.ErrorDetails.LEVEL_LOAD_ERROR:
                                        case u.ErrorDetails.LEVEL_LOAD_TIMEOUT:
                                            t = e.context.level, n = !0;
                                            break;
                                        case u.ErrorDetails.REMUX_ALLOC_ERROR:
                                            t = e.level, n = !0
                                    }
                                    void 0 !== t && this.recoverLevel(e, t, n, l)
                                }
                            }, t.prototype.recoverLevel = function(e, t, n, l) {
                                var i, r, s, o = this,
                                    u = this.hls.config,
                                    c = e.details,
                                    d = this._levels[t];
                                if (d.loadError++, d.fragmentError = l, n) {
                                    if (!(this.levelRetryCount + 1 <= u.levelLoadingMaxRetry)) return a.logger.error("level controller, cannot recover from " + c + " error"), this.currentLevelIndex = null, this.clearTimer(), void(e.fatal = !0);
                                    r = Math.min(Math.pow(2, this.levelRetryCount) * u.levelLoadingRetryDelay, u.levelLoadingMaxRetryTimeout), this.timer = setTimeout((function() {
                                        return o.loadLevel()
                                    }), r), e.levelRetry = !0, this.levelRetryCount++, a.logger.warn("level controller, " + c + ", retry in " + r + " ms, current retry count is " + this.levelRetryCount)
                                }(n || l) && ((i = d.url.length) > 1 && d.loadError < i ? (d.urlId = (d.urlId + 1) % i, d.details = void 0, a.logger.warn("level controller, " + c + " for level " + t + ": switching to redundant URL-id " + d.urlId)) : -1 === this.manualLevelIndex ? (a.logger.warn("level controller, " + c + ": switch to " + (s = 0 === t ? this._levels.length - 1 : t - 1)), this.hls.nextAutoLevel = this.currentLevelIndex = s) : l && (a.logger.warn("level controller, " + c + ": reload a fragment"), this.currentLevelIndex = null))
                            }, t.prototype.onFragLoaded = function(e) {
                                var t = e.frag;
                                if (void 0 !== t && "main" === t.type) {
                                    var n = this._levels[t.level];
                                    void 0 !== n && (n.fragmentError = !1, n.loadError = 0, this.levelRetryCount = 0)
                                }
                            }, t.prototype.onLevelLoaded = function(e) {
                                var t = this,
                                    n = e.level,
                                    l = e.details;
                                if (n === this.currentLevelIndex) {
                                    var i = this._levels[n];
                                    if (i.fragmentError || (i.loadError = 0, this.levelRetryCount = 0), l.live) {
                                        var r = d.computeReloadInterval(i.details, l, e.stats.trequest);
                                        a.logger.log("live playlist, reload in " + Math.round(r) + " ms"), this.timer = setTimeout((function() {
                                            return t.loadLevel()
                                        }), r)
                                    } else this.clearTimer()
                                }
                            }, t.prototype.onAudioTrackSwitched = function(e) {
                                var t = this.hls.audioTracks[e.id].groupId,
                                    n = this.hls.levels[this.currentLevelIndex];
                                if (n && n.audioGroupIds) {
                                    for (var l = -1, i = 0; i < n.audioGroupIds.length; i++)
                                        if (n.audioGroupIds[i] === t) {
                                            l = i;
                                            break
                                        }
                                    l !== n.urlId && (n.urlId = l, this.startLoad())
                                }
                            }, t.prototype.loadLevel = function() {
                                if (a.logger.debug("call to loadLevel"), null !== this.currentLevelIndex && this.canload) {
                                    var e = this._levels[this.currentLevelIndex];
                                    if ("object" == typeof e && e.url.length > 0) {
                                        var t = this.currentLevelIndex,
                                            n = e.urlId,
                                            l = e.url[n];
                                        a.logger.log("Attempt loading level index " + t + " with URL-id " + n), this.hls.trigger(s.default.LEVEL_LOADING, {
                                            url: l,
                                            level: t,
                                            id: n
                                        })
                                    }
                                }
                            }, Object.defineProperty(t.prototype, "nextLoadLevel", {
                                get: function() {
                                    return -1 !== this.manualLevelIndex ? this.manualLevelIndex : this.hls.nextAutoLevel
                                },
                                set: function(e) {
                                    this.level = e, -1 === this.manualLevelIndex && (this.hls.nextAutoLevel = e)
                                },
                                enumerable: !0,
                                configurable: !0
                            }), t
                        }(o.default)
                    },
                    "./src/controller/level-helper.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var l = n("./src/utils/logger.js");

                            function i(t, n, i) {
                                var r = t[n],
                                    s = t[i],
                                    o = s.startPTS;
                                e.isFinite(o) ? i > n ? (r.duration = o - r.start, r.duration < 0 && l.logger.warn("negative duration computed for frag " + r.sn + ",level " + r.level + ", there should be some duration drift between playlist and fragment!")) : (s.duration = r.start - o, s.duration < 0 && l.logger.warn("negative duration computed for frag " + s.sn + ",level " + s.level + ", there should be some duration drift between playlist and fragment!")) : s.start = i > n ? r.start + r.duration : Math.max(r.start - s.duration, 0)
                            }

                            function r(t, n, l, r, s, o) {
                                var a = l;
                                if (e.isFinite(n.startPTS)) {
                                    var u = Math.abs(n.startPTS - l);
                                    n.deltaPTS = e.isFinite(n.deltaPTS) ? Math.max(u, n.deltaPTS) : u, a = Math.max(l, n.startPTS), l = Math.min(l, n.startPTS), r = Math.max(r, n.endPTS), s = Math.min(s, n.startDTS), o = Math.max(o, n.endDTS)
                                }
                                var c = l - n.start;
                                n.start = n.startPTS = l, n.maxStartPTS = a, n.endPTS = r, n.startDTS = s, n.endDTS = o, n.duration = r - l;
                                var d, f, p, h = n.sn;
                                if (!t || h < t.startSN || h > t.endSN) return 0;
                                for ((f = t.fragments)[d = h - t.startSN] = n, p = d; p > 0; p--) i(f, p, p - 1);
                                for (p = d; p < f.length - 1; p++) i(f, p, p + 1);
                                return t.PTSKnown = !0, c
                            }

                            function s(e, t, n) {
                                if (e && t)
                                    for (var l = Math.max(e.startSN, t.startSN) - t.startSN, i = Math.min(e.endSN, t.endSN) - t.startSN, r = t.startSN - e.startSN, s = l; s <= i; s++) {
                                        var o = e.fragments[r + s],
                                            a = t.fragments[s];
                                        if (!o || !a) break;
                                        n(o, a, s)
                                    }
                            }

                            function o(e, t) {
                                var n = t.startSN - e.startSN,
                                    l = e.fragments,
                                    i = t.fragments;
                                if (!(n < 0 || n > l.length))
                                    for (var r = 0; r < i.length; r++) i[r].start += l[n].start
                            }
                            t.addGroupId = function(e, t, n) {
                                switch (t) {
                                    case "audio":
                                        e.audioGroupIds || (e.audioGroupIds = []), e.audioGroupIds.push(n);
                                        break;
                                    case "text":
                                        e.textGroupIds || (e.textGroupIds = []), e.textGroupIds.push(n)
                                }
                            }, t.updatePTS = i, t.updateFragPTSDTS = r, t.mergeDetails = function(t, n) {
                                n.initSegment && t.initSegment && (n.initSegment = t.initSegment);
                                var i, a = 0;
                                if (s(t, n, (function(t, l) {
                                        a = t.cc - l.cc, e.isFinite(t.startPTS) && (l.start = l.startPTS = t.startPTS, l.endPTS = t.endPTS, l.duration = t.duration, l.backtracked = t.backtracked, l.dropped = t.dropped, i = l), n.PTSKnown = !0
                                    })), n.PTSKnown) {
                                    if (a) {
                                        l.logger.log("discontinuity sliding from playlist, take drift into account");
                                        for (var u = n.fragments, c = 0; c < u.length; c++) u[c].cc += a
                                    }
                                    i ? r(n, i, i.startPTS, i.endPTS, i.startDTS, i.endDTS) : o(t, n), n.PTSKnown = t.PTSKnown
                                }
                            }, t.mergeSubtitlePlaylists = function(e, t, n) {
                                void 0 === n && (n = 0);
                                var l = -1;
                                s(e, t, (function(e, t, n) {
                                    t.start = e.start, l = n
                                }));
                                var i = t.fragments;
                                if (l < 0) i.forEach((function(e) {
                                    e.start += n
                                }));
                                else
                                    for (var r = l + 1; r < i.length; r++) i[r].start = i[r - 1].start + i[r - 1].duration
                            }, t.mapFragmentIntersection = s, t.adjustSliding = o, t.computeReloadInterval = function(e, t, n) {
                                var l = 1e3 * (t.averagetargetduration ? t.averagetargetduration : t.targetduration),
                                    i = l / 2;
                                return e && t.endSN === e.endSN && (l = i), n && (l = Math.max(i, l - (window.performance.now() - n))), Math.round(l)
                            }
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/controller/stream-controller.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                    __proto__: []
                                }
                                instanceof Array && function(e, t) {
                                    e.__proto__ = t
                                } || function(e, t) {
                                    for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                                },
                                function(e, t) {
                                    function n() {
                                        this.constructor = e
                                    }
                                    l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                                });
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var r = n("./src/utils/binary-search.js"),
                                s = n("./src/utils/buffer-helper.js"),
                                o = n("./src/demux/demuxer.js"),
                                a = n("./src/events.js"),
                                u = n("./src/controller/fragment-tracker.js"),
                                c = n("./src/loader/fragment.js"),
                                d = n("./src/loader/playlist-loader.js"),
                                f = n("./src/controller/level-helper.js"),
                                p = n("./src/utils/time-ranges.js"),
                                h = n("./src/errors.js"),
                                g = n("./src/utils/logger.js"),
                                m = n("./src/utils/discontinuities.js"),
                                v = n("./src/controller/fragment-finders.js"),
                                y = n("./src/controller/gap-controller.js"),
                                b = n("./src/controller/base-stream-controller.js");
                            t.default = function(t) {
                                function n(e, n) {
                                    var l = t.call(this, e, a.default.MEDIA_ATTACHED, a.default.MEDIA_DETACHING, a.default.MANIFEST_LOADING, a.default.MANIFEST_PARSED, a.default.LEVEL_LOADED, a.default.KEY_LOADED, a.default.FRAG_LOADED, a.default.FRAG_LOAD_EMERGENCY_ABORTED, a.default.FRAG_PARSING_INIT_SEGMENT, a.default.FRAG_PARSING_DATA, a.default.FRAG_PARSED, a.default.ERROR, a.default.AUDIO_TRACK_SWITCHING, a.default.AUDIO_TRACK_SWITCHED, a.default.BUFFER_CREATED, a.default.BUFFER_APPENDED, a.default.BUFFER_FLUSHED) || this;
                                    return l.fragmentTracker = n, l.config = e.config, l.audioCodecSwap = !1, l._state = b.State.STOPPED, l.stallReported = !1, l.gapController = null, l
                                }
                                return i(n, t), n.prototype.startLoad = function(e) {
                                    if (this.levels) {
                                        var t = this.lastCurrentTime,
                                            n = this.hls;
                                        if (this.stopLoad(), this.setInterval(100), this.level = -1, this.fragLoadError = 0, !this.startFragRequested) {
                                            var l = n.startLevel; - 1 === l && (l = 0, this.bitrateTest = !0), this.level = n.nextLoadLevel = l, this.loadedmetadata = !1
                                        }
                                        t > 0 && -1 === e && (g.logger.log("override startPosition with lastCurrentTime @" + t.toFixed(3)), e = t), this.state = b.State.IDLE, this.nextLoadPosition = this.startPosition = this.lastCurrentTime = e, this.tick()
                                    } else this.forceStartLoad = !0, this.state = b.State.STOPPED
                                }, n.prototype.stopLoad = function() {
                                    this.forceStartLoad = !1, t.prototype.stopLoad.call(this)
                                }, n.prototype.doTick = function() {
                                    switch (this.state) {
                                        case b.State.BUFFER_FLUSHING:
                                            this.fragLoadError = 0;
                                            break;
                                        case b.State.IDLE:
                                            this._doTickIdle();
                                            break;
                                        case b.State.WAITING_LEVEL:
                                            var e = this.levels[this.level];
                                            e && e.details && (this.state = b.State.IDLE);
                                            break;
                                        case b.State.FRAG_LOADING_WAITING_RETRY:
                                            var t = window.performance.now(),
                                                n = this.retryDate;
                                            (!n || t >= n || this.media && this.media.seeking) && (g.logger.log("mediaController: retryDate reached, switch back to IDLE state"), this.state = b.State.IDLE)
                                    }
                                    this._checkBuffer(), this._checkFragmentChanged()
                                }, n.prototype._doTickIdle = function() {
                                    var e = this.hls,
                                        t = e.config,
                                        n = this.media;
                                    if (void 0 !== this.levelLastLoaded && (n || !this.startFragRequested && t.startFragPrefetch)) {
                                        var l;
                                        l = this.loadedmetadata ? n.currentTime : this.nextLoadPosition;
                                        var i = e.nextLoadLevel,
                                            r = this.levels[i];
                                        if (r) {
                                            var o, u = r.bitrate;
                                            o = u ? Math.max(8 * t.maxBufferSize / u, t.maxBufferLength) : t.maxBufferLength, o = Math.min(o, t.maxMaxBufferLength);
                                            var c = s.BufferHelper.bufferInfo(this.mediaBuffer ? this.mediaBuffer : n, l, t.maxBufferHole),
                                                d = c.len;
                                            if (!(d >= o)) {
                                                g.logger.trace("buffer length of " + d.toFixed(3) + " is below max of " + o.toFixed(3) + ". checking for more payload ..."), this.level = e.nextLoadLevel = i;
                                                var f = r.details;
                                                if (!f || f.live && this.levelLastLoaded !== i) this.state = b.State.WAITING_LEVEL;
                                                else {
                                                    if (this._streamEnded(c, f)) {
                                                        var p = {};
                                                        return this.altAudio && (p.type = "video"), this.hls.trigger(a.default.BUFFER_EOS, p), void(this.state = b.State.ENDED)
                                                    }
                                                    this._fetchPayloadOrEos(l, c, f)
                                                }
                                            }
                                        }
                                    }
                                }, n.prototype._fetchPayloadOrEos = function(e, t, n) {
                                    var l = this.fragPrevious,
                                        i = this.level,
                                        r = n.fragments,
                                        s = r.length;
                                    if (0 !== s) {
                                        var o, a = r[0].start,
                                            u = r[s - 1].start + r[s - 1].duration,
                                            c = t.end;
                                        if (n.initSegment && !n.initSegment.data) o = n.initSegment;
                                        else if (n.live) {
                                            var d = this.config.initialLiveManifestSize;
                                            if (s < d) return void g.logger.warn("Can not start playback of a level, reason: not enough fragments " + s + " < " + d);
                                            if (null === (o = this._ensureFragmentAtLivePoint(n, c, a, u, l, r, s))) return
                                        } else c < a && (o = r[0]);
                                        o || (o = this._findFragment(a, l, s, r, c, u, n)), o && (o.encrypted ? (g.logger.log("Loading key for " + o.sn + " of [" + n.startSN + " ," + n.endSN + "],level " + i), this._loadKey(o)) : (g.logger.log("Loading " + o.sn + " of [" + n.startSN + " ," + n.endSN + "],level " + i + ", currentTime:" + e.toFixed(3) + ",bufferEnd:" + c.toFixed(3)), this._loadFragment(o)))
                                    }
                                }, n.prototype._ensureFragmentAtLivePoint = function(e, t, n, l, i, s, o) {
                                    var a, u = this.hls.config,
                                        c = this.media;
                                    if (t < Math.max(n - u.maxFragLookUpTolerance, l - (void 0 !== u.liveMaxLatencyDuration ? u.liveMaxLatencyDuration : u.liveMaxLatencyDurationCount * e.targetduration))) {
                                        var d = this.liveSyncPosition = this.computeLivePosition(n, e);
                                        g.logger.log("buffer end: " + t.toFixed(3) + " is located too far from the end of live sliding playlist, reset currentTime to : " + d.toFixed(3)), t = d, c && c.readyState && c.duration > d && (c.currentTime = d), this.nextLoadPosition = d
                                    }
                                    if (e.PTSKnown && t > l && c && c.readyState) return null;
                                    if (this.startFragRequested && !e.PTSKnown) {
                                        if (i)
                                            if (e.hasProgramDateTime) g.logger.log("live playlist, switching playlist, load frag with same PDT: " + i.programDateTime), a = v.findFragmentByPDT(s, i.endProgramDateTime, u.maxFragLookUpTolerance);
                                            else {
                                                var f = i.sn + 1;
                                                if (f >= e.startSN && f <= e.endSN) {
                                                    var p = s[f - e.startSN];
                                                    i.cc === p.cc && g.logger.log("live playlist, switching playlist, load frag with next SN: " + (a = p).sn)
                                                }
                                                a || (a = r.default.search(s, (function(e) {
                                                    return i.cc - e.cc
                                                }))) && g.logger.log("live playlist, switching playlist, load frag with same CC: " + a.sn)
                                            }
                                        a || (a = s[Math.min(o - 1, Math.round(o / 2))], g.logger.log("live playlist, switching playlist, unknown, load middle frag : " + a.sn))
                                    }
                                    return a
                                }, n.prototype._findFragment = function(e, t, n, l, i, r, s) {
                                    var o, a = this.hls.config;
                                    if (o = i < r ? v.findFragmentByPTS(t, l, i, i > r - a.maxFragLookUpTolerance ? 0 : a.maxFragLookUpTolerance) : l[n - 1]) {
                                        var u = o.sn - s.startSN,
                                            c = l[u - 1],
                                            d = l[u + 1];
                                        if (t && o.sn === t.sn)
                                            if (t && o.level === t.level && !o.backtracked)
                                                if (o.sn < s.endSN) {
                                                    var f = t.deltaPTS;
                                                    f && f > a.maxBufferHole && t.dropped && u ? (o = c, g.logger.warn("SN just loaded, with large PTS gap between audio and video, maybe frag is not starting with a keyframe ? load previous one to try to overcome this")) : g.logger.log("SN just loaded, load next one: " + (o = d).sn, o)
                                                } else o = null;
                                        else o.backtracked && (d && d.backtracked ? (g.logger.warn("Already backtracked from fragment " + d.sn + ", will not backtrack to fragment " + o.sn + ". Loading fragment " + d.sn), o = d) : (g.logger.warn("Loaded fragment with dropped frames, backtracking 1 segment to find a keyframe"), o.dropped = 0, c ? (o = c).backtracked = !0 : u && (o = null)))
                                    }
                                    return o
                                }, n.prototype._loadKey = function(e) {
                                    this.state = b.State.KEY_LOADING, this.hls.trigger(a.default.KEY_LOADING, {
                                        frag: e
                                    })
                                }, n.prototype._loadFragment = function(t) {
                                    var n = this.fragmentTracker.getState(t);
                                    this.fragCurrent = t, this.startFragRequested = !0, e.isFinite(t.sn) && !t.bitrateTest && (this.nextLoadPosition = t.start + t.duration), t.backtracked || n === u.FragmentState.NOT_LOADED || n === u.FragmentState.PARTIAL ? (t.autoLevel = this.hls.autoLevelEnabled, t.bitrateTest = this.bitrateTest, this.hls.trigger(a.default.FRAG_LOADING, {
                                        frag: t
                                    }), this.demuxer || (this.demuxer = new o.default(this.hls, "main")), this.state = b.State.FRAG_LOADING) : n === u.FragmentState.APPENDING && this._reduceMaxBufferLength(t.duration) && this.fragmentTracker.removeFragment(t)
                                }, Object.defineProperty(n.prototype, "state", {
                                    get: function() {
                                        return this._state
                                    },
                                    set: function(e) {
                                        if (this.state !== e) {
                                            var t = this.state;
                                            this._state = e, g.logger.log("main stream:" + t + "->" + e), this.hls.trigger(a.default.STREAM_STATE_TRANSITION, {
                                                previousState: t,
                                                nextState: e
                                            })
                                        }
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), n.prototype.getBufferedFrag = function(e) {
                                    return this.fragmentTracker.getBufferedFrag(e, d.default.LevelType.MAIN)
                                }, Object.defineProperty(n.prototype, "currentLevel", {
                                    get: function() {
                                        var e = this.media;
                                        if (e) {
                                            var t = this.getBufferedFrag(e.currentTime);
                                            if (t) return t.level
                                        }
                                        return -1
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), Object.defineProperty(n.prototype, "nextBufferedFrag", {
                                    get: function() {
                                        var e = this.media;
                                        return e ? this.followingBufferedFrag(this.getBufferedFrag(e.currentTime)) : null
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), n.prototype.followingBufferedFrag = function(e) {
                                    return e ? this.getBufferedFrag(e.endPTS + .5) : null
                                }, Object.defineProperty(n.prototype, "nextLevel", {
                                    get: function() {
                                        var e = this.nextBufferedFrag;
                                        return e ? e.level : -1
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), n.prototype._checkFragmentChanged = function() {
                                    var e, t, n = this.media;
                                    if (n && n.readyState && !1 === n.seeking && ((t = n.currentTime) > this.lastCurrentTime && (this.lastCurrentTime = t), s.BufferHelper.isBuffered(n, t) ? e = this.getBufferedFrag(t) : s.BufferHelper.isBuffered(n, t + .1) && (e = this.getBufferedFrag(t + .1)), e)) {
                                        var l = e;
                                        if (l !== this.fragPlaying) {
                                            this.hls.trigger(a.default.FRAG_CHANGED, {
                                                frag: l
                                            });
                                            var i = l.level;
                                            this.fragPlaying && this.fragPlaying.level === i || this.hls.trigger(a.default.LEVEL_SWITCHED, {
                                                level: i
                                            }), this.fragPlaying = l
                                        }
                                    }
                                }, n.prototype.immediateLevelSwitch = function() {
                                    if (g.logger.log("immediateLevelSwitch"), !this.immediateSwitch) {
                                        this.immediateSwitch = !0;
                                        var t = this.media,
                                            n = void 0;
                                        t ? (n = t.paused, t.pause()) : n = !0, this.previouslyPaused = n
                                    }
                                    var l = this.fragCurrent;
                                    l && l.loader && l.loader.abort(), this.fragCurrent = null, this.flushMainBuffer(0, e.POSITIVE_INFINITY)
                                }, n.prototype.immediateLevelSwitchEnd = function() {
                                    var e = this.media;
                                    e && e.buffered.length && (this.immediateSwitch = !1, s.BufferHelper.isBuffered(e, e.currentTime) && (e.currentTime -= 1e-4), this.previouslyPaused || e.play())
                                }, n.prototype.nextLevelSwitch = function() {
                                    var t = this.media;
                                    if (t && t.readyState) {
                                        var n, l = void 0,
                                            i = void 0;
                                        if ((n = this.getBufferedFrag(t.currentTime)) && n.startPTS > 1 && this.flushMainBuffer(0, n.startPTS - 1), t.paused) l = 0;
                                        else {
                                            var r = this.fragLastKbps;
                                            l = r && this.fragCurrent ? this.fragCurrent.duration * this.levels[this.hls.nextLoadLevel].bitrate / (1e3 * r) + 1 : 0
                                        }
                                        if ((i = this.getBufferedFrag(t.currentTime + l)) && (i = this.followingBufferedFrag(i))) {
                                            var s = this.fragCurrent;
                                            s && s.loader && s.loader.abort(), this.fragCurrent = null, this.flushMainBuffer(i.maxStartPTS, e.POSITIVE_INFINITY)
                                        }
                                    }
                                }, n.prototype.flushMainBuffer = function(e, t) {
                                    this.state = b.State.BUFFER_FLUSHING;
                                    var n = {
                                        startOffset: e,
                                        endOffset: t
                                    };
                                    this.altAudio && (n.type = "video"), this.hls.trigger(a.default.BUFFER_FLUSHING, n)
                                }, n.prototype.onMediaAttached = function(e) {
                                    var t = this.media = this.mediaBuffer = e.media;
                                    this.onvseeking = this.onMediaSeeking.bind(this), this.onvseeked = this.onMediaSeeked.bind(this), this.onvended = this.onMediaEnded.bind(this), t.addEventListener("seeking", this.onvseeking), t.addEventListener("seeked", this.onvseeked), t.addEventListener("ended", this.onvended);
                                    var n = this.config;
                                    this.levels && n.autoStartLoad && this.hls.startLoad(n.startPosition), this.gapController = new y.default(n, t, this.fragmentTracker, this.hls)
                                }, n.prototype.onMediaDetaching = function() {
                                    var e = this.media;
                                    e && e.ended && (g.logger.log("MSE detaching and video ended, reset startPosition"), this.startPosition = this.lastCurrentTime = 0);
                                    var t = this.levels;
                                    t && t.forEach((function(e) {
                                        e.details && e.details.fragments.forEach((function(e) {
                                            e.backtracked = void 0
                                        }))
                                    })), e && (e.removeEventListener("seeking", this.onvseeking), e.removeEventListener("seeked", this.onvseeked), e.removeEventListener("ended", this.onvended), this.onvseeking = this.onvseeked = this.onvended = null), this.media = this.mediaBuffer = null, this.loadedmetadata = !1, this.stopLoad()
                                }, n.prototype.onMediaSeeked = function() {
                                    var t = this.media,
                                        n = t ? t.currentTime : void 0;
                                    e.isFinite(n) && g.logger.log("media seeked to " + n.toFixed(3)), this.tick()
                                }, n.prototype.onManifestLoading = function() {
                                    g.logger.log("trigger BUFFER_RESET"), this.hls.trigger(a.default.BUFFER_RESET), this.fragmentTracker.removeAllFragments(), this.stalled = !1, this.startPosition = this.lastCurrentTime = 0
                                }, n.prototype.onManifestParsed = function(e) {
                                    var t, n = !1,
                                        l = !1;
                                    e.levels.forEach((function(e) {
                                        (t = e.audioCodec) && (-1 !== t.indexOf("mp4a.40.2") && (n = !0), -1 !== t.indexOf("mp4a.40.5") && (l = !0))
                                    })), this.audioCodecSwitch = n && l, this.audioCodecSwitch && g.logger.log("both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"), this.levels = e.levels, this.startFragRequested = !1;
                                    var i = this.config;
                                    (i.autoStartLoad || this.forceStartLoad) && this.hls.startLoad(i.startPosition)
                                }, n.prototype.onLevelLoaded = function(t) {
                                    var n = t.details,
                                        l = t.level,
                                        i = this.levels[this.levelLastLoaded],
                                        r = this.levels[l],
                                        s = n.totalduration,
                                        o = 0;
                                    if (g.logger.log("level " + l + " loaded [" + n.startSN + "," + n.endSN + "],duration:" + s), n.live) {
                                        var u = r.details;
                                        u && n.fragments.length > 0 ? (f.mergeDetails(u, n), this.liveSyncPosition = this.computeLivePosition(o = n.fragments[0].start, u), n.PTSKnown && e.isFinite(o) ? g.logger.log("live playlist sliding:" + o.toFixed(3)) : (g.logger.log("live playlist - outdated PTS, unknown sliding"), m.alignStream(this.fragPrevious, i, n))) : (g.logger.log("live playlist - first load, unknown sliding"), n.PTSKnown = !1, m.alignStream(this.fragPrevious, i, n))
                                    } else n.PTSKnown = !1;
                                    if (r.details = n, this.levelLastLoaded = l, this.hls.trigger(a.default.LEVEL_UPDATED, {
                                            details: n,
                                            level: l
                                        }), !1 === this.startFragRequested) {
                                        if (-1 === this.startPosition || -1 === this.lastCurrentTime) {
                                            var c = n.startTimeOffset;
                                            e.isFinite(c) ? (c < 0 && (g.logger.log("negative start time offset " + c + ", count from end of last fragment"), c = o + s + c), g.logger.log("start time offset found in playlist, adjust startPosition to " + c), this.startPosition = c) : n.live ? (this.startPosition = this.computeLivePosition(o, n), g.logger.log("configure startPosition to " + this.startPosition)) : this.startPosition = 0, this.lastCurrentTime = this.startPosition
                                        }
                                        this.nextLoadPosition = this.startPosition
                                    }
                                    this.state === b.State.WAITING_LEVEL && (this.state = b.State.IDLE), this.tick()
                                }, n.prototype.onKeyLoaded = function() {
                                    this.state === b.State.KEY_LOADING && (this.state = b.State.IDLE, this.tick())
                                }, n.prototype.onFragLoaded = function(e) {
                                    var t = this.fragCurrent,
                                        n = this.hls,
                                        l = this.media,
                                        i = e.frag;
                                    if (this.state === b.State.FRAG_LOADING && t && "main" === i.type && i.level === t.level && i.sn === t.sn) {
                                        var r = e.stats,
                                            s = this.levels[t.level],
                                            u = s.details;
                                        if (this.bitrateTest = !1, this.stats = r, g.logger.log("Loaded " + t.sn + " of [" + u.startSN + " ," + u.endSN + "],level " + t.level), i.bitrateTest && n.nextLoadLevel) this.state = b.State.IDLE, this.startFragRequested = !1, r.tparsed = r.tbuffered = window.performance.now(), n.trigger(a.default.FRAG_BUFFERED, {
                                            stats: r,
                                            frag: t,
                                            id: "main"
                                        }), this.tick();
                                        else if ("initSegment" === i.sn) this.state = b.State.IDLE, r.tparsed = r.tbuffered = window.performance.now(), u.initSegment.data = e.payload, n.trigger(a.default.FRAG_BUFFERED, {
                                            stats: r,
                                            frag: t,
                                            id: "main"
                                        }), this.tick();
                                        else {
                                            g.logger.log("Parsing " + t.sn + " of [" + u.startSN + " ," + u.endSN + "],level " + t.level + ", cc " + t.cc), this.state = b.State.PARSING, this.pendingBuffering = !0, this.appended = !1, i.bitrateTest && (i.bitrateTest = !1, this.fragmentTracker.onFragLoaded({
                                                frag: i
                                            }));
                                            var c = !(l && l.seeking) && (u.PTSKnown || !u.live),
                                                d = u.initSegment ? u.initSegment.data : [],
                                                f = this._getAudioCodec(s);
                                            (this.demuxer = this.demuxer || new o.default(this.hls, "main")).push(e.payload, d, f, s.videoCodec, t, u.totalduration, c)
                                        }
                                    }
                                    this.fragLoadError = 0
                                }, n.prototype.onFragParsingInitSegment = function(e) {
                                    var t = this.fragCurrent,
                                        n = e.frag;
                                    if (t && "main" === e.id && n.sn === t.sn && n.level === t.level && this.state === b.State.PARSING) {
                                        var l = e.tracks,
                                            i = void 0,
                                            r = void 0;
                                        if (l.audio && this.altAudio && delete l.audio, r = l.audio) {
                                            var s = this.levels[this.level].audioCodec,
                                                o = navigator.userAgent.toLowerCase();
                                            s && this.audioCodecSwap && (g.logger.log("swapping playlist audio codec"), s = -1 !== s.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5"), this.audioCodecSwitch && 1 !== r.metadata.channelCount && -1 === o.indexOf("firefox") && (s = "mp4a.40.5"), -1 !== o.indexOf("android") && "audio/mpeg" !== r.container && g.logger.log("Android: force audio codec to " + (s = "mp4a.40.2")), r.levelCodec = s, r.id = e.id
                                        }
                                        for (i in (r = l.video) && (r.levelCodec = this.levels[this.level].videoCodec, r.id = e.id), this.hls.trigger(a.default.BUFFER_CODECS, l), l) {
                                            g.logger.log("main track:" + i + ",container:" + (r = l[i]).container + ",codecs[level/parsed]=[" + r.levelCodec + "/" + r.codec + "]");
                                            var u = r.initSegment;
                                            u && (this.appended = !0, this.pendingBuffering = !0, this.hls.trigger(a.default.BUFFER_APPENDING, {
                                                type: i,
                                                data: u,
                                                parent: "main",
                                                content: "initSegment"
                                            }))
                                        }
                                        this.tick()
                                    }
                                }, n.prototype.onFragParsingData = function(t) {
                                    var n = this,
                                        l = this.fragCurrent,
                                        i = t.frag;
                                    if (l && "main" === t.id && i.sn === l.sn && i.level === l.level && ("audio" !== t.type || !this.altAudio) && this.state === b.State.PARSING) {
                                        var r = this.levels[this.level],
                                            s = l;
                                        if (e.isFinite(t.endPTS) || (t.endPTS = t.startPTS + l.duration, t.endDTS = t.startDTS + l.duration), !0 === t.hasAudio && s.addElementaryStream(c.default.ElementaryStreamTypes.AUDIO), !0 === t.hasVideo && s.addElementaryStream(c.default.ElementaryStreamTypes.VIDEO), g.logger.log("Parsed " + t.type + ",PTS:[" + t.startPTS.toFixed(3) + "," + t.endPTS.toFixed(3) + "],DTS:[" + t.startDTS.toFixed(3) + "/" + t.endDTS.toFixed(3) + "],nb:" + t.nb + ",dropped:" + (t.dropped || 0)), "video" === t.type)
                                            if (s.dropped = t.dropped, s.dropped)
                                                if (s.backtracked) g.logger.warn("Already backtracked on this fragment, appending with the gap", s.sn);
                                                else {
                                                    var o = r.details;
                                                    if (!o || s.sn !== o.startSN) return g.logger.warn("missing video frame(s), backtracking fragment", s.sn), this.fragmentTracker.removeFragment(s), s.backtracked = !0, this.nextLoadPosition = t.startPTS, this.state = b.State.IDLE, this.fragPrevious = s, void this.tick();
                                                    g.logger.warn("missing video frame(s) on first frag, appending with gap", s.sn)
                                                }
                                        else s.backtracked = !1;
                                        var u = f.updateFragPTSDTS(r.details, s, t.startPTS, t.endPTS, t.startDTS, t.endDTS),
                                            d = this.hls;
                                        d.trigger(a.default.LEVEL_PTS_UPDATED, {
                                            details: r.details,
                                            level: this.level,
                                            drift: u,
                                            type: t.type,
                                            start: t.startPTS,
                                            end: t.endPTS
                                        }), [t.data1, t.data2].forEach((function(e) {
                                            e && e.length && n.state === b.State.PARSING && (n.appended = !0, n.pendingBuffering = !0, d.trigger(a.default.BUFFER_APPENDING, {
                                                type: t.type,
                                                data: e,
                                                parent: "main",
                                                content: "data"
                                            }))
                                        })), this.tick()
                                    }
                                }, n.prototype.onFragParsed = function(e) {
                                    var t = this.fragCurrent,
                                        n = e.frag;
                                    t && "main" === e.id && n.sn === t.sn && n.level === t.level && this.state === b.State.PARSING && (this.stats.tparsed = window.performance.now(), this.state = b.State.PARSED, this._checkAppendedParsed())
                                }, n.prototype.onAudioTrackSwitching = function(t) {
                                    var n = t.id;
                                    if (!t.url) {
                                        if (this.mediaBuffer !== this.media) {
                                            g.logger.log("switching on main audio, use media.buffered to schedule main fragment loading"), this.mediaBuffer = this.media;
                                            var l = this.fragCurrent;
                                            l.loader && (g.logger.log("switching to main audio track, cancel main fragment load"), l.loader.abort()), this.fragCurrent = null, this.fragPrevious = null, this.demuxer && (this.demuxer.destroy(), this.demuxer = null), this.state = b.State.IDLE
                                        }
                                        var i = this.hls;
                                        i.trigger(a.default.BUFFER_FLUSHING, {
                                            startOffset: 0,
                                            endOffset: e.POSITIVE_INFINITY,
                                            type: "audio"
                                        }), i.trigger(a.default.AUDIO_TRACK_SWITCHED, {
                                            id: n
                                        }), this.altAudio = !1
                                    }
                                }, n.prototype.onAudioTrackSwitched = function(e) {
                                    var t = !!this.hls.audioTracks[e.id].url;
                                    if (t) {
                                        var n = this.videoBuffer;
                                        n && this.mediaBuffer !== n && (g.logger.log("switching on alternate audio, use video.buffered to schedule main fragment loading"), this.mediaBuffer = n)
                                    }
                                    this.altAudio = t, this.tick()
                                }, n.prototype.onBufferCreated = function(e) {
                                    var t, n, l = e.tracks,
                                        i = !1;
                                    for (var r in l) {
                                        var s = l[r];
                                        "main" === s.id ? (n = r, t = s, "video" === r && (this.videoBuffer = l[r].buffer)) : i = !0
                                    }
                                    i && t ? (g.logger.log("alternate track found, use " + n + ".buffered to schedule main fragment loading"), this.mediaBuffer = t.buffer) : this.mediaBuffer = this.media
                                }, n.prototype.onBufferAppended = function(e) {
                                    if ("main" === e.parent) {
                                        var t = this.state;
                                        t !== b.State.PARSING && t !== b.State.PARSED || (this.pendingBuffering = e.pending > 0, this._checkAppendedParsed())
                                    }
                                }, n.prototype._checkAppendedParsed = function() {
                                    if (!(this.state !== b.State.PARSED || this.appended && this.pendingBuffering)) {
                                        var e = this.fragCurrent;
                                        if (e) {
                                            g.logger.log("main buffered : " + p.default.toString((this.mediaBuffer ? this.mediaBuffer : this.media).buffered)), this.fragPrevious = e;
                                            var t = this.stats;
                                            t.tbuffered = window.performance.now(), this.fragLastKbps = Math.round(8 * t.total / (t.tbuffered - t.tfirst)), this.hls.trigger(a.default.FRAG_BUFFERED, {
                                                stats: t,
                                                frag: e,
                                                id: "main"
                                            }), this.state = b.State.IDLE
                                        }
                                        this.tick()
                                    }
                                }, n.prototype.onError = function(t) {
                                    var n = t.frag || this.fragCurrent;
                                    if (!n || "main" === n.type) {
                                        var l = !!this.media && s.BufferHelper.isBuffered(this.media, this.media.currentTime) && s.BufferHelper.isBuffered(this.media, this.media.currentTime + .5);
                                        switch (t.details) {
                                            case h.ErrorDetails.FRAG_LOAD_ERROR:
                                            case h.ErrorDetails.FRAG_LOAD_TIMEOUT:
                                            case h.ErrorDetails.KEY_LOAD_ERROR:
                                            case h.ErrorDetails.KEY_LOAD_TIMEOUT:
                                                if (!t.fatal)
                                                    if (this.fragLoadError + 1 <= this.config.fragLoadingMaxRetry) {
                                                        var i = Math.min(Math.pow(2, this.fragLoadError) * this.config.fragLoadingRetryDelay, this.config.fragLoadingMaxRetryTimeout);
                                                        g.logger.warn("mediaController: frag loading failed, retry in " + i + " ms"), this.retryDate = window.performance.now() + i, this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition), this.fragLoadError++, this.state = b.State.FRAG_LOADING_WAITING_RETRY
                                                    } else g.logger.error("mediaController: " + t.details + " reaches max retry, redispatch as fatal ..."), t.fatal = !0, this.state = b.State.ERROR;
                                                break;
                                            case h.ErrorDetails.LEVEL_LOAD_ERROR:
                                            case h.ErrorDetails.LEVEL_LOAD_TIMEOUT:
                                                this.state !== b.State.ERROR && (t.fatal ? (this.state = b.State.ERROR, g.logger.warn("streamController: " + t.details + ",switch to " + this.state + " state ...")) : t.levelRetry || this.state !== b.State.WAITING_LEVEL || (this.state = b.State.IDLE));
                                                break;
                                            case h.ErrorDetails.BUFFER_FULL_ERROR:
                                                "main" !== t.parent || this.state !== b.State.PARSING && this.state !== b.State.PARSED || (l ? (this._reduceMaxBufferLength(this.config.maxBufferLength), this.state = b.State.IDLE) : (g.logger.warn("buffer full error also media.currentTime is not buffered, flush everything"), this.fragCurrent = null, this.flushMainBuffer(0, e.POSITIVE_INFINITY)))
                                        }
                                    }
                                }, n.prototype._reduceMaxBufferLength = function(e) {
                                    var t = this.config;
                                    return t.maxMaxBufferLength >= e && (t.maxMaxBufferLength /= 2, g.logger.warn("main:reduce max buffer length to " + t.maxMaxBufferLength + "s"), !0)
                                }, n.prototype._checkBuffer = function() {
                                    var e = this.media;
                                    if (e && 0 !== e.readyState) {
                                        var t = (this.mediaBuffer ? this.mediaBuffer : e).buffered;
                                        !this.loadedmetadata && t.length ? (this.loadedmetadata = !0, this._seekToStartPos()) : this.immediateSwitch ? this.immediateLevelSwitchEnd() : this.gapController.poll(this.lastCurrentTime, t)
                                    }
                                }, n.prototype.onFragLoadEmergencyAborted = function() {
                                    this.state = b.State.IDLE, this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition), this.tick()
                                }, n.prototype.onBufferFlushed = function() {
                                    var e = this.mediaBuffer ? this.mediaBuffer : this.media;
                                    e && this.fragmentTracker.detectEvictedFragments(c.default.ElementaryStreamTypes.VIDEO, e.buffered), this.state = b.State.IDLE, this.fragPrevious = null
                                }, n.prototype.swapAudioCodec = function() {
                                    this.audioCodecSwap = !this.audioCodecSwap
                                }, n.prototype.computeLivePosition = function(e, t) {
                                    return e + Math.max(0, t.totalduration - (void 0 !== this.config.liveSyncDuration ? this.config.liveSyncDuration : this.config.liveSyncDurationCount * t.targetduration))
                                }, n.prototype._seekToStartPos = function() {
                                    var e = this.media,
                                        t = e.currentTime,
                                        n = e.seeking ? t : this.startPosition;
                                    t !== n && (g.logger.log("target start position not buffered, seek to buffered.start(0) " + n + " from current time " + t + " "), e.currentTime = n)
                                }, n.prototype._getAudioCodec = function(e) {
                                    var t = this.config.defaultAudioCodec || e.audioCodec;
                                    return this.audioCodecSwap && (g.logger.log("swapping playlist audio codec"), t && (t = -1 !== t.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5")), t
                                }, Object.defineProperty(n.prototype, "liveSyncPosition", {
                                    get: function() {
                                        return this._liveSyncPosition
                                    },
                                    set: function(e) {
                                        this._liveSyncPosition = e
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), n
                            }(b.default)
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/controller/subtitle-stream-controller.js": function(e, t, n) {
                        "use strict";
                        var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(e, t) {
                                e.__proto__ = t
                            } || function(e, t) {
                                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                            },
                            function(e, t) {
                                function n() {
                                    this.constructor = e
                                }
                                l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                            });
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var r = n("./src/events.js"),
                            s = n("./src/utils/logger.js"),
                            o = n("./src/crypt/decrypter.js"),
                            a = n("./src/utils/buffer-helper.js"),
                            u = n("./src/controller/fragment-finders.js"),
                            c = n("./src/controller/fragment-tracker.js"),
                            d = n("./src/controller/base-stream-controller.js"),
                            f = n("./src/controller/level-helper.js"),
                            p = window.performance;
                        t.SubtitleStreamController = function(e) {
                            function t(t, n) {
                                var l = e.call(this, t, r.default.MEDIA_ATTACHED, r.default.MEDIA_DETACHING, r.default.ERROR, r.default.KEY_LOADED, r.default.FRAG_LOADED, r.default.SUBTITLE_TRACKS_UPDATED, r.default.SUBTITLE_TRACK_SWITCH, r.default.SUBTITLE_TRACK_LOADED, r.default.SUBTITLE_FRAG_PROCESSED, r.default.LEVEL_UPDATED) || this;
                                return l.fragmentTracker = n, l.config = t.config, l.state = d.State.STOPPED, l.tracks = [], l.tracksBuffered = [], l.currentTrackId = -1, l.decrypter = new o.default(t, t.config), l.lastAVStart = 0, l._onMediaSeeking = l.onMediaSeeking.bind(l), l
                            }
                            return i(t, e), t.prototype.onSubtitleFragProcessed = function(e) {
                                var t = e.frag,
                                    n = e.success;
                                if (this.fragPrevious = t, this.state = d.State.IDLE, n) {
                                    var l = this.tracksBuffered[this.currentTrackId];
                                    if (l) {
                                        for (var i, r = t.start, s = 0; s < l.length; s++)
                                            if (r >= l[s].start && r <= l[s].end) {
                                                i = l[s];
                                                break
                                            }
                                        var o = t.start + t.duration;
                                        i ? i.end = o : l.push(i = {
                                            start: r,
                                            end: o
                                        })
                                    }
                                }
                            }, t.prototype.onMediaAttached = function(e) {
                                var t = e.media;
                                this.media = t, t.addEventListener("seeking", this._onMediaSeeking), this.state = d.State.IDLE
                            }, t.prototype.onMediaDetaching = function() {
                                this.media.removeEventListener("seeking", this._onMediaSeeking), this.media = null, this.state = d.State.STOPPED
                            }, t.prototype.onError = function(e) {
                                var t = e.frag;
                                t && "subtitle" === t.type && (this.state = d.State.IDLE)
                            }, t.prototype.onSubtitleTracksUpdated = function(e) {
                                var t = this;
                                s.logger.log("subtitle tracks updated"), this.tracksBuffered = [], this.tracks = e.subtitleTracks, this.tracks.forEach((function(e) {
                                    t.tracksBuffered[e.id] = []
                                }))
                            }, t.prototype.onSubtitleTrackSwitch = function(e) {
                                if (this.currentTrackId = e.id, this.tracks && -1 !== this.currentTrackId) {
                                    var t = this.tracks[this.currentTrackId];
                                    t && t.details && this.setInterval(500)
                                } else this.clearInterval()
                            }, t.prototype.onSubtitleTrackLoaded = function(e) {
                                var t = e.id,
                                    n = e.details,
                                    l = this.currentTrackId,
                                    i = this.tracks,
                                    r = i[l];
                                t >= i.length || t !== l || !r || (n.live && f.mergeSubtitlePlaylists(r.details, n, this.lastAVStart), r.details = n, this.setInterval(500))
                            }, t.prototype.onKeyLoaded = function() {
                                this.state === d.State.KEY_LOADING && (this.state = d.State.IDLE)
                            }, t.prototype.onFragLoaded = function(e) {
                                var t = this.fragCurrent,
                                    n = e.frag.decryptdata,
                                    l = e.frag,
                                    i = this.hls;
                                if (this.state === d.State.FRAG_LOADING && t && "subtitle" === e.frag.type && t.sn === e.frag.sn && e.payload.byteLength > 0 && n && n.key && "AES-128" === n.method) {
                                    var s = p.now();
                                    this.decrypter.decrypt(e.payload, n.key.buffer, n.iv.buffer, (function(e) {
                                        var t = p.now();
                                        i.trigger(r.default.FRAG_DECRYPTED, {
                                            frag: l,
                                            payload: e,
                                            stats: {
                                                tstart: s,
                                                tdecrypt: t
                                            }
                                        })
                                    }))
                                }
                            }, t.prototype.onLevelUpdated = function(e) {
                                var t = e.details.fragments;
                                this.lastAVStart = t.length ? t[0].start : 0
                            }, t.prototype.doTick = function() {
                                if (this.media) switch (this.state) {
                                    case d.State.IDLE:
                                        var e = this,
                                            t = e.config,
                                            n = e.currentTrackId,
                                            l = e.fragmentTracker,
                                            i = e.media,
                                            o = e.tracks;
                                        if (!o || !o[n] || !o[n].details) break;
                                        var f = t.maxBufferHole,
                                            p = t.maxFragLookUpTolerance,
                                            h = Math.min(t.maxBufferLength, t.maxMaxBufferLength),
                                            g = a.BufferHelper.bufferedInfo(this._getBuffered(), i.currentTime, f),
                                            m = g.end,
                                            v = o[n].details,
                                            y = v.fragments,
                                            b = y.length;
                                        if (g.len > h) return;
                                        var T = void 0,
                                            w = this.fragPrevious;
                                        m < y[b - 1].start + y[b - 1].duration ? (w && v.hasProgramDateTime && (T = u.findFragmentByPDT(y, w.endProgramDateTime, p)), T || (T = u.findFragmentByPTS(w, y, m, p))) : T = y[b - 1], T && T.encrypted ? (s.logger.log("Loading key for " + T.sn), this.state = d.State.KEY_LOADING, this.hls.trigger(r.default.KEY_LOADING, {
                                            frag: T
                                        })) : T && l.getState(T) === c.FragmentState.NOT_LOADED && (this.fragCurrent = T, this.state = d.State.FRAG_LOADING, this.hls.trigger(r.default.FRAG_LOADING, {
                                            frag: T
                                        }))
                                } else this.state = d.State.IDLE
                            }, t.prototype.stopLoad = function() {
                                this.lastAVStart = 0, e.prototype.stopLoad.call(this)
                            }, t.prototype._getBuffered = function() {
                                return this.tracksBuffered[this.currentTrackId] || []
                            }, t.prototype.onMediaSeeking = function() {
                                this.fragPrevious = null
                            }, t
                        }(d.default)
                    },
                    "./src/controller/subtitle-track-controller.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                    __proto__: []
                                }
                                instanceof Array && function(e, t) {
                                    e.__proto__ = t
                                } || function(e, t) {
                                    for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                                },
                                function(e, t) {
                                    function n() {
                                        this.constructor = e
                                    }
                                    l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                                });
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var r = n("./src/events.js"),
                                s = n("./src/event-handler.js"),
                                o = n("./src/utils/logger.js"),
                                a = n("./src/controller/level-helper.js");

                            function u(e) {
                                for (var t = [], n = 0; n < e.length; n++) {
                                    var l = e[n];
                                    "subtitles" === l.kind && l.label && t.push(e[n])
                                }
                                return t
                            }
                            t.default = function(t) {
                                function n(e) {
                                    var n = t.call(this, e, r.default.MEDIA_ATTACHED, r.default.MEDIA_DETACHING, r.default.MANIFEST_LOADED, r.default.SUBTITLE_TRACK_LOADED) || this;
                                    return n.tracks = [], n.trackId = -1, n.media = null, n.stopped = !0, n.subtitleDisplay = !0, n
                                }
                                return i(n, t), n.prototype.destroy = function() {
                                    s.default.prototype.destroy.call(this)
                                }, n.prototype.onMediaAttached = function(e) {
                                    var t = this;
                                    this.media = e.media, this.media && (this.queuedDefaultTrack && (this.subtitleTrack = this.queuedDefaultTrack, delete this.queuedDefaultTrack), this.trackChangeListener = this._onTextTracksChanged.bind(this), this.useTextTrackPolling = !(this.media.textTracks && "onchange" in this.media.textTracks), this.useTextTrackPolling ? this.subtitlePollingInterval = setInterval((function() {
                                        t.trackChangeListener()
                                    }), 500) : this.media.textTracks.addEventListener("change", this.trackChangeListener))
                                }, n.prototype.onMediaDetaching = function() {
                                    this.media && (this.useTextTrackPolling ? clearInterval(this.subtitlePollingInterval) : this.media.textTracks.removeEventListener("change", this.trackChangeListener), this.media = null)
                                }, n.prototype.onManifestLoaded = function(e) {
                                    var t = this,
                                        n = e.subtitles || [];
                                    this.tracks = n, this.hls.trigger(r.default.SUBTITLE_TRACKS_UPDATED, {
                                        subtitleTracks: n
                                    }), n.forEach((function(e) {
                                        e.default && (t.media ? t.subtitleTrack = e.id : t.queuedDefaultTrack = e.id)
                                    }))
                                }, n.prototype.onSubtitleTrackLoaded = function(e) {
                                    var t = this,
                                        n = e.id,
                                        l = e.details,
                                        i = this.trackId,
                                        r = this.tracks,
                                        s = r[i];
                                    if (n >= r.length || n !== i || !s || this.stopped) this._clearReloadTimer();
                                    else if (o.logger.log("subtitle track " + n + " loaded"), l.live) {
                                        var u = a.computeReloadInterval(s.details, l, e.stats.trequest);
                                        o.logger.log("Reloading live subtitle playlist in " + u + "ms"), this.timer = setTimeout((function() {
                                            t._loadCurrentTrack()
                                        }), u)
                                    } else this._clearReloadTimer()
                                }, n.prototype.startLoad = function() {
                                    this.stopped = !1, this._loadCurrentTrack()
                                }, n.prototype.stopLoad = function() {
                                    this.stopped = !0, this._clearReloadTimer()
                                }, Object.defineProperty(n.prototype, "subtitleTracks", {
                                    get: function() {
                                        return this.tracks
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), Object.defineProperty(n.prototype, "subtitleTrack", {
                                    get: function() {
                                        return this.trackId
                                    },
                                    set: function(e) {
                                        this.trackId !== e && (this._toggleTrackModes(e), this._setSubtitleTrackInternal(e))
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), n.prototype._clearReloadTimer = function() {
                                    this.timer && (clearTimeout(this.timer), this.timer = null)
                                }, n.prototype._loadCurrentTrack = function() {
                                    var e = this.trackId,
                                        t = this.hls,
                                        n = this.tracks[e];
                                    e < 0 || !n || n.details && !n.details.live || (o.logger.log("Loading subtitle track " + e), t.trigger(r.default.SUBTITLE_TRACK_LOADING, {
                                        url: n.url,
                                        id: e
                                    }))
                                }, n.prototype._toggleTrackModes = function(e) {
                                    var t = this.media,
                                        n = this.subtitleDisplay,
                                        l = this.trackId;
                                    if (t) {
                                        var i = u(t.textTracks);
                                        if (-1 === e)[].slice.call(i).forEach((function(e) {
                                            e.mode = "disabled"
                                        }));
                                        else {
                                            var r = i[l];
                                            r && (r.mode = "disabled")
                                        }
                                        var s = i[e];
                                        s && (s.mode = n ? "showing" : "hidden")
                                    }
                                }, n.prototype._setSubtitleTrackInternal = function(t) {
                                    var n = this.hls,
                                        l = this.tracks;
                                    !e.isFinite(t) || t < -1 || t >= l.length || (this.trackId = t, o.logger.log("Switching to subtitle track " + t), n.trigger(r.default.SUBTITLE_TRACK_SWITCH, {
                                        id: t
                                    }), this._loadCurrentTrack())
                                }, n.prototype._onTextTracksChanged = function() {
                                    if (this.media) {
                                        for (var e = -1, t = u(this.media.textTracks), n = 0; n < t.length; n++)
                                            if ("hidden" === t[n].mode) e = n;
                                            else if ("showing" === t[n].mode) {
                                            e = n;
                                            break
                                        }
                                        this.subtitleTrack = e
                                    }
                                }, n
                            }(s.default)
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/controller/timeline-controller.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                    __proto__: []
                                }
                                instanceof Array && function(e, t) {
                                    e.__proto__ = t
                                } || function(e, t) {
                                    for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                                },
                                function(e, t) {
                                    function n() {
                                        this.constructor = e
                                    }
                                    l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                                });
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var r = n("./src/events.js"),
                                s = n("./src/event-handler.js"),
                                o = n("./src/utils/cea-608-parser.js"),
                                a = n("./src/utils/output-filter.js"),
                                u = n("./src/utils/webvtt-parser.js"),
                                c = n("./src/utils/logger.js"),
                                d = n("./src/utils/texttrack-utils.js");

                            function f(e, t) {
                                return e && e.label === t.name && !(e.textTrack1 || e.textTrack2)
                            }
                            t.default = function(t) {
                                function n(e) {
                                    var n = t.call(this, e, r.default.MEDIA_ATTACHING, r.default.MEDIA_DETACHING, r.default.FRAG_PARSING_USERDATA, r.default.FRAG_DECRYPTED, r.default.MANIFEST_LOADING, r.default.MANIFEST_LOADED, r.default.FRAG_LOADED, r.default.LEVEL_SWITCHING, r.default.INIT_PTS_FOUND) || this;
                                    if (n.hls = e, n.config = e.config, n.enabled = !0, n.Cues = e.config.cueHandler, n.textTracks = [], n.tracks = [], n.unparsedVttFrags = [], n.initPTS = [], n.cueRanges = [], n.captionsTracks = {}, n.captionsProperties = {
                                            textTrack1: {
                                                label: n.config.captionsTextTrack1Label,
                                                languageCode: n.config.captionsTextTrack1LanguageCode
                                            },
                                            textTrack2: {
                                                label: n.config.captionsTextTrack2Label,
                                                languageCode: n.config.captionsTextTrack2LanguageCode
                                            }
                                        }, n.config.enableCEA708Captions) {
                                        var l = new a.default(n, "textTrack1"),
                                            i = new a.default(n, "textTrack2");
                                        n.cea608Parser = new o.default(0, l, i)
                                    }
                                    return n
                                }
                                return i(n, t), n.prototype.addCues = function(e, t, n, l) {
                                    for (var i, r, s = this.cueRanges, o = !1, a = s.length; a--;) {
                                        var u = s[a],
                                            c = (i = u[0], r = t, Math.min(u[1], n) - Math.max(i, r));
                                        if (c >= 0 && (u[0] = Math.min(u[0], t), u[1] = Math.max(u[1], n), o = !0, c / (n - t) > .5)) return
                                    }
                                    o || s.push([t, n]), this.Cues.newCue(this.captionsTracks[e], t, n, l)
                                }, n.prototype.onInitPtsFound = function(e) {
                                    var t = this;
                                    if ("main" === e.id && (this.initPTS[e.frag.cc] = e.initPTS), this.unparsedVttFrags.length) {
                                        var n = this.unparsedVttFrags;
                                        this.unparsedVttFrags = [], n.forEach((function(e) {
                                            t.onFragLoaded(e)
                                        }))
                                    }
                                }, n.prototype.getExistingTrack = function(e) {
                                    var t = this.media;
                                    if (t)
                                        for (var n = 0; n < t.textTracks.length; n++) {
                                            var l = t.textTracks[n];
                                            if (l[e]) return l
                                        }
                                    return null
                                }, n.prototype.createCaptionsTrack = function(e) {
                                    var t = this.captionsProperties[e],
                                        n = t.label,
                                        l = t.languageCode,
                                        i = this.captionsTracks;
                                    if (!i[e]) {
                                        var r = this.getExistingTrack(e);
                                        if (r) i[e] = r, d.clearCurrentCues(i[e]), d.sendAddTrackEvent(i[e], this.media);
                                        else {
                                            var s = this.createTextTrack("captions", n, l);
                                            s && (s[e] = !0, i[e] = s)
                                        }
                                    }
                                }, n.prototype.createTextTrack = function(e, t, n) {
                                    var l = this.media;
                                    if (l) return l.addTextTrack(e, t, n)
                                }, n.prototype.destroy = function() {
                                    s.default.prototype.destroy.call(this)
                                }, n.prototype.onMediaAttaching = function(e) {
                                    this.media = e.media, this._cleanTracks()
                                }, n.prototype.onMediaDetaching = function() {
                                    var e = this.captionsTracks;
                                    Object.keys(e).forEach((function(t) {
                                        d.clearCurrentCues(e[t]), delete e[t]
                                    }))
                                }, n.prototype.onManifestLoading = function() {
                                    this.lastSn = -1, this.prevCC = -1, this.vttCCs = {
                                        ccOffset: 0,
                                        presentationOffset: 0,
                                        0: {
                                            start: 0,
                                            prevCC: -1,
                                            new: !1
                                        }
                                    }, this._cleanTracks()
                                }, n.prototype._cleanTracks = function() {
                                    var e = this.media;
                                    if (e) {
                                        var t = e.textTracks;
                                        if (t)
                                            for (var n = 0; n < t.length; n++) d.clearCurrentCues(t[n])
                                    }
                                }, n.prototype.onManifestLoaded = function(e) {
                                    var t = this;
                                    if (this.textTracks = [], this.unparsedVttFrags = this.unparsedVttFrags || [], this.initPTS = [], this.cueRanges = [], this.config.enableWebVTT) {
                                        this.tracks = e.subtitles || [];
                                        var n = this.media ? this.media.textTracks : [];
                                        this.tracks.forEach((function(e, l) {
                                            var i;
                                            if (l < n.length) {
                                                for (var r = null, s = 0; s < n.length; s++)
                                                    if (f(n[s], e)) {
                                                        r = n[s];
                                                        break
                                                    }
                                                r && (i = r)
                                            }
                                            i || (i = t.createTextTrack("subtitles", e.name, e.lang)), i.mode = e.default ? t.hls.subtitleDisplay ? "showing" : "hidden" : "disabled", t.textTracks.push(i)
                                        }))
                                    }
                                }, n.prototype.onLevelSwitching = function() {
                                    this.enabled = "NONE" !== this.hls.currentLevel.closedCaptions
                                }, n.prototype.onFragLoaded = function(t) {
                                    var n = t.frag,
                                        l = t.payload;
                                    if ("main" === n.type) {
                                        var i = n.sn;
                                        if (i !== this.lastSn + 1) {
                                            var s = this.cea608Parser;
                                            s && s.reset()
                                        }
                                        this.lastSn = i
                                    } else if ("subtitle" === n.type)
                                        if (l.byteLength) {
                                            if (!e.isFinite(this.initPTS[n.cc])) return this.unparsedVttFrags.push(t), void(this.initPTS.length && this.hls.trigger(r.default.SUBTITLE_FRAG_PROCESSED, {
                                                success: !1,
                                                frag: n
                                            }));
                                            var o = n.decryptdata;
                                            null != o && null != o.key && "AES-128" === o.method || this._parseVTTs(n, l)
                                        } else this.hls.trigger(r.default.SUBTITLE_FRAG_PROCESSED, {
                                            success: !1,
                                            frag: n
                                        })
                                }, n.prototype._parseVTTs = function(e, t) {
                                    var n = this.vttCCs;
                                    n[e.cc] || (n[e.cc] = {
                                        start: e.start,
                                        prevCC: this.prevCC,
                                        new: !0
                                    }, this.prevCC = e.cc);
                                    var l = this.textTracks,
                                        i = this.hls;
                                    u.default.parse(t, this.initPTS[e.cc], n, e.cc, (function(t) {
                                        var n = l[e.level];
                                        "disabled" !== n.mode ? (t.forEach((function(e) {
                                            if (!n.cues.getCueById(e.id)) try {
                                                n.addCue(e)
                                            } catch (l) {
                                                var t = new window.TextTrackCue(e.startTime, e.endTime, e.text);
                                                t.id = e.id, n.addCue(t)
                                            }
                                        })), i.trigger(r.default.SUBTITLE_FRAG_PROCESSED, {
                                            success: !0,
                                            frag: e
                                        })) : i.trigger(r.default.SUBTITLE_FRAG_PROCESSED, {
                                            success: !1,
                                            frag: e
                                        })
                                    }), (function(t) {
                                        c.logger.log("Failed to parse VTT cue: " + t), i.trigger(r.default.SUBTITLE_FRAG_PROCESSED, {
                                            success: !1,
                                            frag: e
                                        })
                                    }))
                                }, n.prototype.onFragDecrypted = function(t) {
                                    var n = t.payload,
                                        l = t.frag;
                                    if ("subtitle" === l.type) {
                                        if (!e.isFinite(this.initPTS[l.cc])) return void this.unparsedVttFrags.push(t);
                                        this._parseVTTs(l, n)
                                    }
                                }, n.prototype.onFragParsingUserdata = function(e) {
                                    if (this.enabled && this.config.enableCEA708Captions)
                                        for (var t = 0; t < e.samples.length; t++) {
                                            var n = this.extractCea608Data(e.samples[t].bytes);
                                            this.cea608Parser.addData(e.samples[t].pts, n)
                                        }
                                }, n.prototype.extractCea608Data = function(e) {
                                    for (var t, n, l, i = 31 & e[0], r = 2, s = [], o = 0; o < i; o++) t = e[r++], n = 127 & e[r++], l = 127 & e[r++], 0 === n && 0 === l || 0 != (4 & t) && 0 == (3 & t) && (s.push(n), s.push(l));
                                    return s
                                }, n
                            }(s.default)
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/crypt/aes-crypto.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.default = function() {
                            function e(e, t) {
                                this.subtle = e, this.aesIV = t
                            }
                            return e.prototype.decrypt = function(e, t) {
                                return this.subtle.decrypt({
                                    name: "AES-CBC",
                                    iv: this.aesIV
                                }, t, e)
                            }, e
                        }()
                    },
                    "./src/crypt/aes-decryptor.js": function(e, t, n) {
                        "use strict";

                        function l(e) {
                            var t = e.byteLength,
                                n = t && new DataView(e).getUint8(t - 1);
                            return n ? e.slice(0, t - n) : e
                        }
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.removePadding = l, t.default = function() {
                            function e() {
                                this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], this.sBox = new Uint32Array(256), this.invSBox = new Uint32Array(256), this.key = new Uint32Array(0), this.initTable()
                            }
                            return e.prototype.uint8ArrayToUint32Array_ = function(e) {
                                for (var t = new DataView(e), n = new Uint32Array(4), l = 0; l < 4; l++) n[l] = t.getUint32(4 * l);
                                return n
                            }, e.prototype.initTable = function() {
                                var e = this.sBox,
                                    t = this.invSBox,
                                    n = this.subMix,
                                    l = n[0],
                                    i = n[1],
                                    r = n[2],
                                    s = n[3],
                                    o = this.invSubMix,
                                    a = o[0],
                                    u = o[1],
                                    c = o[2],
                                    d = o[3],
                                    f = new Uint32Array(256),
                                    p = 0,
                                    h = 0,
                                    g = 0;
                                for (g = 0; g < 256; g++) f[g] = g < 128 ? g << 1 : g << 1 ^ 283;
                                for (g = 0; g < 256; g++) {
                                    var m = h ^ h << 1 ^ h << 2 ^ h << 3 ^ h << 4;
                                    e[p] = m = m >>> 8 ^ 255 & m ^ 99, t[m] = p;
                                    var v = f[p],
                                        y = f[v],
                                        b = f[y],
                                        T = 257 * f[m] ^ 16843008 * m;
                                    l[p] = T << 24 | T >>> 8, i[p] = T << 16 | T >>> 16, r[p] = T << 8 | T >>> 24, s[p] = T, a[m] = (T = 16843009 * b ^ 65537 * y ^ 257 * v ^ 16843008 * p) << 24 | T >>> 8, u[m] = T << 16 | T >>> 16, c[m] = T << 8 | T >>> 24, d[m] = T, p ? (p = v ^ f[f[f[b ^ v]]], h ^= f[f[h]]) : p = h = 1
                                }
                            }, e.prototype.expandKey = function(e) {
                                for (var t = this.uint8ArrayToUint32Array_(e), n = !0, l = 0; l < t.length && n;) n = t[l] === this.key[l], l++;
                                if (!n) {
                                    this.key = t;
                                    var i = this.keySize = t.length;
                                    if (4 !== i && 6 !== i && 8 !== i) throw new Error("Invalid aes key size=" + i);
                                    var r, s, o, a, u = this.ksRows = 4 * (i + 6 + 1),
                                        c = this.keySchedule = new Uint32Array(u),
                                        d = this.invKeySchedule = new Uint32Array(u),
                                        f = this.sBox,
                                        p = this.rcon,
                                        h = this.invSubMix,
                                        g = h[0],
                                        m = h[1],
                                        v = h[2],
                                        y = h[3];
                                    for (r = 0; r < u; r++) r < i ? o = c[r] = t[r] : (a = o, r % i == 0 ? (a = f[(a = a << 8 | a >>> 24) >>> 24] << 24 | f[a >>> 16 & 255] << 16 | f[a >>> 8 & 255] << 8 | f[255 & a], a ^= p[r / i | 0] << 24) : i > 6 && r % i == 4 && (a = f[a >>> 24] << 24 | f[a >>> 16 & 255] << 16 | f[a >>> 8 & 255] << 8 | f[255 & a]), c[r] = o = (c[r - i] ^ a) >>> 0);
                                    for (s = 0; s < u; s++) r = u - s, a = 3 & s ? c[r] : c[r - 4], d[s] = s < 4 || r <= 4 ? a : g[f[a >>> 24]] ^ m[f[a >>> 16 & 255]] ^ v[f[a >>> 8 & 255]] ^ y[f[255 & a]], d[s] = d[s] >>> 0
                                }
                            }, e.prototype.networkToHostOrderSwap = function(e) {
                                return e << 24 | (65280 & e) << 8 | (16711680 & e) >> 8 | e >>> 24
                            }, e.prototype.decrypt = function(e, t, n, i) {
                                for (var r, s, o, a, u, c, d, f, p, h, g, m, v, y, b = this.keySize + 6, T = this.invKeySchedule, w = this.invSBox, S = this.invSubMix, E = S[0], _ = S[1], C = S[2], R = S[3], I = this.uint8ArrayToUint32Array_(n), k = I[0], A = I[1], P = I[2], x = I[3], D = new Int32Array(e), O = new Int32Array(D.length), L = this.networkToHostOrderSwap; t < D.length;) {
                                    for (p = L(D[t]), h = L(D[t + 1]), g = L(D[t + 2]), m = L(D[t + 3]), u = p ^ T[0], c = m ^ T[1], d = g ^ T[2], f = h ^ T[3], v = 4, y = 1; y < b; y++) s = E[c >>> 24] ^ _[d >> 16 & 255] ^ C[f >> 8 & 255] ^ R[255 & u] ^ T[v + 1], o = E[d >>> 24] ^ _[f >> 16 & 255] ^ C[u >> 8 & 255] ^ R[255 & c] ^ T[v + 2], a = E[f >>> 24] ^ _[u >> 16 & 255] ^ C[c >> 8 & 255] ^ R[255 & d] ^ T[v + 3], u = r = E[u >>> 24] ^ _[c >> 16 & 255] ^ C[d >> 8 & 255] ^ R[255 & f] ^ T[v], c = s, d = o, f = a, v += 4;
                                    r = w[u >>> 24] << 24 ^ w[c >> 16 & 255] << 16 ^ w[d >> 8 & 255] << 8 ^ w[255 & f] ^ T[v], s = w[c >>> 24] << 24 ^ w[d >> 16 & 255] << 16 ^ w[f >> 8 & 255] << 8 ^ w[255 & u] ^ T[v + 1], o = w[d >>> 24] << 24 ^ w[f >> 16 & 255] << 16 ^ w[u >> 8 & 255] << 8 ^ w[255 & c] ^ T[v + 2], a = w[f >>> 24] << 24 ^ w[u >> 16 & 255] << 16 ^ w[c >> 8 & 255] << 8 ^ w[255 & d] ^ T[v + 3], v += 3, O[t] = L(r ^ k), O[t + 1] = L(a ^ A), O[t + 2] = L(o ^ P), O[t + 3] = L(s ^ x), k = p, A = h, P = g, x = m, t += 4
                                }
                                return i ? l(O.buffer) : O.buffer
                            }, e.prototype.destroy = function() {
                                this.key = void 0, this.keySize = void 0, this.ksRows = void 0, this.sBox = void 0, this.invSBox = void 0, this.subMix = void 0, this.invSubMix = void 0, this.keySchedule = void 0, this.invKeySchedule = void 0, this.rcon = void 0
                            }, e
                        }()
                    },
                    "./src/crypt/decrypter.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/crypt/aes-crypto.js"),
                            i = n("./src/crypt/fast-aes-key.js"),
                            r = n("./src/crypt/aes-decryptor.js"),
                            s = n("./src/errors.js"),
                            o = n("./src/utils/logger.js"),
                            a = n("./src/events.js"),
                            u = n("./src/utils/get-self-scope.js").getSelfScope();
                        t.default = function() {
                            function e(e, t, n) {
                                var l = (void 0 === n ? {} : n).removePKCS7Padding,
                                    i = void 0 === l || l;
                                if (this.logEnabled = !0, this.observer = e, this.config = t, this.removePKCS7Padding = i, i) try {
                                    var r = u.crypto;
                                    r && (this.subtle = r.subtle || r.webkitSubtle)
                                } catch (s) {}
                                this.disableWebCrypto = !this.subtle
                            }
                            return e.prototype.isSync = function() {
                                return this.disableWebCrypto && this.config.enableSoftwareAES
                            }, e.prototype.decrypt = function(e, t, n, s) {
                                var a = this;
                                if (this.disableWebCrypto && this.config.enableSoftwareAES) {
                                    this.logEnabled && (o.logger.log("JS AES decrypt"), this.logEnabled = !1);
                                    var u = this.decryptor;
                                    u || (this.decryptor = u = new r.default), u.expandKey(t), s(u.decrypt(e, 0, n, this.removePKCS7Padding))
                                } else {
                                    this.logEnabled && (o.logger.log("WebCrypto AES decrypt"), this.logEnabled = !1);
                                    var c = this.subtle;
                                    this.key !== t && (this.key = t, this.fastAesKey = new i.default(c, t)), this.fastAesKey.expandKey().then((function(i) {
                                        new l.default(c, n).decrypt(e, i).catch((function(l) {
                                            a.onWebCryptoError(l, e, t, n, s)
                                        })).then((function(e) {
                                            s(e)
                                        }))
                                    })).catch((function(l) {
                                        a.onWebCryptoError(l, e, t, n, s)
                                    }))
                                }
                            }, e.prototype.onWebCryptoError = function(e, t, n, l, i) {
                                this.config.enableSoftwareAES ? (o.logger.log("WebCrypto Error, disable WebCrypto API"), this.disableWebCrypto = !0, this.logEnabled = !0, this.decrypt(t, n, l, i)) : (o.logger.error("decrypting error : " + e.message), this.observer.trigger(a.default.ERROR, {
                                    type: s.ErrorTypes.MEDIA_ERROR,
                                    details: s.ErrorDetails.FRAG_DECRYPT_ERROR,
                                    fatal: !0,
                                    reason: e.message
                                }))
                            }, e.prototype.destroy = function() {
                                var e = this.decryptor;
                                e && (e.destroy(), this.decryptor = void 0)
                            }, e
                        }()
                    },
                    "./src/crypt/fast-aes-key.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.default = function() {
                            function e(e, t) {
                                this.subtle = e, this.key = t
                            }
                            return e.prototype.expandKey = function() {
                                return this.subtle.importKey("raw", this.key, {
                                    name: "AES-CBC"
                                }, !1, ["encrypt", "decrypt"])
                            }, e
                        }()
                    },
                    "./src/demux/aacdemuxer.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var l = n("./src/demux/adts.js"),
                                i = n("./src/utils/logger.js"),
                                r = n("./src/demux/id3.js");
                            t.default = function() {
                                function t(e, t, n) {
                                    this.observer = e, this.config = n, this.remuxer = t
                                }
                                return t.prototype.resetInitSegment = function(e, t, n, l) {
                                    this._audioTrack = {
                                        container: "audio/adts",
                                        type: "audio",
                                        id: 0,
                                        sequenceNumber: 0,
                                        isAAC: !0,
                                        samples: [],
                                        len: 0,
                                        manifestCodec: t,
                                        duration: l,
                                        inputTimeScale: 9e4
                                    }
                                }, t.prototype.resetTimeStamp = function() {}, t.probe = function(e) {
                                    if (!e) return !1;
                                    for (var t = (r.default.getID3Data(e, 0) || []).length, n = e.length; t < n; t++)
                                        if (l.probe(e, t)) return i.logger.log("ADTS sync word found !"), !0;
                                    return !1
                                }, t.prototype.append = function(t, n, s, o) {
                                    for (var a = this._audioTrack, u = r.default.getID3Data(t, 0) || [], c = r.default.getTimeStamp(u), d = e.isFinite(c) ? 90 * c : 9e4 * n, f = 0, p = d, h = t.length, g = u.length, m = [{
                                            pts: p,
                                            dts: p,
                                            data: u
                                        }]; g < h - 1;)
                                        if (l.isHeader(t, g) && g + 5 < h) {
                                            l.initTrackConfig(a, this.observer, t, g, a.manifestCodec);
                                            var v = l.appendFrame(a, t, g, d, f);
                                            if (!v) {
                                                i.logger.log("Unable to parse AAC frame");
                                                break
                                            }
                                            g += v.length, p = v.sample.pts, f++
                                        } else r.default.isHeader(t, g) ? (u = r.default.getID3Data(t, g), m.push({
                                            pts: p,
                                            dts: p,
                                            data: u
                                        }), g += u.length) : g++;
                                    this.remuxer.remux(a, {
                                        samples: []
                                    }, {
                                        samples: m,
                                        inputTimeScale: 9e4
                                    }, {
                                        samples: []
                                    }, n, s, o)
                                }, t.prototype.destroy = function() {}, t
                            }()
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/demux/adts.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/utils/logger.js"),
                            i = n("./src/errors.js"),
                            r = n("./src/events.js");

                        function s(e, t, n, s) {
                            var o, a, u, c, d, f = navigator.userAgent.toLowerCase(),
                                p = s,
                                h = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                            if (o = 1 + ((192 & t[n + 2]) >>> 6), !((a = (60 & t[n + 2]) >>> 2) > h.length - 1)) return c = (1 & t[n + 2]) << 2, l.logger.log("manifest codec:" + s + ",ADTS data:type:" + o + ",sampleingIndex:" + a + "[" + h[a] + "Hz],channelConfig:" + (c |= (192 & t[n + 3]) >>> 6)), /firefox/i.test(f) ? a >= 6 ? (o = 5, d = new Array(4), u = a - 3) : (o = 2, d = new Array(2), u = a) : -1 !== f.indexOf("android") ? (o = 2, d = new Array(2), u = a) : (o = 5, d = new Array(4), s && (-1 !== s.indexOf("mp4a.40.29") || -1 !== s.indexOf("mp4a.40.5")) || !s && a >= 6 ? u = a - 3 : ((s && -1 !== s.indexOf("mp4a.40.2") && (a >= 6 && 1 === c || /vivaldi/i.test(f)) || !s && 1 === c) && (o = 2, d = new Array(2)), u = a)), d[0] = o << 3, d[0] |= (14 & a) >> 1, d[1] |= (1 & a) << 7, d[1] |= c << 3, 5 === o && (d[1] |= (14 & u) >> 1, d[2] = (1 & u) << 7, d[2] |= 8, d[3] = 0), {
                                config: d,
                                samplerate: h[a],
                                channelCount: c,
                                codec: "mp4a.40." + o,
                                manifestCodec: p
                            };
                            e.trigger(r.default.ERROR, {
                                type: i.ErrorTypes.MEDIA_ERROR,
                                details: i.ErrorDetails.FRAG_PARSING_ERROR,
                                fatal: !0,
                                reason: "invalid ADTS sampling index:" + a
                            })
                        }

                        function o(e, t) {
                            return 255 === e[t] && 240 == (246 & e[t + 1])
                        }

                        function a(e, t) {
                            return 1 & e[t + 1] ? 7 : 9
                        }

                        function u(e, t) {
                            return (3 & e[t + 3]) << 11 | e[t + 4] << 3 | (224 & e[t + 5]) >>> 5
                        }

                        function c(e) {
                            return 9216e4 / e
                        }

                        function d(e, t, n, l, i) {
                            var r, s, o = e.length;
                            if (r = a(e, t), s = u(e, t), (s -= r) > 0 && t + r + s <= o) return {
                                headerLength: r,
                                frameLength: s,
                                stamp: n + l * i
                            }
                        }
                        t.getAudioConfig = s, t.isHeaderPattern = o, t.getHeaderLength = a, t.getFullFrameLength = u, t.isHeader = function(e, t) {
                            return !!(t + 1 < e.length && o(e, t))
                        }, t.probe = function(e, t) {
                            if (t + 1 < e.length && o(e, t)) {
                                var n = a(e, t);
                                t + 5 < e.length && (n = u(e, t));
                                var l = t + n;
                                if (l === e.length || l + 1 < e.length && o(e, l)) return !0
                            }
                            return !1
                        }, t.initTrackConfig = function(e, t, n, i, r) {
                            if (!e.samplerate) {
                                var o = s(t, n, i, r);
                                e.config = o.config, e.samplerate = o.samplerate, e.channelCount = o.channelCount, e.codec = o.codec, e.manifestCodec = o.manifestCodec, l.logger.log("parsed codec:" + e.codec + ",rate:" + o.samplerate + ",nb channel:" + o.channelCount)
                            }
                        }, t.getFrameDuration = c, t.parseFrameHeader = d, t.appendFrame = function(e, t, n, l, i) {
                            var r = d(t, n, l, i, c(e.samplerate));
                            if (r) {
                                var s = r.stamp,
                                    o = r.headerLength,
                                    a = r.frameLength,
                                    u = {
                                        unit: t.subarray(n + o, n + o + a),
                                        pts: s,
                                        dts: s
                                    };
                                return e.samples.push(u), e.len += a, {
                                    sample: u,
                                    length: a + o
                                }
                            }
                        }
                    },
                    "./src/demux/demuxer-inline.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l, i = n("./src/events.js"),
                            r = n("./src/errors.js"),
                            s = n("./src/crypt/decrypter.js"),
                            o = n("./src/demux/aacdemuxer.js"),
                            a = n("./src/demux/mp4demuxer.js"),
                            u = n("./src/demux/tsdemuxer.js"),
                            c = n("./src/demux/mp3demuxer.js"),
                            d = n("./src/remux/mp4-remuxer.js"),
                            f = n("./src/remux/passthrough-remuxer.js"),
                            p = n("./src/utils/get-self-scope.js"),
                            h = n("./src/utils/logger.js"),
                            g = p.getSelfScope();
                        try {
                            l = g.performance.now.bind(g.performance)
                        } catch (m) {
                            h.logger.debug("Unable to use Performance API on this environment"), l = g.Date.now
                        }
                        t.default = function() {
                            function e(e, t, n, l) {
                                this.observer = e, this.typeSupported = t, this.config = n, this.vendor = l
                            }
                            return e.prototype.destroy = function() {
                                var e = this.demuxer;
                                e && e.destroy()
                            }, e.prototype.push = function(e, t, n, r, o, a, u, c, d, f, p, h) {
                                var g = this;
                                if (e.byteLength > 0 && null != t && null != t.key && "AES-128" === t.method) {
                                    var m = this.decrypter;
                                    null == m && (m = this.decrypter = new s.default(this.observer, this.config));
                                    var v = l();
                                    m.decrypt(e, t.key.buffer, t.iv.buffer, (function(e) {
                                        var s = l();
                                        g.observer.trigger(i.default.FRAG_DECRYPTED, {
                                            stats: {
                                                tstart: v,
                                                tdecrypt: s
                                            }
                                        }), g.pushDecrypted(new Uint8Array(e), t, new Uint8Array(n), r, o, a, u, c, d, f, p, h)
                                    }))
                                } else this.pushDecrypted(new Uint8Array(e), t, new Uint8Array(n), r, o, a, u, c, d, f, p, h)
                            }, e.prototype.pushDecrypted = function(e, t, n, l, s, p, h, g, m, v, y, b) {
                                var T = this.demuxer;
                                if (!T || (h || g) && !this.probe(e)) {
                                    for (var w = this.observer, S = this.typeSupported, E = this.config, _ = [{
                                            demux: u.default,
                                            remux: d.default
                                        }, {
                                            demux: a.default,
                                            remux: f.default
                                        }, {
                                            demux: o.default,
                                            remux: d.default
                                        }, {
                                            demux: c.default,
                                            remux: d.default
                                        }], C = 0, R = _.length; C < R; C++) {
                                        var I = _[C],
                                            k = I.demux.probe;
                                        if (k(e)) {
                                            var A = this.remuxer = new I.remux(w, E, S, this.vendor);
                                            T = new I.demux(w, A, E, S), this.probe = k;
                                            break
                                        }
                                    }
                                    if (!T) return void w.trigger(i.default.ERROR, {
                                        type: r.ErrorTypes.MEDIA_ERROR,
                                        details: r.ErrorDetails.FRAG_PARSING_ERROR,
                                        fatal: !0,
                                        reason: "no demux matching with content found"
                                    });
                                    this.demuxer = T
                                }
                                var P = this.remuxer;
                                (h || g) && (T.resetInitSegment(n, l, s, v), P.resetInitSegment()), h && (T.resetTimeStamp(b), P.resetTimeStamp(b)), "function" == typeof T.setDecryptData && T.setDecryptData(t), T.append(e, p, m, y)
                            }, e
                        }()
                    },
                    "./src/demux/demuxer-worker.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/demux/demuxer-inline.js"),
                            i = n("./src/events.js"),
                            r = n("./src/utils/logger.js"),
                            s = n("./node_modules/node-libs-browser/node_modules/events/events.js");
                        t.default = function(e) {
                            var t = new s.EventEmitter;
                            t.trigger = function(e) {
                                for (var n = [], l = 1; l < arguments.length; l++) n[l - 1] = arguments[l];
                                t.emit.apply(t, [e, e].concat(n))
                            }, t.off = function(e) {
                                for (var n = [], l = 1; l < arguments.length; l++) n[l - 1] = arguments[l];
                                t.removeListener.apply(t, [e].concat(n))
                            };
                            var n = function(t, n) {
                                e.postMessage({
                                    event: t,
                                    data: n
                                })
                            };
                            e.addEventListener("message", (function(i) {
                                var s = i.data;
                                switch (s.cmd) {
                                    case "init":
                                        var o = JSON.parse(s.config);
                                        e.demuxer = new l.default(t, s.typeSupported, o, s.vendor), r.enableLogs(o.debug), n("init", null);
                                        break;
                                    case "demux":
                                        e.demuxer.push(s.data, s.decryptdata, s.initSegment, s.audioCodec, s.videoCodec, s.timeOffset, s.discontinuity, s.trackSwitch, s.contiguous, s.duration, s.accurateTimeOffset, s.defaultInitPTS)
                                }
                            })), t.on(i.default.FRAG_DECRYPTED, n), t.on(i.default.FRAG_PARSING_INIT_SEGMENT, n), t.on(i.default.FRAG_PARSED, n), t.on(i.default.ERROR, n), t.on(i.default.FRAG_PARSING_METADATA, n), t.on(i.default.FRAG_PARSING_USERDATA, n), t.on(i.default.INIT_PTS_FOUND, n), t.on(i.default.FRAG_PARSING_DATA, (function(t, n) {
                                var l = [],
                                    i = {
                                        event: t,
                                        data: n
                                    };
                                n.data1 && (i.data1 = n.data1.buffer, l.push(n.data1.buffer), delete n.data1), n.data2 && (i.data2 = n.data2.buffer, l.push(n.data2.buffer), delete n.data2), e.postMessage(i, l)
                            }))
                        }
                    },
                    "./src/demux/demuxer.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var l = n("./node_modules/webworkify-webpack/index.js"),
                                i = n("./src/events.js"),
                                r = n("./src/demux/demuxer-inline.js"),
                                s = n("./src/utils/logger.js"),
                                o = n("./src/errors.js"),
                                a = n("./src/utils/mediasource-helper.js"),
                                u = n("./src/utils/get-self-scope.js"),
                                c = n("./src/observer.js"),
                                d = u.getSelfScope(),
                                f = a.getMediaSource();
                            t.default = function() {
                                function t(e, t) {
                                    var n = this;
                                    this.hls = e, this.id = t;
                                    var a = this.observer = new c.Observer,
                                        u = e.config,
                                        p = function(t, l) {
                                            (l = l || {}).frag = n.frag, l.id = n.id, e.trigger(t, l)
                                        };
                                    a.on(i.default.FRAG_DECRYPTED, p), a.on(i.default.FRAG_PARSING_INIT_SEGMENT, p), a.on(i.default.FRAG_PARSING_DATA, p), a.on(i.default.FRAG_PARSED, p), a.on(i.default.ERROR, p), a.on(i.default.FRAG_PARSING_METADATA, p), a.on(i.default.FRAG_PARSING_USERDATA, p), a.on(i.default.INIT_PTS_FOUND, p);
                                    var h = {
                                            mp4: f.isTypeSupported("video/mp4"),
                                            mpeg: f.isTypeSupported("audio/mpeg"),
                                            mp3: f.isTypeSupported('audio/mp4; codecs="mp3"')
                                        },
                                        g = navigator.vendor;
                                    if (u.enableWorker && "undefined" != typeof Worker) {
                                        s.logger.log("demuxing in webworker");
                                        var m = void 0;
                                        try {
                                            m = this.w = l("./src/demux/demuxer-worker.js"), this.onwmsg = this.onWorkerMessage.bind(this), m.addEventListener("message", this.onwmsg), m.onerror = function(t) {
                                                e.trigger(i.default.ERROR, {
                                                    type: o.ErrorTypes.OTHER_ERROR,
                                                    details: o.ErrorDetails.INTERNAL_EXCEPTION,
                                                    fatal: !0,
                                                    event: "demuxerWorker",
                                                    err: {
                                                        message: t.message + " (" + t.filename + ":" + t.lineno + ")"
                                                    }
                                                })
                                            }, m.postMessage({
                                                cmd: "init",
                                                typeSupported: h,
                                                vendor: g,
                                                id: t,
                                                config: JSON.stringify(u)
                                            })
                                        } catch (v) {
                                            s.logger.warn("Error in worker:", v), s.logger.error("Error while initializing DemuxerWorker, fallback on DemuxerInline"), m && d.URL.revokeObjectURL(m.objectURL), this.demuxer = new r.default(a, h, u, g), this.w = void 0
                                        }
                                    } else this.demuxer = new r.default(a, h, u, g)
                                }
                                return t.prototype.destroy = function() {
                                    var e = this.w;
                                    if (e) e.removeEventListener("message", this.onwmsg), e.terminate(), this.w = null;
                                    else {
                                        var t = this.demuxer;
                                        t && (t.destroy(), this.demuxer = null)
                                    }
                                    var n = this.observer;
                                    n && (n.removeAllListeners(), this.observer = null)
                                }, t.prototype.push = function(t, n, l, i, r, o, a, u) {
                                    var c = this.w,
                                        d = e.isFinite(r.startPTS) ? r.startPTS : r.start,
                                        f = r.decryptdata,
                                        p = this.frag,
                                        h = !(p && r.cc === p.cc),
                                        g = !(p && r.level === p.level),
                                        m = !g && p && r.sn === p.sn + 1;
                                    if (h && s.logger.log(this.id + ":discontinuity detected"), g && s.logger.log(this.id + ":switch detected"), this.frag = r, c) c.postMessage({
                                        cmd: "demux",
                                        data: t,
                                        decryptdata: f,
                                        initSegment: n,
                                        audioCodec: l,
                                        videoCodec: i,
                                        timeOffset: d,
                                        discontinuity: h,
                                        trackSwitch: g,
                                        contiguous: m,
                                        duration: o,
                                        accurateTimeOffset: a,
                                        defaultInitPTS: u
                                    }, t instanceof ArrayBuffer ? [t] : []);
                                    else {
                                        var v = this.demuxer;
                                        v && v.push(t, f, n, l, i, d, h, g, m, o, a, u)
                                    }
                                }, t.prototype.onWorkerMessage = function(e) {
                                    var t = e.data,
                                        n = this.hls;
                                    switch (t.event) {
                                        case "init":
                                            d.URL.revokeObjectURL(this.w.objectURL);
                                            break;
                                        case i.default.FRAG_PARSING_DATA:
                                            t.data.data1 = new Uint8Array(t.data1), t.data2 && (t.data.data2 = new Uint8Array(t.data2));
                                        default:
                                            t.data = t.data || {}, t.data.frag = this.frag, t.data.id = this.id, n.trigger(t.event, t.data)
                                    }
                                }, t
                            }()
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/demux/exp-golomb.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/utils/logger.js");
                        t.default = function() {
                            function e(e) {
                                this.data = e, this.bytesAvailable = e.byteLength, this.word = 0, this.bitsAvailable = 0
                            }
                            return e.prototype.loadWord = function() {
                                var e = this.data,
                                    t = this.bytesAvailable,
                                    n = e.byteLength - t,
                                    l = new Uint8Array(4),
                                    i = Math.min(4, t);
                                if (0 === i) throw new Error("no bytes available");
                                l.set(e.subarray(n, n + i)), this.word = new DataView(l.buffer).getUint32(0), this.bitsAvailable = 8 * i, this.bytesAvailable -= i
                            }, e.prototype.skipBits = function(e) {
                                var t;
                                this.bitsAvailable > e ? (this.word <<= e, this.bitsAvailable -= e) : (e -= this.bitsAvailable, e -= (t = e >> 3) >> 3, this.bytesAvailable -= t, this.loadWord(), this.word <<= e, this.bitsAvailable -= e)
                            }, e.prototype.readBits = function(e) {
                                var t = Math.min(this.bitsAvailable, e),
                                    n = this.word >>> 32 - t;
                                return e > 32 && l.logger.error("Cannot read more than 32 bits at a time"), this.bitsAvailable -= t, this.bitsAvailable > 0 ? this.word <<= t : this.bytesAvailable > 0 && this.loadWord(), (t = e - t) > 0 && this.bitsAvailable ? n << t | this.readBits(t) : n
                            }, e.prototype.skipLZ = function() {
                                var e;
                                for (e = 0; e < this.bitsAvailable; ++e)
                                    if (0 != (this.word & 2147483648 >>> e)) return this.word <<= e, this.bitsAvailable -= e, e;
                                return this.loadWord(), e + this.skipLZ()
                            }, e.prototype.skipUEG = function() {
                                this.skipBits(1 + this.skipLZ())
                            }, e.prototype.skipEG = function() {
                                this.skipBits(1 + this.skipLZ())
                            }, e.prototype.readUEG = function() {
                                var e = this.skipLZ();
                                return this.readBits(e + 1) - 1
                            }, e.prototype.readEG = function() {
                                var e = this.readUEG();
                                return 1 & e ? 1 + e >>> 1 : -1 * (e >>> 1)
                            }, e.prototype.readBoolean = function() {
                                return 1 === this.readBits(1)
                            }, e.prototype.readUByte = function() {
                                return this.readBits(8)
                            }, e.prototype.readUShort = function() {
                                return this.readBits(16)
                            }, e.prototype.readUInt = function() {
                                return this.readBits(32)
                            }, e.prototype.skipScalingList = function(e) {
                                var t, n = 8,
                                    l = 8;
                                for (t = 0; t < e; t++) 0 !== l && (l = (n + this.readEG() + 256) % 256), n = 0 === l ? n : l
                            }, e.prototype.readSPS = function() {
                                var e, t, n, l, i, r, s, o = 0,
                                    a = 0,
                                    u = 0,
                                    c = 0,
                                    d = this.readUByte.bind(this),
                                    f = this.readBits.bind(this),
                                    p = this.readUEG.bind(this),
                                    h = this.readBoolean.bind(this),
                                    g = this.skipBits.bind(this),
                                    m = this.skipEG.bind(this),
                                    v = this.skipUEG.bind(this),
                                    y = this.skipScalingList.bind(this);
                                if (d(), e = d(), f(5), g(3), d(), v(), 100 === e || 110 === e || 122 === e || 244 === e || 44 === e || 83 === e || 86 === e || 118 === e || 128 === e) {
                                    var b = p();
                                    if (3 === b && g(1), v(), v(), g(1), h())
                                        for (r = 3 !== b ? 8 : 12, s = 0; s < r; s++) h() && y(s < 6 ? 16 : 64)
                                }
                                v();
                                var T = p();
                                if (0 === T) p();
                                else if (1 === T)
                                    for (g(1), m(), m(), t = p(), s = 0; s < t; s++) m();
                                v(), g(1), n = p(), l = p(), 0 === (i = f(1)) && g(1), g(1), h() && (o = p(), a = p(), u = p(), c = p());
                                var w = [1, 1];
                                if (h() && h()) switch (d()) {
                                    case 1:
                                        w = [1, 1];
                                        break;
                                    case 2:
                                        w = [12, 11];
                                        break;
                                    case 3:
                                        w = [10, 11];
                                        break;
                                    case 4:
                                        w = [16, 11];
                                        break;
                                    case 5:
                                        w = [40, 33];
                                        break;
                                    case 6:
                                        w = [24, 11];
                                        break;
                                    case 7:
                                        w = [20, 11];
                                        break;
                                    case 8:
                                        w = [32, 11];
                                        break;
                                    case 9:
                                        w = [80, 33];
                                        break;
                                    case 10:
                                        w = [18, 11];
                                        break;
                                    case 11:
                                        w = [15, 11];
                                        break;
                                    case 12:
                                        w = [64, 33];
                                        break;
                                    case 13:
                                        w = [160, 99];
                                        break;
                                    case 14:
                                        w = [4, 3];
                                        break;
                                    case 15:
                                        w = [3, 2];
                                        break;
                                    case 16:
                                        w = [2, 1];
                                        break;
                                    case 255:
                                        w = [d() << 8 | d(), d() << 8 | d()]
                                }
                                return {
                                    width: Math.ceil(16 * (n + 1) - 2 * o - 2 * a),
                                    height: (2 - i) * (l + 1) * 16 - (i ? 2 : 4) * (u + c),
                                    pixelRatio: w
                                }
                            }, e.prototype.readSliceType = function() {
                                return this.readUByte(), this.readUEG(), this.readUEG()
                            }, e
                        }()
                    },
                    "./src/demux/id3.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = function() {
                            function e() {}
                            return e.isHeader = function(e, t) {
                                return t + 10 <= e.length && 73 === e[t] && 68 === e[t + 1] && 51 === e[t + 2] && e[t + 3] < 255 && e[t + 4] < 255 && e[t + 6] < 128 && e[t + 7] < 128 && e[t + 8] < 128 && e[t + 9] < 128
                            }, e.isFooter = function(e, t) {
                                return t + 10 <= e.length && 51 === e[t] && 68 === e[t + 1] && 73 === e[t + 2] && e[t + 3] < 255 && e[t + 4] < 255 && e[t + 6] < 128 && e[t + 7] < 128 && e[t + 8] < 128 && e[t + 9] < 128
                            }, e.getID3Data = function(t, n) {
                                for (var l = n, i = 0; e.isHeader(t, n);) i += 10, i += e._readSize(t, n + 6), e.isFooter(t, n + 10) && (i += 10), n += i;
                                if (i > 0) return t.subarray(l, l + i)
                            }, e._readSize = function(e, t) {
                                var n = 0;
                                return n = (127 & e[t]) << 21, n |= (127 & e[t + 1]) << 14, (n |= (127 & e[t + 2]) << 7) | 127 & e[t + 3]
                            }, e.getTimeStamp = function(t) {
                                for (var n = e.getID3Frames(t), l = 0; l < n.length; l++) {
                                    var i = n[l];
                                    if (e.isTimeStampFrame(i)) return e._readTimeStamp(i)
                                }
                            }, e.isTimeStampFrame = function(e) {
                                return e && "PRIV" === e.key && "com.apple.streaming.transportStreamTimestamp" === e.info
                            }, e._getFrameData = function(t) {
                                var n = String.fromCharCode(t[0], t[1], t[2], t[3]),
                                    l = e._readSize(t, 4);
                                return {
                                    type: n,
                                    size: l,
                                    data: t.subarray(10, 10 + l)
                                }
                            }, e.getID3Frames = function(t) {
                                for (var n = 0, l = []; e.isHeader(t, n);) {
                                    for (var i = e._readSize(t, n + 6), r = (n += 10) + i; n + 8 < r;) {
                                        var s = e._getFrameData(t.subarray(n)),
                                            o = e._decodeFrame(s);
                                        o && l.push(o), n += s.size + 10
                                    }
                                    e.isFooter(t, n) && (n += 10)
                                }
                                return l
                            }, e._decodeFrame = function(t) {
                                return "PRIV" === t.type ? e._decodePrivFrame(t) : "T" === t.type[0] ? e._decodeTextFrame(t) : "W" === t.type[0] ? e._decodeURLFrame(t) : void 0
                            }, e._readTimeStamp = function(e) {
                                if (8 === e.data.byteLength) {
                                    var t = new Uint8Array(e.data),
                                        n = (t[4] << 23) + (t[5] << 15) + (t[6] << 7) + t[7];
                                    return n /= 45, 1 & t[3] && (n += 47721858.84), Math.round(n)
                                }
                            }, e._decodePrivFrame = function(t) {
                                if (!(t.size < 2)) {
                                    var n = e._utf8ArrayToStr(t.data, !0),
                                        l = new Uint8Array(t.data.subarray(n.length + 1));
                                    return {
                                        key: t.type,
                                        info: n,
                                        data: l.buffer
                                    }
                                }
                            }, e._decodeTextFrame = function(t) {
                                if (!(t.size < 2)) {
                                    if ("TXXX" === t.type) {
                                        var n = 1,
                                            l = e._utf8ArrayToStr(t.data.subarray(n)),
                                            i = e._utf8ArrayToStr(t.data.subarray(n += l.length + 1));
                                        return {
                                            key: t.type,
                                            info: l,
                                            data: i
                                        }
                                    }
                                    var r = e._utf8ArrayToStr(t.data.subarray(1));
                                    return {
                                        key: t.type,
                                        data: r
                                    }
                                }
                            }, e._decodeURLFrame = function(t) {
                                if ("WXXX" === t.type) {
                                    if (t.size < 2) return;
                                    var n = 1,
                                        l = e._utf8ArrayToStr(t.data.subarray(n)),
                                        i = e._utf8ArrayToStr(t.data.subarray(n += l.length + 1));
                                    return {
                                        key: t.type,
                                        info: l,
                                        data: i
                                    }
                                }
                                var r = e._utf8ArrayToStr(t.data);
                                return {
                                    key: t.type,
                                    data: r
                                }
                            }, e._utf8ArrayToStr = function(e, t) {
                                void 0 === t && (t = !1);
                                for (var n, l, i, r = e.length, s = "", o = 0; o < r;) {
                                    if (0 === (n = e[o++]) && t) return s;
                                    if (0 !== n && 3 !== n) switch (n >> 4) {
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                        case 6:
                                        case 7:
                                            s += String.fromCharCode(n);
                                            break;
                                        case 12:
                                        case 13:
                                            l = e[o++], s += String.fromCharCode((31 & n) << 6 | 63 & l);
                                            break;
                                        case 14:
                                            l = e[o++], i = e[o++], s += String.fromCharCode((15 & n) << 12 | (63 & l) << 6 | (63 & i) << 0)
                                    }
                                }
                                return s
                            }, e
                        }();
                        t.utf8ArrayToStr = l._utf8ArrayToStr, t.default = l
                    },
                    "./src/demux/mp3demuxer.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/demux/id3.js"),
                            i = n("./src/utils/logger.js"),
                            r = n("./src/demux/mpegaudio.js");
                        t.default = function() {
                            function e(e, t, n) {
                                this.observer = e, this.config = n, this.remuxer = t
                            }
                            return e.prototype.resetInitSegment = function(e, t, n, l) {
                                this._audioTrack = {
                                    container: "audio/mpeg",
                                    type: "audio",
                                    id: -1,
                                    sequenceNumber: 0,
                                    isAAC: !1,
                                    samples: [],
                                    len: 0,
                                    manifestCodec: t,
                                    duration: l,
                                    inputTimeScale: 9e4
                                }
                            }, e.prototype.resetTimeStamp = function() {}, e.probe = function(e) {
                                var t, n, s = l.default.getID3Data(e, 0);
                                if (s && void 0 !== l.default.getTimeStamp(s))
                                    for (t = s.length, n = Math.min(e.length - 1, t + 100); t < n; t++)
                                        if (r.default.probe(e, t)) return i.logger.log("MPEG Audio sync word found !"), !0;
                                return !1
                            }, e.prototype.append = function(e, t, n, i) {
                                for (var s = l.default.getID3Data(e, 0), o = l.default.getTimeStamp(s), a = o ? 90 * o : 9e4 * t, u = s.length, c = e.length, d = 0, f = 0, p = this._audioTrack, h = [{
                                        pts: a,
                                        dts: a,
                                        data: s
                                    }]; u < c;)
                                    if (r.default.isHeader(e, u)) {
                                        var g = r.default.appendFrame(p, e, u, a, d);
                                        if (!g) break;
                                        u += g.length, f = g.sample.pts, d++
                                    } else l.default.isHeader(e, u) ? (s = l.default.getID3Data(e, u), h.push({
                                        pts: f,
                                        dts: f,
                                        data: s
                                    }), u += s.length) : u++;
                                this.remuxer.remux(p, {
                                    samples: []
                                }, {
                                    samples: h,
                                    inputTimeScale: 9e4
                                }, {
                                    samples: []
                                }, t, n, i)
                            }, e.prototype.destroy = function() {}, e
                        }()
                    },
                    "./src/demux/mp4demuxer.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/utils/logger.js"),
                            i = n("./src/events.js"),
                            r = Math.pow(2, 32) - 1;
                        t.default = function() {
                            function e(e, t) {
                                this.observer = e, this.remuxer = t
                            }
                            return e.prototype.resetTimeStamp = function(e) {
                                this.initPTS = e
                            }, e.prototype.resetInitSegment = function(t, n, l, r) {
                                if (t && t.byteLength) {
                                    var s = this.initData = e.parseInitSegment(t);
                                    null == n && (n = "mp4a.40.5"), null == l && (l = "avc1.42e01e");
                                    var o = {};
                                    s.audio && s.video ? o.audiovideo = {
                                        container: "video/mp4",
                                        codec: n + "," + l,
                                        initSegment: r ? t : null
                                    } : (s.audio && (o.audio = {
                                        container: "audio/mp4",
                                        codec: n,
                                        initSegment: r ? t : null
                                    }), s.video && (o.video = {
                                        container: "video/mp4",
                                        codec: l,
                                        initSegment: r ? t : null
                                    })), this.observer.trigger(i.default.FRAG_PARSING_INIT_SEGMENT, {
                                        tracks: o
                                    })
                                } else n && (this.audioCodec = n), l && (this.videoCodec = l)
                            }, e.probe = function(t) {
                                return e.findBox({
                                    data: t,
                                    start: 0,
                                    end: Math.min(t.length, 16384)
                                }, ["moof"]).length > 0
                            }, e.bin2str = function(e) {
                                return String.fromCharCode.apply(null, e)
                            }, e.readUint16 = function(e, t) {
                                e.data && (t += e.start, e = e.data);
                                var n = e[t] << 8 | e[t + 1];
                                return n < 0 ? 65536 + n : n
                            }, e.readUint32 = function(e, t) {
                                e.data && (t += e.start, e = e.data);
                                var n = e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3];
                                return n < 0 ? 4294967296 + n : n
                            }, e.writeUint32 = function(e, t, n) {
                                e.data && (t += e.start, e = e.data), e[t] = n >> 24, e[t + 1] = n >> 16 & 255, e[t + 2] = n >> 8 & 255, e[t + 3] = 255 & n
                            }, e.findBox = function(t, n) {
                                var l, i, r, s, o, a, u = [];
                                if (t.data ? (o = t.start, r = t.end, t = t.data) : (o = 0, r = t.byteLength), !n.length) return null;
                                for (l = o; l < r;) a = (i = e.readUint32(t, l)) > 1 ? l + i : r, e.bin2str(t.subarray(l + 4, l + 8)) === n[0] && (1 === n.length ? u.push({
                                    data: t,
                                    start: l + 8,
                                    end: a
                                }) : (s = e.findBox({
                                    data: t,
                                    start: l + 8,
                                    end: a
                                }, n.slice(1))).length && (u = u.concat(s))), l = a;
                                return u
                            }, e.parseSegmentIndex = function(t) {
                                var n, l = e.findBox(t, ["moov"])[0],
                                    i = l ? l.end : null,
                                    r = 0,
                                    s = e.findBox(t, ["sidx"]);
                                if (!s || !s[0]) return null;
                                n = [];
                                var o = (s = s[0]).data[0],
                                    a = e.readUint32(s, r = 0 === o ? 8 : 16);
                                r += 4, r += 0 === o ? 8 : 16;
                                var u = s.end + 0,
                                    c = e.readUint16(s, r += 2);
                                r += 2;
                                for (var d = 0; d < c; d++) {
                                    var f = r,
                                        p = e.readUint32(s, f);
                                    f += 4;
                                    var h = 2147483647 & p;
                                    if (1 == (2147483648 & p) >>> 31) return void console.warn("SIDX has hierarchical references (not supported)");
                                    var g = e.readUint32(s, f);
                                    f += 4, n.push({
                                        referenceSize: h,
                                        subsegmentDuration: g,
                                        info: {
                                            duration: g / a,
                                            start: u,
                                            end: u + h - 1
                                        }
                                    }), u += h, r = f += 4
                                }
                                return {
                                    earliestPresentationTime: 0,
                                    timescale: a,
                                    version: o,
                                    referencesCount: c,
                                    references: n,
                                    moovEndOffset: i
                                }
                            }, e.parseInitSegment = function(t) {
                                var n = [];
                                return e.findBox(t, ["moov", "trak"]).forEach((function(t) {
                                    var i = e.findBox(t, ["tkhd"])[0];
                                    if (i) {
                                        var r = i.data[i.start],
                                            s = 0 === r ? 12 : 20,
                                            o = e.readUint32(i, s),
                                            a = e.findBox(t, ["mdia", "mdhd"])[0];
                                        if (a) {
                                            var u = e.readUint32(a, s = 0 === (r = a.data[a.start]) ? 12 : 20),
                                                c = e.findBox(t, ["mdia", "hdlr"])[0];
                                            if (c) {
                                                var d = {
                                                    soun: "audio",
                                                    vide: "video"
                                                }[e.bin2str(c.data.subarray(c.start + 8, c.start + 12))];
                                                if (d) {
                                                    var f = e.findBox(t, ["mdia", "minf", "stbl", "stsd"]);
                                                    if (f.length) {
                                                        var p = e.bin2str((f = f[0]).data.subarray(f.start + 12, f.start + 16));
                                                        l.logger.log("MP4Demuxer:" + d + ":" + p + " found")
                                                    }
                                                    n[o] = {
                                                        timescale: u,
                                                        type: d
                                                    }, n[d] = {
                                                        timescale: u,
                                                        id: o
                                                    }
                                                }
                                            }
                                        }
                                    }
                                })), n
                            }, e.getStartDTS = function(t, n) {
                                var l, i, r;
                                return l = e.findBox(n, ["moof", "traf"]), i = [].concat.apply([], l.map((function(n) {
                                    return e.findBox(n, ["tfhd"]).map((function(l) {
                                        var i, r;
                                        return i = e.readUint32(l, 4), r = t[i].timescale || 9e4, e.findBox(n, ["tfdt"]).map((function(t) {
                                            var n, l;
                                            return n = t.data[t.start], l = e.readUint32(t, 4), 1 === n && (l *= Math.pow(2, 32), l += e.readUint32(t, 8)), l
                                        }))[0] / r
                                    }))
                                }))), r = Math.min.apply(null, i), isFinite(r) ? r : 0
                            }, e.offsetStartDTS = function(t, n, l) {
                                e.findBox(n, ["moof", "traf"]).map((function(n) {
                                    return e.findBox(n, ["tfhd"]).map((function(i) {
                                        var s = e.readUint32(i, 4),
                                            o = t[s].timescale || 9e4;
                                        e.findBox(n, ["tfdt"]).map((function(t) {
                                            var n = t.data[t.start],
                                                i = e.readUint32(t, 4);
                                            if (0 === n) e.writeUint32(t, 4, i - l * o);
                                            else {
                                                i *= Math.pow(2, 32), i += e.readUint32(t, 8), i -= l * o, i = Math.max(i, 0);
                                                var s = Math.floor(i / (r + 1)),
                                                    a = Math.floor(i % (r + 1));
                                                e.writeUint32(t, 4, s), e.writeUint32(t, 8, a)
                                            }
                                        }))
                                    }))
                                }))
                            }, e.prototype.append = function(t, n, l, r) {
                                var s = this.initData;
                                s || (this.resetInitSegment(t, this.audioCodec, this.videoCodec, !1), s = this.initData);
                                var o, a = this.initPTS;
                                if (void 0 === a) {
                                    var u = e.getStartDTS(s, t);
                                    this.initPTS = a = u - n, this.observer.trigger(i.default.INIT_PTS_FOUND, {
                                        initPTS: a
                                    })
                                }
                                e.offsetStartDTS(s, t, a), o = e.getStartDTS(s, t), this.remuxer.remux(s.audio, s.video, null, null, o, l, r, t)
                            }, e.prototype.destroy = function() {}, e
                        }()
                    },
                    "./src/demux/mpegaudio.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = {
                            BitratesMap: [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160],
                            SamplingRateMap: [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3],
                            SamplesCoefficients: [
                                [0, 72, 144, 12],
                                [0, 0, 0, 0],
                                [0, 72, 144, 12],
                                [0, 144, 144, 12]
                            ],
                            BytesInSlot: [0, 1, 1, 4],
                            appendFrame: function(e, t, n, l, i) {
                                if (!(n + 24 > t.length)) {
                                    var r = this.parseHeader(t, n);
                                    if (r && n + r.frameLength <= t.length) {
                                        var s = l + i * (9e4 * r.samplesPerFrame / r.sampleRate),
                                            o = {
                                                unit: t.subarray(n, n + r.frameLength),
                                                pts: s,
                                                dts: s
                                            };
                                        return e.config = [], e.channelCount = r.channelCount, e.samplerate = r.sampleRate, e.samples.push(o), e.len += r.frameLength, {
                                            sample: o,
                                            length: r.frameLength
                                        }
                                    }
                                }
                            },
                            parseHeader: function(e, t) {
                                var n = e[t + 1] >> 3 & 3,
                                    i = e[t + 1] >> 1 & 3,
                                    r = e[t + 2] >> 4 & 15,
                                    s = e[t + 2] >> 2 & 3;
                                if (1 !== n && 0 !== r && 15 !== r && 3 !== s) {
                                    var o = l.SamplingRateMap[3 * (3 === n ? 0 : 2 === n ? 1 : 2) + s],
                                        a = l.SamplesCoefficients[n][i],
                                        u = l.BytesInSlot[i],
                                        c = 8 * a * u;
                                    return {
                                        sampleRate: o,
                                        channelCount: e[t + 3] >> 6 == 3 ? 1 : 2,
                                        frameLength: parseInt(a * (1e3 * l.BitratesMap[14 * (3 === n ? 3 - i : 3 === i ? 3 : 4) + r - 1]) / o + (e[t + 2] >> 1 & 1), 10) * u,
                                        samplesPerFrame: c
                                    }
                                }
                            },
                            isHeaderPattern: function(e, t) {
                                return 255 === e[t] && 224 == (224 & e[t + 1]) && 0 != (6 & e[t + 1])
                            },
                            isHeader: function(e, t) {
                                return !!(t + 1 < e.length && this.isHeaderPattern(e, t))
                            },
                            probe: function(e, t) {
                                if (t + 1 < e.length && this.isHeaderPattern(e, t)) {
                                    var n = this.parseHeader(e, t),
                                        l = 4;
                                    n && n.frameLength && (l = n.frameLength);
                                    var i = t + l;
                                    if (i === e.length || i + 1 < e.length && this.isHeaderPattern(e, i)) return !0
                                }
                                return !1
                            }
                        };
                        t.default = l
                    },
                    "./src/demux/sample-aes.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/crypt/decrypter.js");
                        t.default = function() {
                            function e(e, t, n, i) {
                                this.decryptdata = n, this.discardEPB = i, this.decrypter = new l.default(e, t, {
                                    removePKCS7Padding: !1
                                })
                            }
                            return e.prototype.decryptBuffer = function(e, t) {
                                this.decrypter.decrypt(e, this.decryptdata.key.buffer, this.decryptdata.iv.buffer, t)
                            }, e.prototype.decryptAacSample = function(e, t, n, l) {
                                var i = e[t].unit,
                                    r = i.subarray(16, i.length - i.length % 16),
                                    s = r.buffer.slice(r.byteOffset, r.byteOffset + r.length),
                                    o = this;
                                this.decryptBuffer(s, (function(r) {
                                    r = new Uint8Array(r), i.set(r, 16), l || o.decryptAacSamples(e, t + 1, n)
                                }))
                            }, e.prototype.decryptAacSamples = function(e, t, n) {
                                for (;; t++) {
                                    if (t >= e.length) return void n();
                                    if (!(e[t].unit.length < 32)) {
                                        var l = this.decrypter.isSync();
                                        if (this.decryptAacSample(e, t, n, l), !l) return
                                    }
                                }
                            }, e.prototype.getAvcEncryptedData = function(e) {
                                for (var t = 16 * Math.floor((e.length - 48) / 160) + 16, n = new Int8Array(t), l = 0, i = 32; i <= e.length - 16; i += 160, l += 16) n.set(e.subarray(i, i + 16), l);
                                return n
                            }, e.prototype.getAvcDecryptedUnit = function(e, t) {
                                t = new Uint8Array(t);
                                for (var n = 0, l = 32; l <= e.length - 16; l += 160, n += 16) e.set(t.subarray(n, n + 16), l);
                                return e
                            }, e.prototype.decryptAvcSample = function(e, t, n, l, i, r) {
                                var s = this.discardEPB(i.data),
                                    o = this.getAvcEncryptedData(s),
                                    a = this;
                                this.decryptBuffer(o.buffer, (function(o) {
                                    i.data = a.getAvcDecryptedUnit(s, o), r || a.decryptAvcSamples(e, t, n + 1, l)
                                }))
                            }, e.prototype.decryptAvcSamples = function(e, t, n, l) {
                                for (;; t++, n = 0) {
                                    if (t >= e.length) return void l();
                                    for (var i = e[t].units; !(n >= i.length); n++) {
                                        var r = i[n];
                                        if (!(r.length <= 48 || 1 !== r.type && 5 !== r.type)) {
                                            var s = this.decrypter.isSync();
                                            if (this.decryptAvcSample(e, t, n, l, r, s), !s) return
                                        }
                                    }
                                }
                            }, e
                        }()
                    },
                    "./src/demux/tsdemuxer.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/demux/adts.js"),
                            i = n("./src/demux/mpegaudio.js"),
                            r = n("./src/events.js"),
                            s = n("./src/demux/exp-golomb.js"),
                            o = n("./src/demux/sample-aes.js"),
                            a = n("./src/utils/logger.js"),
                            u = n("./src/errors.js"),
                            c = {
                                video: 1,
                                audio: 2,
                                id3: 3,
                                text: 4
                            };
                        t.default = function() {
                            function e(e, t, n, l) {
                                this.observer = e, this.config = n, this.typeSupported = l, this.remuxer = t, this.sampleAes = null
                            }
                            return e.prototype.setDecryptData = function(e) {
                                this.sampleAes = null != e && null != e.key && "SAMPLE-AES" === e.method ? new o.default(this.observer, this.config, e, this.discardEPB) : null
                            }, e.probe = function(t) {
                                var n = e._syncOffset(t);
                                return !(n < 0 || (n && a.logger.warn("MPEG2-TS detected but first sync word found @ offset " + n + ", junk ahead ?"), 0))
                            }, e._syncOffset = function(e) {
                                for (var t = Math.min(1e3, e.length - 564), n = 0; n < t;) {
                                    if (71 === e[n] && 71 === e[n + 188] && 71 === e[n + 376]) return n;
                                    n++
                                }
                                return -1
                            }, e.createTrack = function(e, t) {
                                return {
                                    container: "video" === e || "audio" === e ? "video/mp2t" : void 0,
                                    type: e,
                                    id: c[e],
                                    pid: -1,
                                    inputTimeScale: 9e4,
                                    sequenceNumber: 0,
                                    samples: [],
                                    len: 0,
                                    dropped: "video" === e ? 0 : void 0,
                                    isAAC: "audio" === e || void 0,
                                    duration: "audio" === e ? t : void 0
                                }
                            }, e.prototype.resetInitSegment = function(t, n, l, i) {
                                this.pmtParsed = !1, this._pmtId = -1, this._avcTrack = e.createTrack("video", i), this._audioTrack = e.createTrack("audio", i), this._id3Track = e.createTrack("id3", i), this._txtTrack = e.createTrack("text", i), this.aacOverFlow = null, this.aacLastPTS = null, this.avcSample = null, this.audioCodec = n, this.videoCodec = l, this._duration = i
                            }, e.prototype.resetTimeStamp = function() {}, e.prototype.append = function(t, n, l, i) {
                                var s, o, c, d, f, p = t.length,
                                    h = !1;
                                this.contiguous = l;
                                var g = this.pmtParsed,
                                    m = this._avcTrack,
                                    v = this._audioTrack,
                                    y = this._id3Track,
                                    b = m.pid,
                                    T = v.pid,
                                    w = y.pid,
                                    S = this._pmtId,
                                    E = m.pesData,
                                    _ = v.pesData,
                                    C = y.pesData,
                                    R = this._parsePAT,
                                    I = this._parsePMT,
                                    k = this._parsePES,
                                    A = this._parseAVCPES.bind(this),
                                    P = this._parseAACPES.bind(this),
                                    x = this._parseMPEGPES.bind(this),
                                    D = this._parseID3PES.bind(this),
                                    O = e._syncOffset(t);
                                for (p -= (p + O) % 188, s = O; s < p; s += 188)
                                    if (71 === t[s]) {
                                        if (o = !!(64 & t[s + 1]), c = ((31 & t[s + 1]) << 8) + t[s + 2], (48 & t[s + 3]) >> 4 > 1) {
                                            if ((d = s + 5 + t[s + 4]) === s + 188) continue
                                        } else d = s + 4;
                                        switch (c) {
                                            case b:
                                                o && (E && (f = k(E)) && void 0 !== f.pts && A(f, !1), E = {
                                                    data: [],
                                                    size: 0
                                                }), E && (E.data.push(t.subarray(d, s + 188)), E.size += s + 188 - d);
                                                break;
                                            case T:
                                                o && (_ && (f = k(_)) && void 0 !== f.pts && (v.isAAC ? P(f) : x(f)), _ = {
                                                    data: [],
                                                    size: 0
                                                }), _ && (_.data.push(t.subarray(d, s + 188)), _.size += s + 188 - d);
                                                break;
                                            case w:
                                                o && (C && (f = k(C)) && void 0 !== f.pts && D(f), C = {
                                                    data: [],
                                                    size: 0
                                                }), C && (C.data.push(t.subarray(d, s + 188)), C.size += s + 188 - d);
                                                break;
                                            case 0:
                                                o && (d += t[d] + 1), S = this._pmtId = R(t, d);
                                                break;
                                            case S:
                                                o && (d += t[d] + 1);
                                                var L = I(t, d, !0 === this.typeSupported.mpeg || !0 === this.typeSupported.mp3, null != this.sampleAes);
                                                (b = L.avc) > 0 && (m.pid = b), (T = L.audio) > 0 && (v.pid = T, v.isAAC = L.isAAC), (w = L.id3) > 0 && (y.pid = w), h && !g && (a.logger.log("reparse from beginning"), h = !1, s = O - 188), g = this.pmtParsed = !0;
                                                break;
                                            case 17:
                                            case 8191:
                                                break;
                                            default:
                                                h = !0
                                        }
                                    } else this.observer.trigger(r.default.ERROR, {
                                        type: u.ErrorTypes.MEDIA_ERROR,
                                        details: u.ErrorDetails.FRAG_PARSING_ERROR,
                                        fatal: !1,
                                        reason: "TS packet did not start with 0x47"
                                    });
                                E && (f = k(E)) && void 0 !== f.pts ? (A(f, !0), m.pesData = null) : m.pesData = E, _ && (f = k(_)) && void 0 !== f.pts ? (v.isAAC ? P(f) : x(f), v.pesData = null) : (_ && _.size && a.logger.log("last AAC PES packet truncated,might overlap between fragments"), v.pesData = _), C && (f = k(C)) && void 0 !== f.pts ? (D(f), y.pesData = null) : y.pesData = C, null == this.sampleAes ? this.remuxer.remux(v, m, y, this._txtTrack, n, l, i) : this.decryptAndRemux(v, m, y, this._txtTrack, n, l, i)
                            }, e.prototype.decryptAndRemux = function(e, t, n, l, i, r, s) {
                                if (e.samples && e.isAAC) {
                                    var o = this;
                                    this.sampleAes.decryptAacSamples(e.samples, 0, (function() {
                                        o.decryptAndRemuxAvc(e, t, n, l, i, r, s)
                                    }))
                                } else this.decryptAndRemuxAvc(e, t, n, l, i, r, s)
                            }, e.prototype.decryptAndRemuxAvc = function(e, t, n, l, i, r, s) {
                                if (t.samples) {
                                    var o = this;
                                    this.sampleAes.decryptAvcSamples(t.samples, 0, 0, (function() {
                                        o.remuxer.remux(e, t, n, l, i, r, s)
                                    }))
                                } else this.remuxer.remux(e, t, n, l, i, r, s)
                            }, e.prototype.destroy = function() {
                                this._initPTS = this._initDTS = void 0, this._duration = 0
                            }, e.prototype._parsePAT = function(e, t) {
                                return (31 & e[t + 10]) << 8 | e[t + 11]
                            }, e.prototype._parsePMT = function(e, t, n, l) {
                                var i, r, s = {
                                    audio: -1,
                                    avc: -1,
                                    id3: -1,
                                    isAAC: !0
                                };
                                for (i = t + 3 + ((15 & e[t + 1]) << 8 | e[t + 2]) - 4, t += 12 + ((15 & e[t + 10]) << 8 | e[t + 11]); t < i;) {
                                    switch (r = (31 & e[t + 1]) << 8 | e[t + 2], e[t]) {
                                        case 207:
                                            if (!l) {
                                                a.logger.log("unkown stream type:" + e[t]);
                                                break
                                            }
                                        case 15:
                                            -1 === s.audio && (s.audio = r);
                                            break;
                                        case 21:
                                            -1 === s.id3 && (s.id3 = r);
                                            break;
                                        case 219:
                                            if (!l) {
                                                a.logger.log("unkown stream type:" + e[t]);
                                                break
                                            }
                                        case 27:
                                            -1 === s.avc && (s.avc = r);
                                            break;
                                        case 3:
                                        case 4:
                                            n ? -1 === s.audio && (s.audio = r, s.isAAC = !1) : a.logger.log("MPEG audio found, not supported in this browser for now");
                                            break;
                                        case 36:
                                            a.logger.warn("HEVC stream type found, not supported for now");
                                            break;
                                        default:
                                            a.logger.log("unkown stream type:" + e[t])
                                    }
                                    t += 5 + ((15 & e[t + 3]) << 8 | e[t + 4])
                                }
                                return s
                            }, e.prototype._parsePES = function(e) {
                                var t, n, l, i, r, s, o, u, c = 0,
                                    d = e.data;
                                if (!e || 0 === e.size) return null;
                                for (; d[0].length < 19 && d.length > 1;) {
                                    var f = new Uint8Array(d[0].length + d[1].length);
                                    f.set(d[0]), f.set(d[1], d[0].length), d[0] = f, d.splice(1, 1)
                                }
                                if (1 === ((t = d[0])[0] << 16) + (t[1] << 8) + t[2]) {
                                    if ((l = (t[4] << 8) + t[5]) && l > e.size - 6) return null;
                                    192 & (n = t[7]) && ((s = 536870912 * (14 & t[9]) + 4194304 * (255 & t[10]) + 16384 * (254 & t[11]) + 128 * (255 & t[12]) + (254 & t[13]) / 2) > 4294967295 && (s -= 8589934592), 64 & n ? ((o = 536870912 * (14 & t[14]) + 4194304 * (255 & t[15]) + 16384 * (254 & t[16]) + 128 * (255 & t[17]) + (254 & t[18]) / 2) > 4294967295 && (o -= 8589934592), s - o > 54e5 && (a.logger.warn(Math.round((s - o) / 9e4) + "s delta between PTS and DTS, align them"), s = o)) : o = s), e.size -= u = (i = t[8]) + 9, r = new Uint8Array(e.size);
                                    for (var p = 0, h = d.length; p < h; p++) {
                                        var g = (t = d[p]).byteLength;
                                        if (u) {
                                            if (u > g) {
                                                u -= g;
                                                continue
                                            }
                                            t = t.subarray(u), g -= u, u = 0
                                        }
                                        r.set(t, c), c += g
                                    }
                                    return l && (l -= i + 3), {
                                        data: r,
                                        pts: s,
                                        dts: o,
                                        len: l
                                    }
                                }
                                return null
                            }, e.prototype.pushAccesUnit = function(e, t) {
                                if (e.units.length && e.frame) {
                                    var n = t.samples,
                                        l = n.length;
                                    !this.config.forceKeyFrameOnDiscontinuity || !0 === e.key || t.sps && (l || this.contiguous) ? (e.id = l, n.push(e)) : t.dropped++
                                }
                                e.debug.length && a.logger.log(e.pts + "/" + e.dts + ":" + e.debug)
                            }, e.prototype._parseAVCPES = function(e, t) {
                                var n, l, i, r = this,
                                    o = this._avcTrack,
                                    a = this._parseAVCNALu(e.data),
                                    u = this.avcSample,
                                    c = !1,
                                    d = this.pushAccesUnit.bind(this),
                                    f = function(e, t, n, l) {
                                        return {
                                            key: e,
                                            pts: t,
                                            dts: n,
                                            units: [],
                                            debug: l
                                        }
                                    };
                                e.data = null, u && a.length && !o.audFound && (d(u, o), u = this.avcSample = f(!1, e.pts, e.dts, "")), a.forEach((function(t) {
                                    switch (t.type) {
                                        case 1:
                                            l = !0, u || (u = r.avcSample = f(!0, e.pts, e.dts, "")), u.frame = !0;
                                            var a = t.data;
                                            if (c && a.length > 4) {
                                                var p = new s.default(a).readSliceType();
                                                2 !== p && 4 !== p && 7 !== p && 9 !== p || (u.key = !0)
                                            }
                                            break;
                                        case 5:
                                            l = !0, u || (u = r.avcSample = f(!0, e.pts, e.dts, "")), u.key = !0, u.frame = !0;
                                            break;
                                        case 6:
                                            l = !0, (n = new s.default(r.discardEPB(t.data))).readUByte();
                                            for (var h = 0, g = 0, m = !1, v = 0; !m && n.bytesAvailable > 1;) {
                                                h = 0;
                                                do {
                                                    h += v = n.readUByte()
                                                } while (255 === v);
                                                g = 0;
                                                do {
                                                    g += v = n.readUByte()
                                                } while (255 === v);
                                                if (4 === h && 0 !== n.bytesAvailable) {
                                                    if (m = !0, 181 === n.readUByte() && 49 === n.readUShort() && 1195456820 === n.readUInt() && 3 === n.readUByte()) {
                                                        var y = n.readUByte(),
                                                            b = 31 & y,
                                                            T = [y, n.readUByte()];
                                                        for (i = 0; i < b; i++) T.push(n.readUByte()), T.push(n.readUByte()), T.push(n.readUByte());
                                                        r._insertSampleInOrder(r._txtTrack.samples, {
                                                            type: 3,
                                                            pts: e.pts,
                                                            bytes: T
                                                        })
                                                    }
                                                } else if (g < n.bytesAvailable)
                                                    for (i = 0; i < g; i++) n.readUByte()
                                            }
                                            break;
                                        case 7:
                                            if (l = !0, c = !0, !o.sps) {
                                                var w = (n = new s.default(t.data)).readSPS();
                                                o.width = w.width, o.height = w.height, o.pixelRatio = w.pixelRatio, o.sps = [t.data], o.duration = r._duration;
                                                var S = t.data.subarray(1, 4),
                                                    E = "avc1.";
                                                for (i = 0; i < 3; i++) {
                                                    var _ = S[i].toString(16);
                                                    _.length < 2 && (_ = "0" + _), E += _
                                                }
                                                o.codec = E
                                            }
                                            break;
                                        case 8:
                                            l = !0, o.pps || (o.pps = [t.data]);
                                            break;
                                        case 9:
                                            l = !1, o.audFound = !0, u && d(u, o), u = r.avcSample = f(!1, e.pts, e.dts, "");
                                            break;
                                        case 12:
                                            l = !1;
                                            break;
                                        default:
                                            l = !1, u && (u.debug += "unknown NAL " + t.type + " ")
                                    }
                                    u && l && u.units.push(t)
                                })), t && u && (d(u, o), this.avcSample = null)
                            }, e.prototype._insertSampleInOrder = function(e, t) {
                                var n = e.length;
                                if (n > 0) {
                                    if (t.pts >= e[n - 1].pts) e.push(t);
                                    else
                                        for (var l = n - 1; l >= 0; l--)
                                            if (t.pts < e[l].pts) {
                                                e.splice(l, 0, t);
                                                break
                                            }
                                } else e.push(t)
                            }, e.prototype._getLastNalUnit = function() {
                                var e, t = this.avcSample;
                                if (!t || 0 === t.units.length) {
                                    var n = this._avcTrack.samples;
                                    t = n[n.length - 1]
                                }
                                if (t) {
                                    var l = t.units;
                                    e = l[l.length - 1]
                                }
                                return e
                            }, e.prototype._parseAVCNALu = function(e) {
                                var t, n, l, i, r = 0,
                                    s = e.byteLength,
                                    o = this._avcTrack,
                                    a = o.naluState || 0,
                                    u = a,
                                    c = [],
                                    d = -1;
                                for (-1 === a && (d = 0, i = 31 & e[0], a = 0, r = 1); r < s;)
                                    if (t = e[r++], a)
                                        if (1 !== a)
                                            if (t)
                                                if (1 === t) {
                                                    var f, p;
                                                    d >= 0 ? (l = {
                                                        data: e.subarray(d, r - a - 1),
                                                        type: i
                                                    }, c.push(l)) : (f = this._getLastNalUnit()) && (u && r <= 4 - u && f.state && (f.data = f.data.subarray(0, f.data.byteLength - u)), (n = r - a - 1) > 0 && ((p = new Uint8Array(f.data.byteLength + n)).set(f.data, 0), p.set(e.subarray(0, n), f.data.byteLength), f.data = p)), r < s ? (d = r, i = 31 & e[r], a = 0) : a = -1
                                                } else a = 0;
                                else a = 3;
                                else a = t ? 0 : 2;
                                else a = t ? 0 : 1;
                                return d >= 0 && a >= 0 && (l = {
                                    data: e.subarray(d, s),
                                    type: i,
                                    state: a
                                }, c.push(l)), 0 === c.length && (f = this._getLastNalUnit()) && ((p = new Uint8Array(f.data.byteLength + e.byteLength)).set(f.data, 0), p.set(e, f.data.byteLength), f.data = p), o.naluState = a, c
                            }, e.prototype.discardEPB = function(e) {
                                for (var t, n, l = e.byteLength, i = [], r = 1; r < l - 2;) 0 === e[r] && 0 === e[r + 1] && 3 === e[r + 2] ? (i.push(r + 2), r += 2) : r++;
                                if (0 === i.length) return e;
                                t = l - i.length, n = new Uint8Array(t);
                                var s = 0;
                                for (r = 0; r < t; s++, r++) s === i[0] && (s++, i.shift()), n[r] = e[s];
                                return n
                            }, e.prototype._parseAACPES = function(e) {
                                var t, n, i, s, o, c = this._audioTrack,
                                    d = e.data,
                                    f = e.pts,
                                    p = this.aacOverFlow,
                                    h = this.aacLastPTS;
                                if (p) {
                                    var g = new Uint8Array(p.byteLength + d.byteLength);
                                    g.set(p, 0), g.set(d, p.byteLength), d = g
                                }
                                for (i = 0, o = d.length; i < o - 1 && !l.isHeader(d, i); i++);
                                if (i) {
                                    var m = void 0,
                                        v = void 0;
                                    if (i < o - 1 ? (m = "AAC PES did not start with ADTS header,offset:" + i, v = !1) : (m = "no ADTS header found in AAC PES", v = !0), a.logger.warn("parsing error:" + m), this.observer.trigger(r.default.ERROR, {
                                            type: u.ErrorTypes.MEDIA_ERROR,
                                            details: u.ErrorDetails.FRAG_PARSING_ERROR,
                                            fatal: v,
                                            reason: m
                                        }), v) return
                                }
                                if (l.initTrackConfig(c, this.observer, d, i, this.audioCodec), n = 0, t = l.getFrameDuration(c.samplerate), p && h) {
                                    var y = h + t;
                                    Math.abs(y - f) > 1 && (a.logger.log("AAC: align PTS for overlapping frames by " + Math.round((y - f) / 90)), f = y)
                                }
                                for (; i < o;)
                                    if (l.isHeader(d, i) && i + 5 < o) {
                                        var b = l.appendFrame(c, d, i, f, n);
                                        if (!b) break;
                                        i += b.length, s = b.sample.pts, n++
                                    } else i++;
                                p = i < o ? d.subarray(i, o) : null, this.aacOverFlow = p, this.aacLastPTS = s
                            }, e.prototype._parseMPEGPES = function(e) {
                                for (var t = e.data, n = t.length, l = 0, r = 0, s = e.pts; r < n;)
                                    if (i.default.isHeader(t, r)) {
                                        var o = i.default.appendFrame(this._audioTrack, t, r, s, l);
                                        if (!o) break;
                                        r += o.length, l++
                                    } else r++
                            }, e.prototype._parseID3PES = function(e) {
                                this._id3Track.samples.push(e)
                            }, e
                        }()
                    },
                    "./src/errors.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.ErrorTypes = {
                            NETWORK_ERROR: "networkError",
                            MEDIA_ERROR: "mediaError",
                            KEY_SYSTEM_ERROR: "keySystemError",
                            MUX_ERROR: "muxError",
                            OTHER_ERROR: "otherError"
                        }, t.ErrorDetails = {
                            KEY_SYSTEM_NO_KEYS: "keySystemNoKeys",
                            KEY_SYSTEM_NO_ACCESS: "keySystemNoAccess",
                            KEY_SYSTEM_NO_SESSION: "keySystemNoSession",
                            KEY_SYSTEM_LICENSE_REQUEST_FAILED: "keySystemLicenseRequestFailed",
                            MANIFEST_LOAD_ERROR: "manifestLoadError",
                            MANIFEST_LOAD_TIMEOUT: "manifestLoadTimeOut",
                            MANIFEST_PARSING_ERROR: "manifestParsingError",
                            MANIFEST_INCOMPATIBLE_CODECS_ERROR: "manifestIncompatibleCodecsError",
                            LEVEL_LOAD_ERROR: "levelLoadError",
                            LEVEL_LOAD_TIMEOUT: "levelLoadTimeOut",
                            LEVEL_SWITCH_ERROR: "levelSwitchError",
                            AUDIO_TRACK_LOAD_ERROR: "audioTrackLoadError",
                            AUDIO_TRACK_LOAD_TIMEOUT: "audioTrackLoadTimeOut",
                            FRAG_LOAD_ERROR: "fragLoadError",
                            FRAG_LOAD_TIMEOUT: "fragLoadTimeOut",
                            FRAG_DECRYPT_ERROR: "fragDecryptError",
                            FRAG_PARSING_ERROR: "fragParsingError",
                            REMUX_ALLOC_ERROR: "remuxAllocError",
                            KEY_LOAD_ERROR: "keyLoadError",
                            KEY_LOAD_TIMEOUT: "keyLoadTimeOut",
                            BUFFER_ADD_CODEC_ERROR: "bufferAddCodecError",
                            BUFFER_APPEND_ERROR: "bufferAppendError",
                            BUFFER_APPENDING_ERROR: "bufferAppendingError",
                            BUFFER_STALLED_ERROR: "bufferStalledError",
                            BUFFER_FULL_ERROR: "bufferFullError",
                            BUFFER_SEEK_OVER_HOLE: "bufferSeekOverHole",
                            BUFFER_NUDGE_ON_STALL: "bufferNudgeOnStall",
                            INTERNAL_EXCEPTION: "internalException"
                        }
                    },
                    "./src/event-handler.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/utils/logger.js"),
                            i = n("./src/errors.js"),
                            r = n("./src/events.js"),
                            s = {
                                hlsEventGeneric: !0,
                                hlsHandlerDestroying: !0,
                                hlsHandlerDestroyed: !0
                            };
                        t.default = function() {
                            function e(e) {
                                for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
                                this.hls = e, this.onEvent = this.onEvent.bind(this), this.handledEvents = t, this.useGenericHandler = !0, this.registerListeners()
                            }
                            return e.prototype.destroy = function() {
                                this.onHandlerDestroying(), this.unregisterListeners(), this.onHandlerDestroyed()
                            }, e.prototype.onHandlerDestroying = function() {}, e.prototype.onHandlerDestroyed = function() {}, e.prototype.isEventHandler = function() {
                                return "object" == typeof this.handledEvents && this.handledEvents.length && "function" == typeof this.onEvent
                            }, e.prototype.registerListeners = function() {
                                this.isEventHandler() && this.handledEvents.forEach((function(e) {
                                    if (s[e]) throw new Error("Forbidden event-name: " + e);
                                    this.hls.on(e, this.onEvent)
                                }), this)
                            }, e.prototype.unregisterListeners = function() {
                                this.isEventHandler() && this.handledEvents.forEach((function(e) {
                                    this.hls.off(e, this.onEvent)
                                }), this)
                            }, e.prototype.onEvent = function(e, t) {
                                this.onEventGeneric(e, t)
                            }, e.prototype.onEventGeneric = function(e, t) {
                                try {
                                    (function(e, t) {
                                        var n = "on" + e.replace("hls", "");
                                        if ("function" != typeof this[n]) throw new Error("Event " + e + " has no generic handler in this " + this.constructor.name + " class (tried " + n + ")");
                                        return this[n].bind(this, t)
                                    }).call(this, e, t).call()
                                } catch (n) {
                                    l.logger.error("An internal error happened while handling event " + e + '. Error message: "' + n.message + '". Here is a stacktrace:', n), this.hls.trigger(r.default.ERROR, {
                                        type: i.ErrorTypes.OTHER_ERROR,
                                        details: i.ErrorDetails.INTERNAL_EXCEPTION,
                                        fatal: !1,
                                        event: e,
                                        err: n
                                    })
                                }
                            }, e
                        }()
                    },
                    "./src/events.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.default = {
                            MEDIA_ATTACHING: "hlsMediaAttaching",
                            MEDIA_ATTACHED: "hlsMediaAttached",
                            MEDIA_DETACHING: "hlsMediaDetaching",
                            MEDIA_DETACHED: "hlsMediaDetached",
                            BUFFER_RESET: "hlsBufferReset",
                            BUFFER_CODECS: "hlsBufferCodecs",
                            BUFFER_CREATED: "hlsBufferCreated",
                            BUFFER_APPENDING: "hlsBufferAppending",
                            BUFFER_APPENDED: "hlsBufferAppended",
                            BUFFER_EOS: "hlsBufferEos",
                            BUFFER_FLUSHING: "hlsBufferFlushing",
                            BUFFER_FLUSHED: "hlsBufferFlushed",
                            MANIFEST_LOADING: "hlsManifestLoading",
                            MANIFEST_LOADED: "hlsManifestLoaded",
                            MANIFEST_PARSED: "hlsManifestParsed",
                            LEVEL_SWITCHING: "hlsLevelSwitching",
                            LEVEL_SWITCHED: "hlsLevelSwitched",
                            LEVEL_LOADING: "hlsLevelLoading",
                            LEVEL_LOADED: "hlsLevelLoaded",
                            LEVEL_UPDATED: "hlsLevelUpdated",
                            LEVEL_PTS_UPDATED: "hlsLevelPtsUpdated",
                            AUDIO_TRACKS_UPDATED: "hlsAudioTracksUpdated",
                            AUDIO_TRACK_SWITCHING: "hlsAudioTrackSwitching",
                            AUDIO_TRACK_SWITCHED: "hlsAudioTrackSwitched",
                            AUDIO_TRACK_LOADING: "hlsAudioTrackLoading",
                            AUDIO_TRACK_LOADED: "hlsAudioTrackLoaded",
                            SUBTITLE_TRACKS_UPDATED: "hlsSubtitleTracksUpdated",
                            SUBTITLE_TRACK_SWITCH: "hlsSubtitleTrackSwitch",
                            SUBTITLE_TRACK_LOADING: "hlsSubtitleTrackLoading",
                            SUBTITLE_TRACK_LOADED: "hlsSubtitleTrackLoaded",
                            SUBTITLE_FRAG_PROCESSED: "hlsSubtitleFragProcessed",
                            INIT_PTS_FOUND: "hlsInitPtsFound",
                            FRAG_LOADING: "hlsFragLoading",
                            FRAG_LOAD_PROGRESS: "hlsFragLoadProgress",
                            FRAG_LOAD_EMERGENCY_ABORTED: "hlsFragLoadEmergencyAborted",
                            FRAG_LOADED: "hlsFragLoaded",
                            FRAG_DECRYPTED: "hlsFragDecrypted",
                            FRAG_PARSING_INIT_SEGMENT: "hlsFragParsingInitSegment",
                            FRAG_PARSING_USERDATA: "hlsFragParsingUserdata",
                            FRAG_PARSING_METADATA: "hlsFragParsingMetadata",
                            FRAG_PARSING_DATA: "hlsFragParsingData",
                            FRAG_PARSED: "hlsFragParsed",
                            FRAG_BUFFERED: "hlsFragBuffered",
                            FRAG_CHANGED: "hlsFragChanged",
                            FPS_DROP: "hlsFpsDrop",
                            FPS_DROP_LEVEL_CAPPING: "hlsFpsDropLevelCapping",
                            ERROR: "hlsError",
                            DESTROYING: "hlsDestroying",
                            KEY_LOADING: "hlsKeyLoading",
                            KEY_LOADED: "hlsKeyLoaded",
                            STREAM_STATE_TRANSITION: "hlsStreamStateTransition"
                        }
                    },
                    "./src/hls.js": function(e, t, n) {
                        "use strict";
                        var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(e, t) {
                                e.__proto__ = t
                            } || function(e, t) {
                                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                            },
                            function(e, t) {
                                function n() {
                                    this.constructor = e
                                }
                                l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                            });
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var r = n("./node_modules/url-toolkit/src/url-toolkit.js"),
                            s = n("./src/errors.js"),
                            o = n("./src/loader/playlist-loader.js"),
                            a = n("./src/loader/fragment-loader.js"),
                            u = n("./src/loader/key-loader.js"),
                            c = n("./src/controller/fragment-tracker.js"),
                            d = n("./src/controller/stream-controller.js"),
                            f = n("./src/controller/level-controller.js"),
                            p = n("./src/controller/id3-track-controller.js"),
                            h = n("./src/is-supported.js"),
                            g = n("./src/utils/logger.js"),
                            m = n("./src/config.js"),
                            v = n("./src/events.js"),
                            y = n("./src/observer.js");
                        t.default = function(e) {
                            function t(n) {
                                void 0 === n && (n = {});
                                var l = e.call(this) || this,
                                    i = t.DefaultConfig;
                                if ((n.liveSyncDurationCount || n.liveMaxLatencyDurationCount) && (n.liveSyncDuration || n.liveMaxLatencyDuration)) throw new Error("Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration");
                                for (var r in i) r in n || (n[r] = i[r]);
                                if (void 0 !== n.liveMaxLatencyDurationCount && n.liveMaxLatencyDurationCount <= n.liveSyncDurationCount) throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be gt "liveSyncDurationCount"');
                                if (void 0 !== n.liveMaxLatencyDuration && (n.liveMaxLatencyDuration <= n.liveSyncDuration || void 0 === n.liveSyncDuration)) throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be gt "liveSyncDuration"');
                                g.enableLogs(n.debug), l.config = n, l._autoLevelCapping = -1;
                                var s = l.abrController = new n.abrController(l),
                                    h = new n.bufferController(l),
                                    m = new n.capLevelController(l),
                                    v = new n.fpsController(l),
                                    y = new o.default(l),
                                    b = new a.default(l),
                                    T = new u.default(l),
                                    w = new p.default(l),
                                    S = l.levelController = new f.default(l),
                                    E = new c.FragmentTracker(l),
                                    _ = [S, l.streamController = new d.default(l, E)],
                                    C = n.audioStreamController;
                                C && _.push(new C(l, E)), l.networkControllers = _;
                                var R = [y, b, T, s, h, m, v, w, E];
                                if (C = n.audioTrackController) {
                                    var I = new C(l);
                                    l.audioTrackController = I, R.push(I)
                                }
                                if (C = n.subtitleTrackController) {
                                    var k = new C(l);
                                    l.subtitleTrackController = k, _.push(k)
                                }
                                if (C = n.emeController) {
                                    var A = new C(l);
                                    l.emeController = A, R.push(A)
                                }
                                return (C = n.subtitleStreamController) && _.push(new C(l, E)), (C = n.timelineController) && R.push(new C(l)), l.coreComponents = R, l
                            }
                            return i(t, e), Object.defineProperty(t, "version", {
                                get: function() {
                                    return "0.12.4"
                                },
                                enumerable: !0,
                                configurable: !0
                            }), t.isSupported = function() {
                                return h.isSupported()
                            }, Object.defineProperty(t, "Events", {
                                get: function() {
                                    return v.default
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t, "ErrorTypes", {
                                get: function() {
                                    return s.ErrorTypes
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t, "ErrorDetails", {
                                get: function() {
                                    return s.ErrorDetails
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t, "DefaultConfig", {
                                get: function() {
                                    return t.defaultConfig ? t.defaultConfig : m.hlsDefaultConfig
                                },
                                set: function(e) {
                                    t.defaultConfig = e
                                },
                                enumerable: !0,
                                configurable: !0
                            }), t.prototype.destroy = function() {
                                g.logger.log("destroy"), this.trigger(v.default.DESTROYING), this.detachMedia(), this.coreComponents.concat(this.networkControllers).forEach((function(e) {
                                    e.destroy()
                                })), this.url = null, this.removeAllListeners(), this._autoLevelCapping = -1
                            }, t.prototype.attachMedia = function(e) {
                                g.logger.log("attachMedia"), this.media = e, this.trigger(v.default.MEDIA_ATTACHING, {
                                    media: e
                                })
                            }, t.prototype.detachMedia = function() {
                                g.logger.log("detachMedia"), this.trigger(v.default.MEDIA_DETACHING), this.media = null
                            }, t.prototype.loadSource = function(e) {
                                e = r.buildAbsoluteURL(window.location.href, e, {
                                    alwaysNormalize: !0
                                }), g.logger.log("loadSource:" + e), this.url = e, this.trigger(v.default.MANIFEST_LOADING, {
                                    url: e
                                })
                            }, t.prototype.startLoad = function(e) {
                                void 0 === e && (e = -1), g.logger.log("startLoad(" + e + ")"), this.networkControllers.forEach((function(t) {
                                    t.startLoad(e)
                                }))
                            }, t.prototype.stopLoad = function() {
                                g.logger.log("stopLoad"), this.networkControllers.forEach((function(e) {
                                    e.stopLoad()
                                }))
                            }, t.prototype.swapAudioCodec = function() {
                                g.logger.log("swapAudioCodec"), this.streamController.swapAudioCodec()
                            }, t.prototype.recoverMediaError = function() {
                                g.logger.log("recoverMediaError");
                                var e = this.media;
                                this.detachMedia(), this.attachMedia(e)
                            }, Object.defineProperty(t.prototype, "levels", {
                                get: function() {
                                    return this.levelController.levels
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "currentLevel", {
                                get: function() {
                                    return this.streamController.currentLevel
                                },
                                set: function(e) {
                                    g.logger.log("set currentLevel:" + e), this.loadLevel = e, this.streamController.immediateLevelSwitch()
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "nextLevel", {
                                get: function() {
                                    return this.streamController.nextLevel
                                },
                                set: function(e) {
                                    g.logger.log("set nextLevel:" + e), this.levelController.manualLevel = e, this.streamController.nextLevelSwitch()
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "loadLevel", {
                                get: function() {
                                    return this.levelController.level
                                },
                                set: function(e) {
                                    g.logger.log("set loadLevel:" + e), this.levelController.manualLevel = e
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "nextLoadLevel", {
                                get: function() {
                                    return this.levelController.nextLoadLevel
                                },
                                set: function(e) {
                                    this.levelController.nextLoadLevel = e
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "firstLevel", {
                                get: function() {
                                    return Math.max(this.levelController.firstLevel, this.minAutoLevel)
                                },
                                set: function(e) {
                                    g.logger.log("set firstLevel:" + e), this.levelController.firstLevel = e
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "startLevel", {
                                get: function() {
                                    return this.levelController.startLevel
                                },
                                set: function(e) {
                                    g.logger.log("set startLevel:" + e), -1 !== e && (e = Math.max(e, this.minAutoLevel)), this.levelController.startLevel = e
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "autoLevelCapping", {
                                get: function() {
                                    return this._autoLevelCapping
                                },
                                set: function(e) {
                                    g.logger.log("set autoLevelCapping:" + e), this._autoLevelCapping = e
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "autoLevelEnabled", {
                                get: function() {
                                    return -1 === this.levelController.manualLevel
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "manualLevel", {
                                get: function() {
                                    return this.levelController.manualLevel
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "minAutoLevel", {
                                get: function() {
                                    for (var e = this.levels, t = this.config.minAutoBitrate, n = e ? e.length : 0, l = 0; l < n; l++)
                                        if ((e[l].realBitrate ? Math.max(e[l].realBitrate, e[l].bitrate) : e[l].bitrate) > t) return l;
                                    return 0
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "maxAutoLevel", {
                                get: function() {
                                    var e = this.levels,
                                        t = this.autoLevelCapping;
                                    return -1 === t && e && e.length ? e.length - 1 : t
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "nextAutoLevel", {
                                get: function() {
                                    return Math.min(Math.max(this.abrController.nextAutoLevel, this.minAutoLevel), this.maxAutoLevel)
                                },
                                set: function(e) {
                                    this.abrController.nextAutoLevel = Math.max(this.minAutoLevel, e)
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "audioTracks", {
                                get: function() {
                                    var e = this.audioTrackController;
                                    return e ? e.audioTracks : []
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "audioTrack", {
                                get: function() {
                                    var e = this.audioTrackController;
                                    return e ? e.audioTrack : -1
                                },
                                set: function(e) {
                                    var t = this.audioTrackController;
                                    t && (t.audioTrack = e)
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "liveSyncPosition", {
                                get: function() {
                                    return this.streamController.liveSyncPosition
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "subtitleTracks", {
                                get: function() {
                                    var e = this.subtitleTrackController;
                                    return e ? e.subtitleTracks : []
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "subtitleTrack", {
                                get: function() {
                                    var e = this.subtitleTrackController;
                                    return e ? e.subtitleTrack : -1
                                },
                                set: function(e) {
                                    var t = this.subtitleTrackController;
                                    t && (t.subtitleTrack = e)
                                },
                                enumerable: !0,
                                configurable: !0
                            }), Object.defineProperty(t.prototype, "subtitleDisplay", {
                                get: function() {
                                    var e = this.subtitleTrackController;
                                    return !!e && e.subtitleDisplay
                                },
                                set: function(e) {
                                    var t = this.subtitleTrackController;
                                    t && (t.subtitleDisplay = e)
                                },
                                enumerable: !0,
                                configurable: !0
                            }), t
                        }(y.Observer)
                    },
                    "./src/is-supported.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/utils/mediasource-helper.js");
                        t.isSupported = function() {
                            var e = l.getMediaSource(),
                                t = window.SourceBuffer || window.WebKitSourceBuffer;
                            return !(!e || "function" != typeof e.isTypeSupported || !e.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"') || t && (!t.prototype || "function" != typeof t.prototype.appendBuffer || "function" != typeof t.prototype.remove))
                        }
                    },
                    "./src/loader/fragment-loader.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                    __proto__: []
                                }
                                instanceof Array && function(e, t) {
                                    e.__proto__ = t
                                } || function(e, t) {
                                    for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                                },
                                function(e, t) {
                                    function n() {
                                        this.constructor = e
                                    }
                                    l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                                });
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var r = n("./src/events.js"),
                                s = n("./src/event-handler.js"),
                                o = n("./src/errors.js"),
                                a = n("./src/utils/logger.js");
                            t.default = function(t) {
                                function n(e) {
                                    var n = t.call(this, e, r.default.FRAG_LOADING) || this;
                                    return n.loaders = {}, n
                                }
                                return i(n, t), n.prototype.destroy = function() {
                                    var e = this.loaders;
                                    for (var n in e) {
                                        var l = e[n];
                                        l && l.destroy()
                                    }
                                    this.loaders = {}, t.prototype.destroy.call(this)
                                }, n.prototype.onFragLoading = function(t) {
                                    var n = t.frag,
                                        l = n.type,
                                        i = this.loaders,
                                        r = this.hls.config,
                                        s = r.fLoader,
                                        o = r.loader;
                                    n.loaded = 0;
                                    var u, c, d, f = i[l];
                                    f && (a.logger.warn("abort previous fragment loader for type: " + l), f.abort()), f = i[l] = n.loader = r.fLoader ? new s(r) : new o(r), u = {
                                        url: n.url,
                                        frag: n,
                                        responseType: "arraybuffer",
                                        progressData: !1
                                    };
                                    var p = n.byteRangeStartOffset,
                                        h = n.byteRangeEndOffset;
                                    e.isFinite(p) && e.isFinite(h) && (u.rangeStart = p, u.rangeEnd = h), c = {
                                        timeout: r.fragLoadingTimeOut,
                                        maxRetry: 0,
                                        retryDelay: 0,
                                        maxRetryDelay: r.fragLoadingMaxRetryTimeout
                                    }, d = {
                                        onSuccess: this.loadsuccess.bind(this),
                                        onError: this.loaderror.bind(this),
                                        onTimeout: this.loadtimeout.bind(this),
                                        onProgress: this.loadprogress.bind(this)
                                    }, f.load(u, c, d)
                                }, n.prototype.loadsuccess = function(e, t, n, l) {
                                    void 0 === l && (l = null);
                                    var i = e.data,
                                        s = n.frag;
                                    s.loader = void 0, this.loaders[s.type] = void 0, this.hls.trigger(r.default.FRAG_LOADED, {
                                        payload: i,
                                        frag: s,
                                        stats: t,
                                        networkDetails: l
                                    })
                                }, n.prototype.loaderror = function(e, t, n) {
                                    void 0 === n && (n = null);
                                    var l = t.frag,
                                        i = l.loader;
                                    i && i.abort(), this.loaders[l.type] = void 0, this.hls.trigger(r.default.ERROR, {
                                        type: o.ErrorTypes.NETWORK_ERROR,
                                        details: o.ErrorDetails.FRAG_LOAD_ERROR,
                                        fatal: !1,
                                        frag: t.frag,
                                        response: e,
                                        networkDetails: n
                                    })
                                }, n.prototype.loadtimeout = function(e, t, n) {
                                    void 0 === n && (n = null);
                                    var l = t.frag,
                                        i = l.loader;
                                    i && i.abort(), this.loaders[l.type] = void 0, this.hls.trigger(r.default.ERROR, {
                                        type: o.ErrorTypes.NETWORK_ERROR,
                                        details: o.ErrorDetails.FRAG_LOAD_TIMEOUT,
                                        fatal: !1,
                                        frag: t.frag,
                                        networkDetails: n
                                    })
                                }, n.prototype.loadprogress = function(e, t, n, l) {
                                    void 0 === l && (l = null);
                                    var i = t.frag;
                                    i.loaded = e.loaded, this.hls.trigger(r.default.FRAG_LOAD_PROGRESS, {
                                        frag: i,
                                        stats: e,
                                        networkDetails: l
                                    })
                                }, n
                            }(s.default)
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/loader/fragment.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var l = n("./node_modules/url-toolkit/src/url-toolkit.js"),
                                i = n("./src/loader/level-key.js");
                            t.default = function() {
                                function t() {
                                    var e;
                                    this._url = null, this._byteRange = null, this._decryptdata = null, this.tagList = [], this.programDateTime = null, this.rawProgramDateTime = null, this._elementaryStreams = ((e = {})[t.ElementaryStreamTypes.AUDIO] = !1, e[t.ElementaryStreamTypes.VIDEO] = !1, e)
                                }
                                return Object.defineProperty(t, "ElementaryStreamTypes", {
                                    get: function() {
                                        return {
                                            AUDIO: "audio",
                                            VIDEO: "video"
                                        }
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), Object.defineProperty(t.prototype, "url", {
                                    get: function() {
                                        return !this._url && this.relurl && (this._url = l.buildAbsoluteURL(this.baseurl, this.relurl, {
                                            alwaysNormalize: !0
                                        })), this._url
                                    },
                                    set: function(e) {
                                        this._url = e
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), Object.defineProperty(t.prototype, "byteRange", {
                                    get: function() {
                                        if (!this._byteRange && !this.rawByteRange) return [];
                                        if (this._byteRange) return this._byteRange;
                                        var e = [];
                                        if (this.rawByteRange) {
                                            var t = this.rawByteRange.split("@", 2);
                                            e[0] = 1 === t.length ? this.lastByteRangeEndOffset || 0 : parseInt(t[1]), e[1] = parseInt(t[0]) + e[0], this._byteRange = e
                                        }
                                        return e
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), Object.defineProperty(t.prototype, "byteRangeStartOffset", {
                                    get: function() {
                                        return this.byteRange[0]
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), Object.defineProperty(t.prototype, "byteRangeEndOffset", {
                                    get: function() {
                                        return this.byteRange[1]
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), Object.defineProperty(t.prototype, "decryptdata", {
                                    get: function() {
                                        return this._decryptdata || (this._decryptdata = this.fragmentDecryptdataFromLevelkey(this.levelkey, this.sn)), this._decryptdata
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), Object.defineProperty(t.prototype, "endProgramDateTime", {
                                    get: function() {
                                        if (!e.isFinite(this.programDateTime)) return null;
                                        var t = e.isFinite(this.duration) ? this.duration : 0;
                                        return this.programDateTime + 1e3 * t
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), Object.defineProperty(t.prototype, "encrypted", {
                                    get: function() {
                                        return !(!this.decryptdata || null === this.decryptdata.uri || null !== this.decryptdata.key)
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), t.prototype.addElementaryStream = function(e) {
                                    this._elementaryStreams[e] = !0
                                }, t.prototype.hasElementaryStream = function(e) {
                                    return !0 === this._elementaryStreams[e]
                                }, t.prototype.createInitializationVector = function(e) {
                                    for (var t = new Uint8Array(16), n = 12; n < 16; n++) t[n] = e >> 8 * (15 - n) & 255;
                                    return t
                                }, t.prototype.fragmentDecryptdataFromLevelkey = function(e, t) {
                                    var n = e;
                                    return e && e.method && e.uri && !e.iv && ((n = new i.default).method = e.method, n.baseuri = e.baseuri, n.reluri = e.reluri, n.iv = this.createInitializationVector(t)), n
                                }, t
                            }()
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/loader/key-loader.js": function(e, t, n) {
                        "use strict";
                        var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(e, t) {
                                e.__proto__ = t
                            } || function(e, t) {
                                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                            },
                            function(e, t) {
                                function n() {
                                    this.constructor = e
                                }
                                l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                            });
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var r = n("./src/events.js"),
                            s = n("./src/event-handler.js"),
                            o = n("./src/errors.js"),
                            a = n("./src/utils/logger.js");
                        t.default = function(e) {
                            function t(t) {
                                var n = e.call(this, t, r.default.KEY_LOADING) || this;
                                return n.loaders = {}, n.decryptkey = null, n.decrypturl = null, n
                            }
                            return i(t, e), t.prototype.destroy = function() {
                                for (var e in this.loaders) {
                                    var t = this.loaders[e];
                                    t && t.destroy()
                                }
                                this.loaders = {}, s.default.prototype.destroy.call(this)
                            }, t.prototype.onKeyLoading = function(e) {
                                var t = e.frag,
                                    n = t.type,
                                    l = this.loaders[n],
                                    i = t.decryptdata,
                                    s = i.uri;
                                if (s !== this.decrypturl || null === this.decryptkey) {
                                    var o, u, c, d = this.hls.config;
                                    l && (a.logger.warn("abort previous key loader for type:" + n), l.abort()), t.loader = this.loaders[n] = new d.loader(d), this.decrypturl = s, this.decryptkey = null, o = {
                                        url: s,
                                        frag: t,
                                        responseType: "arraybuffer"
                                    }, u = {
                                        timeout: d.fragLoadingTimeOut,
                                        maxRetry: 0,
                                        retryDelay: d.fragLoadingRetryDelay,
                                        maxRetryDelay: d.fragLoadingMaxRetryTimeout
                                    }, c = {
                                        onSuccess: this.loadsuccess.bind(this),
                                        onError: this.loaderror.bind(this),
                                        onTimeout: this.loadtimeout.bind(this)
                                    }, t.loader.load(o, u, c)
                                } else this.decryptkey && (i.key = this.decryptkey, this.hls.trigger(r.default.KEY_LOADED, {
                                    frag: t
                                }))
                            }, t.prototype.loadsuccess = function(e, t, n) {
                                var l = n.frag;
                                this.decryptkey = l.decryptdata.key = new Uint8Array(e.data), l.loader = void 0, this.loaders[l.type] = void 0, this.hls.trigger(r.default.KEY_LOADED, {
                                    frag: l
                                })
                            }, t.prototype.loaderror = function(e, t) {
                                var n = t.frag,
                                    l = n.loader;
                                l && l.abort(), this.loaders[t.type] = void 0, this.hls.trigger(r.default.ERROR, {
                                    type: o.ErrorTypes.NETWORK_ERROR,
                                    details: o.ErrorDetails.KEY_LOAD_ERROR,
                                    fatal: !1,
                                    frag: n,
                                    response: e
                                })
                            }, t.prototype.loadtimeout = function(e, t) {
                                var n = t.frag,
                                    l = n.loader;
                                l && l.abort(), this.loaders[t.type] = void 0, this.hls.trigger(r.default.ERROR, {
                                    type: o.ErrorTypes.NETWORK_ERROR,
                                    details: o.ErrorDetails.KEY_LOAD_TIMEOUT,
                                    fatal: !1,
                                    frag: n
                                })
                            }, t
                        }(s.default)
                    },
                    "./src/loader/level-key.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./node_modules/url-toolkit/src/url-toolkit.js");
                        t.default = function() {
                            function e() {
                                this.method = null, this.key = null, this.iv = null, this._uri = null
                            }
                            return Object.defineProperty(e.prototype, "uri", {
                                get: function() {
                                    return !this._uri && this.reluri && (this._uri = l.buildAbsoluteURL(this.baseuri, this.reluri, {
                                        alwaysNormalize: !0
                                    })), this._uri
                                },
                                enumerable: !0,
                                configurable: !0
                            }), e
                        }()
                    },
                    "./src/loader/level.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.default = function() {
                                function t(e) {
                                    this.endCC = 0, this.endSN = 0, this.fragments = [], this.initSegment = null, this.live = !0, this.needSidxRanges = !1, this.startCC = 0, this.startSN = 0, this.startTimeOffset = null, this.targetduration = 0, this.totalduration = 0, this.type = null, this.url = e, this.version = null
                                }
                                return Object.defineProperty(t.prototype, "hasProgramDateTime", {
                                    get: function() {
                                        return !(!this.fragments[0] || !e.isFinite(this.fragments[0].programDateTime))
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), t
                            }()
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/loader/m3u8-parser.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var l = n("./node_modules/url-toolkit/src/url-toolkit.js"),
                                i = n("./src/loader/fragment.js"),
                                r = n("./src/loader/level.js"),
                                s = n("./src/loader/level-key.js"),
                                o = n("./src/utils/attr-list.js"),
                                a = n("./src/utils/logger.js"),
                                u = n("./src/utils/codecs.js"),
                                c = /#EXT-X-STREAM-INF:([^\n\r]*)[\r\n]+([^\r\n]+)/g,
                                d = /#EXT-X-MEDIA:(.*)/g,
                                f = new RegExp([/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, /|(?!#)([\S+ ?]+)/.source, /|#EXT-X-BYTERANGE:*(.+)/.source, /|#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, /|#.*/.source].join(""), "g"),
                                p = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE): *(\d+))|(?:#EXT-X-(TARGETDURATION): *(\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DISCONTINUITY-SEQ)UENCE:(\d+))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(VERSION):(\d+))|(?:#EXT-X-(MAP):(.+))|(?:(#)([^:]*):(.*))|(?:(#)(.*))(?:.*)\r?\n?/,
                                h = /\.(mp4|m4s|m4v|m4a)$/i;

                            function g(t, n) {
                                t.rawProgramDateTime ? t.programDateTime = Date.parse(t.rawProgramDateTime) : n && n.programDateTime && (t.programDateTime = n.endProgramDateTime), e.isFinite(t.programDateTime) || (t.programDateTime = null, t.rawProgramDateTime = null)
                            }
                            t.default = function() {
                                function t() {}
                                return t.findGroup = function(e, t) {
                                    if (!e) return null;
                                    for (var n = null, l = 0; l < e.length; l++) {
                                        var i = e[l];
                                        i.id === t && (n = i)
                                    }
                                    return n
                                }, t.convertAVC1ToAVCOTI = function(e) {
                                    var t, n = e.split(".");
                                    return n.length > 2 ? (t = n.shift() + ".", t += parseInt(n.shift()).toString(16), t += ("000" + parseInt(n.shift()).toString(16)).substr(-4)) : t = e, t
                                }, t.resolve = function(e, t) {
                                    return l.buildAbsoluteURL(t, e, {
                                        alwaysNormalize: !0
                                    })
                                }, t.parseMasterPlaylist = function(e, n) {
                                    var l, i = [];

                                    function r(e, t) {
                                        ["video", "audio"].forEach((function(n) {
                                            var l = e.filter((function(e) {
                                                return u.isCodecType(e, n)
                                            }));
                                            if (l.length) {
                                                var i = l.filter((function(e) {
                                                    return 0 === e.lastIndexOf("avc1", 0) || 0 === e.lastIndexOf("mp4a", 0)
                                                }));
                                                t[n + "Codec"] = i.length > 0 ? i[0] : l[0], e = e.filter((function(e) {
                                                    return -1 === l.indexOf(e)
                                                }))
                                            }
                                        })), t.unknownCodecs = e
                                    }
                                    for (c.lastIndex = 0; null != (l = c.exec(e));) {
                                        var s = {},
                                            a = s.attrs = new o.default(l[1]);
                                        s.url = t.resolve(l[2], n);
                                        var d = a.decimalResolution("RESOLUTION");
                                        d && (s.width = d.width, s.height = d.height), s.bitrate = a.decimalInteger("AVERAGE-BANDWIDTH") || a.decimalInteger("BANDWIDTH"), s.name = a.NAME, r([].concat((a.CODECS || "").split(/[ ,]+/)), s), s.videoCodec && -1 !== s.videoCodec.indexOf("avc1") && (s.videoCodec = t.convertAVC1ToAVCOTI(s.videoCodec)), i.push(s)
                                    }
                                    return i
                                }, t.parseMasterPlaylistMedia = function(e, n, l, i) {
                                    var r;
                                    void 0 === i && (i = []);
                                    var s = [],
                                        a = 0;
                                    for (d.lastIndex = 0; null !== (r = d.exec(e));) {
                                        var u = {},
                                            c = new o.default(r[1]);
                                        if (c.TYPE === l) {
                                            if (u.groupId = c["GROUP-ID"], u.name = c.NAME, u.type = l, u.default = "YES" === c.DEFAULT, u.autoselect = "YES" === c.AUTOSELECT, u.forced = "YES" === c.FORCED, c.URI && (u.url = t.resolve(c.URI, n)), u.lang = c.LANGUAGE, u.name || (u.name = u.lang), i.length) {
                                                var f = t.findGroup(i, u.groupId);
                                                u.audioCodec = f ? f.codec : i[0].codec
                                            }
                                            u.id = a++, s.push(u)
                                        }
                                    }
                                    return s
                                }, t.parseLevelPlaylist = function(t, n, l, u, c) {
                                    var d, m, v = 0,
                                        y = 0,
                                        b = new r.default(n),
                                        T = new s.default,
                                        w = 0,
                                        S = null,
                                        E = new i.default,
                                        _ = null;
                                    for (f.lastIndex = 0; null !== (d = f.exec(t));) {
                                        var C = d[1];
                                        if (C) {
                                            E.duration = parseFloat(C);
                                            var R = (" " + d[2]).slice(1);
                                            E.title = R || null, E.tagList.push(R ? ["INF", C, R] : ["INF", C])
                                        } else if (d[3]) {
                                            if (e.isFinite(E.duration)) {
                                                var I = v++;
                                                E.type = u, E.start = y, E.levelkey = T, E.sn = I, E.level = l, E.cc = w, E.urlId = c, E.baseurl = n, E.relurl = (" " + d[3]).slice(1), g(E, S), b.fragments.push(E), S = E, y += E.duration, E = new i.default
                                            }
                                        } else if (d[4]) {
                                            if (E.rawByteRange = (" " + d[4]).slice(1), S) {
                                                var k = S.byteRangeEndOffset;
                                                k && (E.lastByteRangeEndOffset = k)
                                            }
                                        } else if (d[5]) E.rawProgramDateTime = (" " + d[5]).slice(1), E.tagList.push(["PROGRAM-DATE-TIME", E.rawProgramDateTime]), null === _ && (_ = b.fragments.length);
                                        else {
                                            for (d = d[0].match(p), m = 1; m < d.length && void 0 === d[m]; m++);
                                            var A = (" " + d[m + 1]).slice(1),
                                                P = (" " + d[m + 2]).slice(1);
                                            switch (d[m]) {
                                                case "#":
                                                    E.tagList.push(P ? [A, P] : [A]);
                                                    break;
                                                case "PLAYLIST-TYPE":
                                                    b.type = A.toUpperCase();
                                                    break;
                                                case "MEDIA-SEQUENCE":
                                                    v = b.startSN = parseInt(A);
                                                    break;
                                                case "TARGETDURATION":
                                                    b.targetduration = parseFloat(A);
                                                    break;
                                                case "VERSION":
                                                    b.version = parseInt(A);
                                                    break;
                                                case "EXTM3U":
                                                    break;
                                                case "ENDLIST":
                                                    b.live = !1;
                                                    break;
                                                case "DIS":
                                                    w++, E.tagList.push(["DIS"]);
                                                    break;
                                                case "DISCONTINUITY-SEQ":
                                                    w = parseInt(A);
                                                    break;
                                                case "KEY":
                                                    var x = new o.default(A),
                                                        D = x.enumeratedString("METHOD"),
                                                        O = x.URI,
                                                        L = x.hexadecimalInteger("IV");
                                                    D && (T = new s.default, O && ["AES-128", "SAMPLE-AES", "SAMPLE-AES-CENC"].indexOf(D) >= 0 && (T.method = D, T.baseuri = n, T.reluri = O, T.key = null, T.iv = L));
                                                    break;
                                                case "START":
                                                    var M = new o.default(A).decimalFloatingPoint("TIME-OFFSET");
                                                    e.isFinite(M) && (b.startTimeOffset = M);
                                                    break;
                                                case "MAP":
                                                    var N = new o.default(A);
                                                    E.relurl = N.URI, E.rawByteRange = N.BYTERANGE, E.baseurl = n, E.level = l, E.type = u, E.sn = "initSegment", b.initSegment = E, (E = new i.default).rawProgramDateTime = b.initSegment.rawProgramDateTime;
                                                    break;
                                                default:
                                                    a.logger.warn("line parsed but not handled: " + d)
                                            }
                                        }
                                    }
                                    return (E = S) && !E.relurl && (b.fragments.pop(), y -= E.duration), b.totalduration = y, b.averagetargetduration = y / b.fragments.length, b.endSN = v - 1, b.startCC = b.fragments[0] ? b.fragments[0].cc : 0, b.endCC = w, !b.initSegment && b.fragments.length && b.fragments.every((function(e) {
                                        return h.test(e.relurl)
                                    })) && (a.logger.warn("MP4 fragments found but no init segment (probably no MAP, incomplete M3U8), trying to fetch SIDX"), (E = new i.default).relurl = b.fragments[0].relurl, E.baseurl = n, E.level = l, E.type = u, E.sn = "initSegment", b.initSegment = E, b.needSidxRanges = !0), _ && function(e, t) {
                                        for (var n = e[t], l = t - 1; l >= 0; l--) {
                                            var i = e[l];
                                            i.programDateTime = n.programDateTime - 1e3 * i.duration, n = i
                                        }
                                    }(b.fragments, _), b
                                }, t
                            }()
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/loader/playlist-loader.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                    __proto__: []
                                }
                                instanceof Array && function(e, t) {
                                    e.__proto__ = t
                                } || function(e, t) {
                                    for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                                },
                                function(e, t) {
                                    function n() {
                                        this.constructor = e
                                    }
                                    l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                                });
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var r = n("./src/events.js"),
                                s = n("./src/event-handler.js"),
                                o = n("./src/errors.js"),
                                a = n("./src/utils/logger.js"),
                                u = n("./src/demux/mp4demuxer.js"),
                                c = n("./src/loader/m3u8-parser.js"),
                                d = window.performance,
                                f = {
                                    MANIFEST: "manifest",
                                    LEVEL: "level",
                                    AUDIO_TRACK: "audioTrack",
                                    SUBTITLE_TRACK: "subtitleTrack"
                                },
                                p = {
                                    MAIN: "main",
                                    AUDIO: "audio",
                                    SUBTITLE: "subtitle"
                                };
                            t.default = function(t) {
                                function n(e) {
                                    var n = t.call(this, e, r.default.MANIFEST_LOADING, r.default.LEVEL_LOADING, r.default.AUDIO_TRACK_LOADING, r.default.SUBTITLE_TRACK_LOADING) || this;
                                    return n.loaders = {}, n
                                }
                                return i(n, t), Object.defineProperty(n, "ContextType", {
                                    get: function() {
                                        return f
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), Object.defineProperty(n, "LevelType", {
                                    get: function() {
                                        return p
                                    },
                                    enumerable: !0,
                                    configurable: !0
                                }), n.canHaveQualityLevels = function(e) {
                                    return e !== f.AUDIO_TRACK && e !== f.SUBTITLE_TRACK
                                }, n.mapContextToLevelType = function(e) {
                                    switch (e.type) {
                                        case f.AUDIO_TRACK:
                                            return p.AUDIO;
                                        case f.SUBTITLE_TRACK:
                                            return p.SUBTITLE;
                                        default:
                                            return p.MAIN
                                    }
                                }, n.getResponseUrl = function(e, t) {
                                    var n = e.url;
                                    return void 0 !== n && 0 !== n.indexOf("data:") || (n = t.url), n
                                }, n.prototype.createInternalLoader = function(e) {
                                    var t = this.hls.config,
                                        n = new(t.pLoader || t.loader)(t);
                                    return e.loader = n, this.loaders[e.type] = n, n
                                }, n.prototype.getInternalLoader = function(e) {
                                    return this.loaders[e.type]
                                }, n.prototype.resetInternalLoader = function(e) {
                                    this.loaders[e] && delete this.loaders[e]
                                }, n.prototype.destroyInternalLoaders = function() {
                                    for (var e in this.loaders) {
                                        var t = this.loaders[e];
                                        t && t.destroy(), this.resetInternalLoader(e)
                                    }
                                }, n.prototype.destroy = function() {
                                    this.destroyInternalLoaders(), t.prototype.destroy.call(this)
                                }, n.prototype.onManifestLoading = function(e) {
                                    this.load(e.url, {
                                        type: f.MANIFEST,
                                        level: 0,
                                        id: null
                                    })
                                }, n.prototype.onLevelLoading = function(e) {
                                    this.load(e.url, {
                                        type: f.LEVEL,
                                        level: e.level,
                                        id: e.id
                                    })
                                }, n.prototype.onAudioTrackLoading = function(e) {
                                    this.load(e.url, {
                                        type: f.AUDIO_TRACK,
                                        level: null,
                                        id: e.id
                                    })
                                }, n.prototype.onSubtitleTrackLoading = function(e) {
                                    this.load(e.url, {
                                        type: f.SUBTITLE_TRACK,
                                        level: null,
                                        id: e.id
                                    })
                                }, n.prototype.load = function(e, t) {
                                    var n = this.hls.config;
                                    a.logger.debug("Loading playlist of type " + t.type + ", level: " + t.level + ", id: " + t.id);
                                    var l, i, r, s, o = this.getInternalLoader(t);
                                    if (o) {
                                        var u = o.context;
                                        if (u && u.url === e) return a.logger.trace("playlist request ongoing"), !1;
                                        a.logger.warn("aborting previous loader for type: " + t.type), o.abort()
                                    }
                                    switch (t.type) {
                                        case f.MANIFEST:
                                            l = n.manifestLoadingMaxRetry, i = n.manifestLoadingTimeOut, r = n.manifestLoadingRetryDelay, s = n.manifestLoadingMaxRetryTimeout;
                                            break;
                                        case f.LEVEL:
                                            l = 0, i = n.levelLoadingTimeOut;
                                            break;
                                        default:
                                            l = n.levelLoadingMaxRetry, i = n.levelLoadingTimeOut, r = n.levelLoadingRetryDelay, s = n.levelLoadingMaxRetryTimeout
                                    }
                                    o = this.createInternalLoader(t), t.url = e, t.responseType = t.responseType || "";
                                    var c = {
                                            timeout: i,
                                            maxRetry: l,
                                            retryDelay: r,
                                            maxRetryDelay: s
                                        },
                                        d = {
                                            onSuccess: this.loadsuccess.bind(this),
                                            onError: this.loaderror.bind(this),
                                            onTimeout: this.loadtimeout.bind(this)
                                        };
                                    return a.logger.debug("Calling internal loader delegate for URL: " + e), o.load(t, c, d), !0
                                }, n.prototype.loadsuccess = function(e, t, n, l) {
                                    if (void 0 === l && (l = null), n.isSidxRequest) return this._handleSidxRequest(e, n), void this._handlePlaylistLoaded(e, t, n, l);
                                    this.resetInternalLoader(n.type);
                                    var i = e.data;
                                    t.tload = d.now(), 0 === i.indexOf("#EXTM3U") ? i.indexOf("#EXTINF:") > 0 || i.indexOf("#EXT-X-TARGETDURATION:") > 0 ? this._handleTrackOrLevelPlaylist(e, t, n, l) : this._handleMasterPlaylist(e, t, n, l) : this._handleManifestParsingError(e, n, "no EXTM3U delimiter", l)
                                }, n.prototype.loaderror = function(e, t, n) {
                                    void 0 === n && (n = null), this._handleNetworkError(t, n, !1, e)
                                }, n.prototype.loadtimeout = function(e, t, n) {
                                    void 0 === n && (n = null), this._handleNetworkError(t, n, !0)
                                }, n.prototype._handleMasterPlaylist = function(e, t, l, i) {
                                    var s = this.hls,
                                        o = e.data,
                                        u = n.getResponseUrl(e, l),
                                        d = c.default.parseMasterPlaylist(o, u);
                                    if (d.length) {
                                        var f = d.map((function(e) {
                                                return {
                                                    id: e.attrs.AUDIO,
                                                    codec: e.audioCodec
                                                }
                                            })),
                                            p = c.default.parseMasterPlaylistMedia(o, u, "AUDIO", f),
                                            h = c.default.parseMasterPlaylistMedia(o, u, "SUBTITLES");
                                        if (p.length) {
                                            var g = !1;
                                            p.forEach((function(e) {
                                                e.url || (g = !0)
                                            })), !1 === g && d[0].audioCodec && !d[0].attrs.AUDIO && (a.logger.log("audio codec signaled in quality level, but no embedded audio track signaled, create one"), p.unshift({
                                                type: "main",
                                                name: "main"
                                            }))
                                        }
                                        s.trigger(r.default.MANIFEST_LOADED, {
                                            levels: d,
                                            audioTracks: p,
                                            subtitles: h,
                                            url: u,
                                            stats: t,
                                            networkDetails: i
                                        })
                                    } else this._handleManifestParsingError(e, l, "no level found in manifest", i)
                                }, n.prototype._handleTrackOrLevelPlaylist = function(t, l, i, s) {
                                    var o = this.hls,
                                        a = i.id,
                                        u = i.level,
                                        p = i.type,
                                        h = n.getResponseUrl(t, i),
                                        g = e.isFinite(a) ? a : 0,
                                        m = e.isFinite(u) ? u : g,
                                        v = n.mapContextToLevelType(i),
                                        y = c.default.parseLevelPlaylist(t.data, h, m, v, g);
                                    y.tload = l.tload, p === f.MANIFEST && o.trigger(r.default.MANIFEST_LOADED, {
                                        levels: [{
                                            url: h,
                                            details: y
                                        }],
                                        audioTracks: [],
                                        url: h,
                                        stats: l,
                                        networkDetails: s
                                    }), l.tparsed = d.now(), y.needSidxRanges ? this.load(y.initSegment.url, {
                                        isSidxRequest: !0,
                                        type: p,
                                        level: u,
                                        levelDetails: y,
                                        id: a,
                                        rangeStart: 0,
                                        rangeEnd: 2048,
                                        responseType: "arraybuffer"
                                    }) : (i.levelDetails = y, this._handlePlaylistLoaded(t, l, i, s))
                                }, n.prototype._handleSidxRequest = function(e, t) {
                                    var n = u.default.parseSegmentIndex(new Uint8Array(e.data));
                                    if (n) {
                                        var l = t.levelDetails;
                                        n.references.forEach((function(e, t) {
                                            var n = e.info,
                                                i = l.fragments[t];
                                            0 === i.byteRange.length && (i.rawByteRange = String(1 + n.end - n.start) + "@" + String(n.start))
                                        })), l.initSegment.rawByteRange = String(n.moovEndOffset) + "@0"
                                    }
                                }, n.prototype._handleManifestParsingError = function(e, t, n, l) {
                                    this.hls.trigger(r.default.ERROR, {
                                        type: o.ErrorTypes.NETWORK_ERROR,
                                        details: o.ErrorDetails.MANIFEST_PARSING_ERROR,
                                        fatal: !0,
                                        url: e.url,
                                        reason: n,
                                        networkDetails: l
                                    })
                                }, n.prototype._handleNetworkError = function(e, t, n, l) {
                                    var i, s;
                                    void 0 === n && (n = !1), void 0 === l && (l = null), a.logger.info("A network error occured while loading a " + e.type + "-type playlist");
                                    var u = this.getInternalLoader(e);
                                    switch (e.type) {
                                        case f.MANIFEST:
                                            i = n ? o.ErrorDetails.MANIFEST_LOAD_TIMEOUT : o.ErrorDetails.MANIFEST_LOAD_ERROR, s = !0;
                                            break;
                                        case f.LEVEL:
                                            i = n ? o.ErrorDetails.LEVEL_LOAD_TIMEOUT : o.ErrorDetails.LEVEL_LOAD_ERROR, s = !1;
                                            break;
                                        case f.AUDIO_TRACK:
                                            i = n ? o.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT : o.ErrorDetails.AUDIO_TRACK_LOAD_ERROR, s = !1;
                                            break;
                                        default:
                                            s = !1
                                    }
                                    u && (u.abort(), this.resetInternalLoader(e.type));
                                    var c = {
                                        type: o.ErrorTypes.NETWORK_ERROR,
                                        details: i,
                                        fatal: s,
                                        url: u.url,
                                        loader: u,
                                        context: e,
                                        networkDetails: t
                                    };
                                    l && (c.response = l), this.hls.trigger(r.default.ERROR, c)
                                }, n.prototype._handlePlaylistLoaded = function(e, t, l, i) {
                                    var s = l.type,
                                        o = l.level,
                                        a = l.id,
                                        u = l.levelDetails;
                                    if (u.targetduration)
                                        if (n.canHaveQualityLevels(l.type)) this.hls.trigger(r.default.LEVEL_LOADED, {
                                            details: u,
                                            level: o || 0,
                                            id: a || 0,
                                            stats: t,
                                            networkDetails: i
                                        });
                                        else switch (s) {
                                            case f.AUDIO_TRACK:
                                                this.hls.trigger(r.default.AUDIO_TRACK_LOADED, {
                                                    details: u,
                                                    id: a,
                                                    stats: t,
                                                    networkDetails: i
                                                });
                                                break;
                                            case f.SUBTITLE_TRACK:
                                                this.hls.trigger(r.default.SUBTITLE_TRACK_LOADED, {
                                                    details: u,
                                                    id: a,
                                                    stats: t,
                                                    networkDetails: i
                                                })
                                        } else this._handleManifestParsingError(e, l, "invalid target duration", i)
                                }, n
                            }(s.default)
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/observer.js": function(e, t, n) {
                        "use strict";
                        var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(e, t) {
                                e.__proto__ = t
                            } || function(e, t) {
                                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                            },
                            function(e, t) {
                                function n() {
                                    this.constructor = e
                                }
                                l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                            });
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var r = n("./node_modules/eventemitter3/index.js");
                        t.Observer = function(e) {
                            function t() {
                                return null !== e && e.apply(this, arguments) || this
                            }
                            return i(t, e), t.prototype.trigger = function(e) {
                                for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
                                this.emit.apply(this, [e, e].concat(t))
                            }, t
                        }(r.EventEmitter)
                    },
                    "./src/polyfills/number.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/utils/get-self-scope.js").getSelfScope().Number;
                        t.Number = l, l.isFinite = l.isFinite || function(e) {
                            return "number" == typeof e && isFinite(e)
                        }
                    },
                    "./src/remux/aac-helper.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.default = function() {
                            function e() {}
                            return e.getSilentFrame = function(e, t) {
                                switch (e) {
                                    case "mp4a.40.2":
                                        if (1 === t) return new Uint8Array([0, 200, 0, 128, 35, 128]);
                                        if (2 === t) return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                                        if (3 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                                        if (4 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                                        if (5 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                                        if (6 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]);
                                        break;
                                    default:
                                        if (1 === t) return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                                        if (2 === t) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                                        if (3 === t) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94])
                                }
                                return null
                            }, e
                        }()
                    },
                    "./src/remux/mp4-generator.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = Math.pow(2, 32) - 1;
                        t.default = function() {
                            function e() {}
                            return e.init = function() {
                                var t;
                                for (t in e.types = {
                                        avc1: [],
                                        avcC: [],
                                        btrt: [],
                                        dinf: [],
                                        dref: [],
                                        esds: [],
                                        ftyp: [],
                                        hdlr: [],
                                        mdat: [],
                                        mdhd: [],
                                        mdia: [],
                                        mfhd: [],
                                        minf: [],
                                        moof: [],
                                        moov: [],
                                        mp4a: [],
                                        ".mp3": [],
                                        mvex: [],
                                        mvhd: [],
                                        pasp: [],
                                        sdtp: [],
                                        stbl: [],
                                        stco: [],
                                        stsc: [],
                                        stsd: [],
                                        stsz: [],
                                        stts: [],
                                        tfdt: [],
                                        tfhd: [],
                                        traf: [],
                                        trak: [],
                                        trun: [],
                                        trex: [],
                                        tkhd: [],
                                        vmhd: [],
                                        smhd: []
                                    }) e.types.hasOwnProperty(t) && (e.types[t] = [t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2), t.charCodeAt(3)]);
                                var n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]),
                                    l = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                                e.HDLR_TYPES = {
                                    video: n,
                                    audio: l
                                };
                                var i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]),
                                    r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                                e.STTS = e.STSC = e.STCO = r, e.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), e.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), e.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), e.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]);
                                var s = new Uint8Array([105, 115, 111, 109]),
                                    o = new Uint8Array([97, 118, 99, 49]),
                                    a = new Uint8Array([0, 0, 0, 1]);
                                e.FTYP = e.box(e.types.ftyp, s, a, s, o), e.DINF = e.box(e.types.dinf, e.box(e.types.dref, i))
                            }, e.box = function(e) {
                                for (var t, n = Array.prototype.slice.call(arguments, 1), l = 8, i = n.length, r = i; i--;) l += n[i].byteLength;
                                for ((t = new Uint8Array(l))[0] = l >> 24 & 255, t[1] = l >> 16 & 255, t[2] = l >> 8 & 255, t[3] = 255 & l, t.set(e, 4), i = 0, l = 8; i < r; i++) t.set(n[i], l), l += n[i].byteLength;
                                return t
                            }, e.hdlr = function(t) {
                                return e.box(e.types.hdlr, e.HDLR_TYPES[t])
                            }, e.mdat = function(t) {
                                return e.box(e.types.mdat, t)
                            }, e.mdhd = function(t, n) {
                                n *= t;
                                var i = Math.floor(n / (l + 1)),
                                    r = Math.floor(n % (l + 1));
                                return e.box(e.types.mdhd, new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r, 85, 196, 0, 0]))
                            }, e.mdia = function(t) {
                                return e.box(e.types.mdia, e.mdhd(t.timescale, t.duration), e.hdlr(t.type), e.minf(t))
                            }, e.mfhd = function(t) {
                                return e.box(e.types.mfhd, new Uint8Array([0, 0, 0, 0, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t]))
                            }, e.minf = function(t) {
                                return e.box(e.types.minf, "audio" === t.type ? e.box(e.types.smhd, e.SMHD) : e.box(e.types.vmhd, e.VMHD), e.DINF, e.stbl(t))
                            }, e.moof = function(t, n, l) {
                                return e.box(e.types.moof, e.mfhd(t), e.traf(l, n))
                            }, e.moov = function(t) {
                                for (var n = t.length, l = []; n--;) l[n] = e.trak(t[n]);
                                return e.box.apply(null, [e.types.moov, e.mvhd(t[0].timescale, t[0].duration)].concat(l).concat(e.mvex(t)))
                            }, e.mvex = function(t) {
                                for (var n = t.length, l = []; n--;) l[n] = e.trex(t[n]);
                                return e.box.apply(null, [e.types.mvex].concat(l))
                            }, e.mvhd = function(t, n) {
                                n *= t;
                                var i = Math.floor(n / (l + 1)),
                                    r = Math.floor(n % (l + 1)),
                                    s = new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                                return e.box(e.types.mvhd, s)
                            }, e.sdtp = function(t) {
                                var n, l, i = t.samples || [],
                                    r = new Uint8Array(4 + i.length);
                                for (l = 0; l < i.length; l++) r[l + 4] = (n = i[l].flags).dependsOn << 4 | n.isDependedOn << 2 | n.hasRedundancy;
                                return e.box(e.types.sdtp, r)
                            }, e.stbl = function(t) {
                                return e.box(e.types.stbl, e.stsd(t), e.box(e.types.stts, e.STTS), e.box(e.types.stsc, e.STSC), e.box(e.types.stsz, e.STSZ), e.box(e.types.stco, e.STCO))
                            }, e.avc1 = function(t) {
                                var n, l, i, r = [],
                                    s = [];
                                for (n = 0; n < t.sps.length; n++) r.push((i = (l = t.sps[n]).byteLength) >>> 8 & 255), r.push(255 & i), r = r.concat(Array.prototype.slice.call(l));
                                for (n = 0; n < t.pps.length; n++) s.push((i = (l = t.pps[n]).byteLength) >>> 8 & 255), s.push(255 & i), s = s.concat(Array.prototype.slice.call(l));
                                var o = e.box(e.types.avcC, new Uint8Array([1, r[3], r[4], r[5], 255, 224 | t.sps.length].concat(r).concat([t.pps.length]).concat(s))),
                                    a = t.width,
                                    u = t.height,
                                    c = t.pixelRatio[0],
                                    d = t.pixelRatio[1];
                                return e.box(e.types.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a >> 8 & 255, 255 & a, u >> 8 & 255, 255 & u, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), o, e.box(e.types.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])), e.box(e.types.pasp, new Uint8Array([c >> 24, c >> 16 & 255, c >> 8 & 255, 255 & c, d >> 24, d >> 16 & 255, d >> 8 & 255, 255 & d])))
                            }, e.esds = function(e) {
                                var t = e.config.length;
                                return new Uint8Array([0, 0, 0, 0, 3, 23 + t, 0, 1, 0, 4, 15 + t, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([t]).concat(e.config).concat([6, 1, 2]))
                            }, e.mp4a = function(t) {
                                var n = t.samplerate;
                                return e.box(e.types.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, n >> 8 & 255, 255 & n, 0, 0]), e.box(e.types.esds, e.esds(t)))
                            }, e.mp3 = function(t) {
                                var n = t.samplerate;
                                return e.box(e.types[".mp3"], new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, n >> 8 & 255, 255 & n, 0, 0]))
                            }, e.stsd = function(t) {
                                return e.box(e.types.stsd, e.STSD, "audio" === t.type ? t.isAAC || "mp3" !== t.codec ? e.mp4a(t) : e.mp3(t) : e.avc1(t))
                            }, e.tkhd = function(t) {
                                var n = t.id,
                                    i = t.duration * t.timescale,
                                    r = t.width,
                                    s = t.height,
                                    o = Math.floor(i / (l + 1)),
                                    a = Math.floor(i % (l + 1));
                                return e.box(e.types.tkhd, new Uint8Array([1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n, 0, 0, 0, 0, o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, r >> 8 & 255, 255 & r, 0, 0, s >> 8 & 255, 255 & s, 0, 0]))
                            }, e.traf = function(t, n) {
                                var i = e.sdtp(t),
                                    r = t.id,
                                    s = Math.floor(n / (l + 1)),
                                    o = Math.floor(n % (l + 1));
                                return e.box(e.types.traf, e.box(e.types.tfhd, new Uint8Array([0, 0, 0, 0, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r])), e.box(e.types.tfdt, new Uint8Array([1, 0, 0, 0, s >> 24, s >> 16 & 255, s >> 8 & 255, 255 & s, o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o])), e.trun(t, i.length + 16 + 20 + 8 + 16 + 8 + 8), i)
                            }, e.trak = function(t) {
                                return t.duration = t.duration || 4294967295, e.box(e.types.trak, e.tkhd(t), e.mdia(t))
                            }, e.trex = function(t) {
                                var n = t.id;
                                return e.box(e.types.trex, new Uint8Array([0, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))
                            }, e.trun = function(t, n) {
                                var l, i, r, s, o, a, u = t.samples || [],
                                    c = u.length,
                                    d = 12 + 16 * c,
                                    f = new Uint8Array(d);
                                for (f.set([0, 0, 15, 1, c >>> 24 & 255, c >>> 16 & 255, c >>> 8 & 255, 255 & c, (n += 8 + d) >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, 255 & n], 0), l = 0; l < c; l++) f.set([(r = (i = u[l]).duration) >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r, (s = i.size) >>> 24 & 255, s >>> 16 & 255, s >>> 8 & 255, 255 & s, (o = i.flags).isLeading << 2 | o.dependsOn, o.isDependedOn << 6 | o.hasRedundancy << 4 | o.paddingValue << 1 | o.isNonSync, 61440 & o.degradPrio, 15 & o.degradPrio, (a = i.cts) >>> 24 & 255, a >>> 16 & 255, a >>> 8 & 255, 255 & a], 12 + 16 * l);
                                return e.box(e.types.trun, f)
                            }, e.initSegment = function(t) {
                                e.types || e.init();
                                var n, l = e.moov(t);
                                return (n = new Uint8Array(e.FTYP.byteLength + l.byteLength)).set(e.FTYP), n.set(l, e.FTYP.byteLength), n
                            }, e
                        }()
                    },
                    "./src/remux/mp4-remuxer.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/remux/aac-helper.js"),
                            i = n("./src/remux/mp4-generator.js"),
                            r = n("./src/events.js"),
                            s = n("./src/errors.js"),
                            o = n("./src/utils/logger.js");
                        t.default = function() {
                            function e(e, t, n, l) {
                                this.observer = e, this.config = t, this.typeSupported = n;
                                var i = navigator.userAgent;
                                this.isSafari = l && l.indexOf("Apple") > -1 && i && !i.match("CriOS"), this.ISGenerated = !1
                            }
                            return e.prototype.destroy = function() {}, e.prototype.resetTimeStamp = function(e) {
                                this._initPTS = this._initDTS = e
                            }, e.prototype.resetInitSegment = function() {
                                this.ISGenerated = !1
                            }, e.prototype.remux = function(e, t, n, l, i, s, a) {
                                if (this.ISGenerated || this.generateIS(e, t, i), this.ISGenerated) {
                                    var u = e.samples.length,
                                        c = t.samples.length,
                                        d = i,
                                        f = i;
                                    if (u && c) {
                                        var p = (e.samples[0].pts - t.samples[0].pts) / t.inputTimeScale;
                                        d += Math.max(0, p), f += Math.max(0, -p)
                                    }
                                    if (u) {
                                        e.timescale || (o.logger.warn("regenerate InitSegment as audio detected"), this.generateIS(e, t, i));
                                        var h = this.remuxAudio(e, d, s, a);
                                        if (c) {
                                            var g = void 0;
                                            h && (g = h.endPTS - h.startPTS), t.timescale || (o.logger.warn("regenerate InitSegment as video detected"), this.generateIS(e, t, i)), this.remuxVideo(t, f, s, g, a)
                                        }
                                    } else if (c) {
                                        var m = this.remuxVideo(t, f, s, 0, a);
                                        m && e.codec && this.remuxEmptyAudio(e, d, s, m)
                                    }
                                }
                                n.samples.length && this.remuxID3(n, i), l.samples.length && this.remuxText(l, i), this.observer.trigger(r.default.FRAG_PARSED)
                            }, e.prototype.generateIS = function(e, t, n) {
                                var l, a, u = this.observer,
                                    c = e.samples,
                                    d = t.samples,
                                    f = this.typeSupported,
                                    p = "audio/mp4",
                                    h = {},
                                    g = {
                                        tracks: h
                                    },
                                    m = void 0 === this._initPTS;
                                if (m && (l = a = 1 / 0), e.config && c.length && (e.timescale = e.samplerate, o.logger.log("audio sampling rate : " + e.samplerate), e.isAAC || (f.mpeg ? (p = "audio/mpeg", e.codec = "") : f.mp3 && (e.codec = "mp3")), h.audio = {
                                        container: p,
                                        codec: e.codec,
                                        initSegment: !e.isAAC && f.mpeg ? new Uint8Array : i.default.initSegment([e]),
                                        metadata: {
                                            channelCount: e.channelCount
                                        }
                                    }, m && (l = a = c[0].pts - e.inputTimeScale * n)), t.sps && t.pps && d.length) {
                                    var v = t.inputTimeScale;
                                    t.timescale = v, h.video = {
                                        container: "video/mp4",
                                        codec: t.codec,
                                        initSegment: i.default.initSegment([t]),
                                        metadata: {
                                            width: t.width,
                                            height: t.height
                                        }
                                    }, m && (l = Math.min(l, d[0].pts - v * n), a = Math.min(a, d[0].dts - v * n), this.observer.trigger(r.default.INIT_PTS_FOUND, {
                                        initPTS: l
                                    }))
                                }
                                Object.keys(h).length ? (u.trigger(r.default.FRAG_PARSING_INIT_SEGMENT, g), this.ISGenerated = !0, m && (this._initPTS = l, this._initDTS = a)) : u.trigger(r.default.ERROR, {
                                    type: s.ErrorTypes.MEDIA_ERROR,
                                    details: s.ErrorDetails.FRAG_PARSING_ERROR,
                                    fatal: !1,
                                    reason: "no audio/video samples found"
                                })
                            }, e.prototype.remuxVideo = function(e, t, n, l, a) {
                                var u, c, d, f, p, h, g, m = 8,
                                    v = e.timescale,
                                    y = e.samples,
                                    b = [],
                                    T = y.length,
                                    w = this._PTSNormalize,
                                    S = this._initPTS,
                                    E = this.nextAvcDts,
                                    _ = this.isSafari;
                                if (0 !== T) {
                                    _ && (n |= y.length && E && (a && Math.abs(t - E / v) < .1 || Math.abs(y[0].pts - E - S) < v / 5)), n || (E = t * v), y.forEach((function(e) {
                                        e.pts = w(e.pts - S, E), e.dts = w(e.dts - S, E)
                                    })), y.sort((function(e, t) {
                                        return e.dts - t.dts || e.pts - t.pts || e.id - t.id
                                    }));
                                    var C = y.reduce((function(e, t) {
                                        return Math.max(Math.min(e, t.pts - t.dts), -18e3)
                                    }), 0);
                                    if (C < 0) {
                                        o.logger.warn("PTS < DTS detected in video samples, shifting DTS by " + Math.round(C / 90) + " ms to overcome this issue");
                                        for (var R = 0; R < y.length; R++) y[R].dts += C
                                    }
                                    var I = y[0];
                                    p = Math.max(I.dts, 0), f = Math.max(I.pts, 0);
                                    var k = Math.round((p - E) / 90);
                                    n && k && (k > 1 ? o.logger.log("AVC:" + k + " ms hole between fragments detected,filling it") : k < -1 && o.logger.log("AVC:" + -k + " ms overlapping between fragments detected"), y[0].dts = p = E, f = Math.max(f - k, E), y[0].pts = f, o.logger.log("Video/PTS/DTS adjusted: " + Math.round(f / 90) + "/" + Math.round(p / 90) + ",delta:" + k + " ms")), I = y[y.length - 1], g = Math.max(I.dts, 0), h = Math.max(I.pts, 0, g), _ && (u = Math.round((g - p) / (y.length - 1)));
                                    var A = 0,
                                        P = 0;
                                    for (R = 0; R < T; R++) {
                                        for (var x = y[R], D = x.units, O = D.length, L = 0, M = 0; M < O; M++) L += D[M].data.length;
                                        P += L, A += O, x.length = L, x.dts = _ ? p + R * u : Math.max(x.dts, p), x.pts = Math.max(x.pts, x.dts)
                                    }
                                    var N = P + 4 * A + 8;
                                    try {
                                        c = new Uint8Array(N)
                                    } catch (J) {
                                        return void this.observer.trigger(r.default.ERROR, {
                                            type: s.ErrorTypes.MUX_ERROR,
                                            details: s.ErrorDetails.REMUX_ALLOC_ERROR,
                                            fatal: !1,
                                            bytes: N,
                                            reason: "fail allocating video mdat " + N
                                        })
                                    }
                                    var F = new DataView(c.buffer);
                                    for (F.setUint32(0, N), c.set(i.default.types.mdat, 4), R = 0; R < T; R++) {
                                        var j = y[R],
                                            B = j.units,
                                            U = 0,
                                            V = void 0;
                                        for (M = 0, O = B.length; M < O; M++) {
                                            var G = B[M],
                                                K = G.data,
                                                H = G.data.byteLength;
                                            F.setUint32(m, H), c.set(K, m += 4), m += H, U += 4 + H
                                        }
                                        if (_) V = Math.max(0, u * Math.round((j.pts - j.dts) / u));
                                        else {
                                            if (R < T - 1) u = y[R + 1].dts - j.dts;
                                            else {
                                                var q = this.config,
                                                    Y = j.dts - y[R > 0 ? R - 1 : R].dts;
                                                if (q.stretchShortVideoTrack) {
                                                    var $ = Math.floor(q.maxBufferHole * v),
                                                        z = (l ? f + l * v : this.nextAudioPts) - j.pts;
                                                    z > $ ? ((u = z - Y) < 0 && (u = Y), o.logger.log("It is approximately " + z / 90 + " ms to the next segment; using duration " + u / 90 + " ms for the last video frame.")) : u = Y
                                                } else u = Y
                                            }
                                            V = Math.round(j.pts - j.dts)
                                        }
                                        b.push({
                                            size: U,
                                            duration: u,
                                            cts: V,
                                            flags: {
                                                isLeading: 0,
                                                isDependedOn: 0,
                                                hasRedundancy: 0,
                                                degradPrio: 0,
                                                dependsOn: j.key ? 2 : 1,
                                                isNonSync: j.key ? 0 : 1
                                            }
                                        })
                                    }
                                    this.nextAvcDts = g + u;
                                    var W = e.dropped;
                                    if (e.len = 0, e.nbNalu = 0, e.dropped = 0, b.length && navigator.userAgent.toLowerCase().indexOf("chrome") > -1) {
                                        var X = b[0].flags;
                                        X.dependsOn = 2, X.isNonSync = 0
                                    }
                                    e.samples = b, d = i.default.moof(e.sequenceNumber++, p, e), e.samples = [];
                                    var Z = {
                                        data1: d,
                                        data2: c,
                                        startPTS: f / v,
                                        endPTS: (h + u) / v,
                                        startDTS: p / v,
                                        endDTS: this.nextAvcDts / v,
                                        type: "video",
                                        hasAudio: !1,
                                        hasVideo: !0,
                                        nb: b.length,
                                        dropped: W
                                    };
                                    return this.observer.trigger(r.default.FRAG_PARSING_DATA, Z), Z
                                }
                            }, e.prototype.remuxAudio = function(e, t, n, a) {
                                var u, c, d, f, p, h, g, m = e.inputTimeScale,
                                    v = m / e.timescale,
                                    y = (e.isAAC ? 1024 : 1152) * v,
                                    b = this._PTSNormalize,
                                    T = this._initPTS,
                                    w = !e.isAAC && this.typeSupported.mpeg,
                                    S = e.samples,
                                    E = [],
                                    _ = this.nextAudioPts;
                                if (n |= S.length && _ && (a && Math.abs(t - _ / m) < .1 || Math.abs(S[0].pts - _ - T) < 20 * y), S.forEach((function(e) {
                                        e.pts = e.dts = b(e.pts - T, t * m)
                                    })), 0 !== (S = S.filter((function(e) {
                                        return e.pts >= 0
                                    }))).length) {
                                    if (n || (_ = a ? t * m : S[0].pts), e.isAAC)
                                        for (var C = this.config.maxAudioFramesDrift, R = 0, I = _; R < S.length;) {
                                            var k, A = S[R];
                                            k = (F = A.pts) - I;
                                            var P = Math.abs(1e3 * k / m);
                                            if (k <= -C * y) o.logger.warn("Dropping 1 audio frame @ " + (I / m).toFixed(3) + "s due to " + Math.round(P) + " ms overlap."), S.splice(R, 1), e.len -= A.unit.length;
                                            else if (k >= C * y && P < 1e4 && I) {
                                                var x = Math.round(k / y);
                                                o.logger.warn("Injecting " + x + " audio frame @ " + (I / m).toFixed(3) + "s due to " + Math.round(1e3 * k / m) + " ms gap.");
                                                for (var D = 0; D < x; D++) {
                                                    var O = Math.max(I, 0);
                                                    (d = l.default.getSilentFrame(e.manifestCodec || e.codec, e.channelCount)) || (o.logger.log("Unable to get silent frame for given audio codec; duplicating last frame instead."), d = A.unit.subarray()), S.splice(R, 0, {
                                                        unit: d,
                                                        pts: O,
                                                        dts: O
                                                    }), e.len += d.length, I += y, R++
                                                }
                                                A.pts = A.dts = I, I += y, R++
                                            } else Math.abs(k), A.pts = A.dts = I, I += y, R++
                                        }
                                    D = 0;
                                    for (var L = S.length; D < L; D++) {
                                        var M = S[D],
                                            N = M.unit,
                                            F = M.pts;
                                        if (void 0 !== g) c.duration = Math.round((F - g) / v);
                                        else {
                                            var j = Math.round(1e3 * (F - _) / m),
                                                B = 0;
                                            if (n && e.isAAC && j) {
                                                if (j > 0 && j < 1e4) B = Math.round((F - _) / y), o.logger.log(j + " ms hole between AAC samples detected,filling it"), B > 0 && ((d = l.default.getSilentFrame(e.manifestCodec || e.codec, e.channelCount)) || (d = N.subarray()), e.len += B * d.length);
                                                else if (j < -12) {
                                                    o.logger.log("drop overlapping AAC sample, expected/parsed/delta:" + (_ / m).toFixed(3) + "s/" + (F / m).toFixed(3) + "s/" + -j + "ms"), e.len -= N.byteLength;
                                                    continue
                                                }
                                                F = _
                                            }
                                            if (h = F, !(e.len > 0)) return;
                                            var U = w ? e.len : e.len + 8;
                                            u = w ? 0 : 8;
                                            try {
                                                f = new Uint8Array(U)
                                            } catch ($) {
                                                return void this.observer.trigger(r.default.ERROR, {
                                                    type: s.ErrorTypes.MUX_ERROR,
                                                    details: s.ErrorDetails.REMUX_ALLOC_ERROR,
                                                    fatal: !1,
                                                    bytes: U,
                                                    reason: "fail allocating audio mdat " + U
                                                })
                                            }
                                            for (w || (new DataView(f.buffer).setUint32(0, U), f.set(i.default.types.mdat, 4)), R = 0; R < B; R++)(d = l.default.getSilentFrame(e.manifestCodec || e.codec, e.channelCount)) || (o.logger.log("Unable to get silent frame for given audio codec; duplicating this frame instead."), d = N.subarray()), f.set(d, u), u += d.byteLength, E.push(c = {
                                                size: d.byteLength,
                                                cts: 0,
                                                duration: 1024,
                                                flags: {
                                                    isLeading: 0,
                                                    isDependedOn: 0,
                                                    hasRedundancy: 0,
                                                    degradPrio: 0,
                                                    dependsOn: 1
                                                }
                                            })
                                        }
                                        f.set(N, u);
                                        var V = N.byteLength;
                                        u += V, E.push(c = {
                                            size: V,
                                            cts: 0,
                                            duration: 0,
                                            flags: {
                                                isLeading: 0,
                                                isDependedOn: 0,
                                                hasRedundancy: 0,
                                                degradPrio: 0,
                                                dependsOn: 1
                                            }
                                        }), g = F
                                    }
                                    var G = 0,
                                        K = E.length;
                                    if (K >= 2 && (c.duration = G = E[K - 2].duration), K) {
                                        this.nextAudioPts = _ = g + v * G, e.len = 0, e.samples = E, p = w ? new Uint8Array : i.default.moof(e.sequenceNumber++, h / v, e), e.samples = [];
                                        var H = h / m,
                                            q = _ / m,
                                            Y = {
                                                data1: p,
                                                data2: f,
                                                startPTS: H,
                                                endPTS: q,
                                                startDTS: H,
                                                endDTS: q,
                                                type: "audio",
                                                hasAudio: !0,
                                                hasVideo: !1,
                                                nb: K
                                            };
                                        return this.observer.trigger(r.default.FRAG_PARSING_DATA, Y), Y
                                    }
                                    return null
                                }
                            }, e.prototype.remuxEmptyAudio = function(e, t, n, i) {
                                var r = e.inputTimeScale,
                                    s = this.nextAudioPts,
                                    a = (void 0 !== s ? s : i.startDTS * r) + this._initDTS,
                                    u = r / (e.samplerate ? e.samplerate : r) * 1024,
                                    c = Math.ceil((i.endDTS * r + this._initDTS - a) / u),
                                    d = l.default.getSilentFrame(e.manifestCodec || e.codec, e.channelCount);
                                if (o.logger.warn("remux empty Audio"), d) {
                                    for (var f = [], p = 0; p < c; p++) {
                                        var h = a + p * u;
                                        f.push({
                                            unit: d,
                                            pts: h,
                                            dts: h
                                        }), e.len += d.length
                                    }
                                    e.samples = f, this.remuxAudio(e, t, n)
                                } else o.logger.trace("Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec!")
                            }, e.prototype.remuxID3 = function(e) {
                                var t, n = e.samples.length,
                                    l = e.inputTimeScale,
                                    i = this._initPTS,
                                    s = this._initDTS;
                                if (n) {
                                    for (var o = 0; o < n; o++)(t = e.samples[o]).pts = (t.pts - i) / l, t.dts = (t.dts - s) / l;
                                    this.observer.trigger(r.default.FRAG_PARSING_METADATA, {
                                        samples: e.samples
                                    })
                                }
                                e.samples = []
                            }, e.prototype.remuxText = function(e) {
                                e.samples.sort((function(e, t) {
                                    return e.pts - t.pts
                                }));
                                var t, n = e.samples.length,
                                    l = e.inputTimeScale,
                                    i = this._initPTS;
                                if (n) {
                                    for (var s = 0; s < n; s++)(t = e.samples[s]).pts = (t.pts - i) / l;
                                    this.observer.trigger(r.default.FRAG_PARSING_USERDATA, {
                                        samples: e.samples
                                    })
                                }
                                e.samples = []
                            }, e.prototype._PTSNormalize = function(e, t) {
                                var n;
                                if (void 0 === t) return e;
                                for (n = t < e ? -8589934592 : 8589934592; Math.abs(e - t) > 4294967296;) e += n;
                                return e
                            }, e
                        }()
                    },
                    "./src/remux/passthrough-remuxer.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/events.js");
                        t.default = function() {
                            function e(e) {
                                this.observer = e
                            }
                            return e.prototype.destroy = function() {}, e.prototype.resetTimeStamp = function() {}, e.prototype.resetInitSegment = function() {}, e.prototype.remux = function(e, t, n, i, r, s, o, a) {
                                var u = this.observer,
                                    c = "";
                                e && (c += "audio"), t && (c += "video"), u.trigger(l.default.FRAG_PARSING_DATA, {
                                    data1: a,
                                    startPTS: r,
                                    startDTS: r,
                                    type: c,
                                    hasAudio: !!e,
                                    hasVideo: !!t,
                                    nb: 1,
                                    dropped: 0
                                }), u.trigger(l.default.FRAG_PARSED)
                            }, e
                        }()
                    },
                    "./src/task-loop.js": function(e, t, n) {
                        "use strict";
                        var l, i = this && this.__extends || (l = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(e, t) {
                                e.__proto__ = t
                            } || function(e, t) {
                                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                            },
                            function(e, t) {
                                function n() {
                                    this.constructor = e
                                }
                                l(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                            });
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var r = n("./src/event-handler.js");
                        t.default = function(e) {
                            function t(t) {
                                for (var n = [], l = 1; l < arguments.length; l++) n[l - 1] = arguments[l];
                                var i = e.apply(this, [t].concat(n)) || this;
                                return i._tickInterval = null, i._tickTimer = null, i._tickCallCount = 0, i._boundTick = i.tick.bind(i), i
                            }
                            return i(t, e), t.prototype.onHandlerDestroying = function() {
                                this.clearNextTick(), this.clearInterval()
                            }, t.prototype.hasInterval = function() {
                                return !!this._tickInterval
                            }, t.prototype.hasNextTick = function() {
                                return !!this._tickTimer
                            }, t.prototype.setInterval = function(e) {
                                return !this._tickInterval && (this._tickInterval = setInterval(this._boundTick, e), !0)
                            }, t.prototype.clearInterval = function() {
                                return !!this._tickInterval && (clearInterval(this._tickInterval), this._tickInterval = null, !0)
                            }, t.prototype.clearNextTick = function() {
                                return !!this._tickTimer && (clearTimeout(this._tickTimer), this._tickTimer = null, !0)
                            }, t.prototype.tick = function() {
                                this._tickCallCount++, 1 === this._tickCallCount && (this.doTick(), this._tickCallCount > 1 && (this.clearNextTick(), this._tickTimer = setTimeout(this._boundTick, 0)), this._tickCallCount = 0)
                            }, t.prototype.doTick = function() {}, t
                        }(r.default)
                    },
                    "./src/utils/attr-list.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var n = /^(\d+)x(\d+)$/,
                                l = /\s*(.+?)\s*=((?:\".*?\")|.*?)(?:,|$)/g;
                            t.default = function() {
                                function t(e) {
                                    for (var n in "string" == typeof e && (e = t.parseAttrList(e)), e) e.hasOwnProperty(n) && (this[n] = e[n])
                                }
                                return t.prototype.decimalInteger = function(t) {
                                    var n = parseInt(this[t], 10);
                                    return n > e.MAX_SAFE_INTEGER ? 1 / 0 : n
                                }, t.prototype.hexadecimalInteger = function(e) {
                                    if (this[e]) {
                                        var t = (this[e] || "0x").slice(2);
                                        t = (1 & t.length ? "0" : "") + t;
                                        for (var n = new Uint8Array(t.length / 2), l = 0; l < t.length / 2; l++) n[l] = parseInt(t.slice(2 * l, 2 * l + 2), 16);
                                        return n
                                    }
                                    return null
                                }, t.prototype.hexadecimalIntegerAsNumber = function(t) {
                                    var n = parseInt(this[t], 16);
                                    return n > e.MAX_SAFE_INTEGER ? 1 / 0 : n
                                }, t.prototype.decimalFloatingPoint = function(e) {
                                    return parseFloat(this[e])
                                }, t.prototype.enumeratedString = function(e) {
                                    return this[e]
                                }, t.prototype.decimalResolution = function(e) {
                                    var t = n.exec(this[e]);
                                    if (null !== t) return {
                                        width: parseInt(t[1], 10),
                                        height: parseInt(t[2], 10)
                                    }
                                }, t.parseAttrList = function(e) {
                                    var t, n = {};
                                    for (l.lastIndex = 0; null !== (t = l.exec(e));) {
                                        var i = t[2];
                                        0 === i.indexOf('"') && i.lastIndexOf('"') === i.length - 1 && (i = i.slice(1, -1)), n[t[1]] = i
                                    }
                                    return n
                                }, t
                            }()
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/utils/binary-search.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.default = {
                            search: function(e, t) {
                                for (var n = 0, l = e.length - 1, i = null, r = null; n <= l;) {
                                    var s = t(r = e[i = (n + l) / 2 | 0]);
                                    if (s > 0) n = i + 1;
                                    else {
                                        if (!(s < 0)) return r;
                                        l = i - 1
                                    }
                                }
                                return null
                            }
                        }
                    },
                    "./src/utils/buffer-helper.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.BufferHelper = function() {
                            function e() {}
                            return e.isBuffered = function(e, t) {
                                try {
                                    if (e)
                                        for (var n = e.buffered, l = 0; l < n.length; l++)
                                            if (t >= n.start(l) && t <= n.end(l)) return !0
                                } catch (i) {}
                                return !1
                            }, e.bufferInfo = function(e, t, n) {
                                try {
                                    if (e) {
                                        var l = e.buffered,
                                            i = [],
                                            r = void 0;
                                        for (r = 0; r < l.length; r++) i.push({
                                            start: l.start(r),
                                            end: l.end(r)
                                        });
                                        return this.bufferedInfo(i, t, n)
                                    }
                                } catch (s) {}
                                return {
                                    len: 0,
                                    start: t,
                                    end: t,
                                    nextStart: void 0
                                }
                            }, e.bufferedInfo = function(e, t, n) {
                                var l, i, r, s, o, a = [];
                                for (e.sort((function(e, t) {
                                        return e.start - t.start || t.end - e.end
                                    })), o = 0; o < e.length; o++) {
                                    var u = a.length;
                                    if (u) {
                                        var c = a[u - 1].end;
                                        e[o].start - c < n ? e[o].end > c && (a[u - 1].end = e[o].end) : a.push(e[o])
                                    } else a.push(e[o])
                                }
                                for (o = 0, l = 0, i = r = t; o < a.length; o++) {
                                    var d = a[o].start,
                                        f = a[o].end;
                                    if (t + n >= d && t < f) i = d, l = (r = f) - t;
                                    else if (t + n < d) {
                                        s = d;
                                        break
                                    }
                                }
                                return {
                                    len: l,
                                    start: i,
                                    end: r,
                                    nextStart: s
                                }
                            }, e
                        }()
                    },
                    "./src/utils/cea-608-parser.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = {
                                42: 225,
                                92: 233,
                                94: 237,
                                95: 243,
                                96: 250,
                                123: 231,
                                124: 247,
                                125: 209,
                                126: 241,
                                127: 9608,
                                128: 174,
                                129: 176,
                                130: 189,
                                131: 191,
                                132: 8482,
                                133: 162,
                                134: 163,
                                135: 9834,
                                136: 224,
                                137: 32,
                                138: 232,
                                139: 226,
                                140: 234,
                                141: 238,
                                142: 244,
                                143: 251,
                                144: 193,
                                145: 201,
                                146: 211,
                                147: 218,
                                148: 220,
                                149: 252,
                                150: 8216,
                                151: 161,
                                152: 42,
                                153: 8217,
                                154: 9473,
                                155: 169,
                                156: 8480,
                                157: 8226,
                                158: 8220,
                                159: 8221,
                                160: 192,
                                161: 194,
                                162: 199,
                                163: 200,
                                164: 202,
                                165: 203,
                                166: 235,
                                167: 206,
                                168: 207,
                                169: 239,
                                170: 212,
                                171: 217,
                                172: 249,
                                173: 219,
                                174: 171,
                                175: 187,
                                176: 195,
                                177: 227,
                                178: 205,
                                179: 204,
                                180: 236,
                                181: 210,
                                182: 242,
                                183: 213,
                                184: 245,
                                185: 123,
                                186: 125,
                                187: 92,
                                188: 94,
                                189: 95,
                                190: 124,
                                191: 8764,
                                192: 196,
                                193: 228,
                                194: 214,
                                195: 246,
                                196: 223,
                                197: 165,
                                198: 164,
                                199: 9475,
                                200: 197,
                                201: 229,
                                202: 216,
                                203: 248,
                                204: 9487,
                                205: 9491,
                                206: 9495,
                                207: 9499
                            },
                            i = function(e) {
                                var t = e;
                                return l.hasOwnProperty(e) && (t = l[e]), String.fromCharCode(t)
                            },
                            r = {
                                17: 1,
                                18: 3,
                                21: 5,
                                22: 7,
                                23: 9,
                                16: 11,
                                19: 12,
                                20: 14
                            },
                            s = {
                                17: 2,
                                18: 4,
                                21: 6,
                                22: 8,
                                23: 10,
                                19: 13,
                                20: 15
                            },
                            o = {
                                25: 1,
                                26: 3,
                                29: 5,
                                30: 7,
                                31: 9,
                                24: 11,
                                27: 12,
                                28: 14
                            },
                            a = {
                                25: 2,
                                26: 4,
                                29: 6,
                                30: 8,
                                31: 10,
                                27: 13,
                                28: 15
                            },
                            u = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "black", "transparent"],
                            c = {
                                verboseFilter: {
                                    DATA: 3,
                                    DEBUG: 3,
                                    INFO: 2,
                                    WARNING: 2,
                                    TEXT: 1,
                                    ERROR: 0
                                },
                                time: null,
                                verboseLevel: 0,
                                setTime: function(e) {
                                    this.time = e
                                },
                                log: function(e, t) {}
                            },
                            d = function(e) {
                                for (var t = [], n = 0; n < e.length; n++) t.push(e[n].toString(16));
                                return t
                            },
                            f = function() {
                                function e(e, t, n, l, i) {
                                    this.foreground = e || "white", this.underline = t || !1, this.italics = n || !1, this.background = l || "black", this.flash = i || !1
                                }
                                return e.prototype.reset = function() {
                                    this.foreground = "white", this.underline = !1, this.italics = !1, this.background = "black", this.flash = !1
                                }, e.prototype.setStyles = function(e) {
                                    for (var t = ["foreground", "underline", "italics", "background", "flash"], n = 0; n < t.length; n++) {
                                        var l = t[n];
                                        e.hasOwnProperty(l) && (this[l] = e[l])
                                    }
                                }, e.prototype.isDefault = function() {
                                    return "white" === this.foreground && !this.underline && !this.italics && "black" === this.background && !this.flash
                                }, e.prototype.equals = function(e) {
                                    return this.foreground === e.foreground && this.underline === e.underline && this.italics === e.italics && this.background === e.background && this.flash === e.flash
                                }, e.prototype.copy = function(e) {
                                    this.foreground = e.foreground, this.underline = e.underline, this.italics = e.italics, this.background = e.background, this.flash = e.flash
                                }, e.prototype.toString = function() {
                                    return "color=" + this.foreground + ", underline=" + this.underline + ", italics=" + this.italics + ", background=" + this.background + ", flash=" + this.flash
                                }, e
                            }(),
                            p = function() {
                                function e(e, t, n, l, i, r) {
                                    this.uchar = e || " ", this.penState = new f(t, n, l, i, r)
                                }
                                return e.prototype.reset = function() {
                                    this.uchar = " ", this.penState.reset()
                                }, e.prototype.setChar = function(e, t) {
                                    this.uchar = e, this.penState.copy(t)
                                }, e.prototype.setPenState = function(e) {
                                    this.penState.copy(e)
                                }, e.prototype.equals = function(e) {
                                    return this.uchar === e.uchar && this.penState.equals(e.penState)
                                }, e.prototype.copy = function(e) {
                                    this.uchar = e.uchar, this.penState.copy(e.penState)
                                }, e.prototype.isEmpty = function() {
                                    return " " === this.uchar && this.penState.isDefault()
                                }, e
                            }(),
                            h = function() {
                                function e() {
                                    this.chars = [];
                                    for (var e = 0; e < 100; e++) this.chars.push(new p);
                                    this.pos = 0, this.currPenState = new f
                                }
                                return e.prototype.equals = function(e) {
                                    for (var t = !0, n = 0; n < 100; n++)
                                        if (!this.chars[n].equals(e.chars[n])) {
                                            t = !1;
                                            break
                                        }
                                    return t
                                }, e.prototype.copy = function(e) {
                                    for (var t = 0; t < 100; t++) this.chars[t].copy(e.chars[t])
                                }, e.prototype.isEmpty = function() {
                                    for (var e = !0, t = 0; t < 100; t++)
                                        if (!this.chars[t].isEmpty()) {
                                            e = !1;
                                            break
                                        }
                                    return e
                                }, e.prototype.setCursor = function(e) {
                                    this.pos !== e && (this.pos = e), this.pos < 0 ? (c.log("ERROR", "Negative cursor position " + this.pos), this.pos = 0) : this.pos > 100 && (c.log("ERROR", "Too large cursor position " + this.pos), this.pos = 100)
                                }, e.prototype.moveCursor = function(e) {
                                    var t = this.pos + e;
                                    if (e > 1)
                                        for (var n = this.pos + 1; n < t + 1; n++) this.chars[n].setPenState(this.currPenState);
                                    this.setCursor(t)
                                }, e.prototype.backSpace = function() {
                                    this.moveCursor(-1), this.chars[this.pos].setChar(" ", this.currPenState)
                                }, e.prototype.insertChar = function(e) {
                                    e >= 144 && this.backSpace();
                                    var t = i(e);
                                    this.pos >= 100 ? c.log("ERROR", "Cannot insert " + e.toString(16) + " (" + t + ") at position " + this.pos + ". Skipping it!") : (this.chars[this.pos].setChar(t, this.currPenState), this.moveCursor(1))
                                }, e.prototype.clearFromPos = function(e) {
                                    var t;
                                    for (t = e; t < 100; t++) this.chars[t].reset()
                                }, e.prototype.clear = function() {
                                    this.clearFromPos(0), this.pos = 0, this.currPenState.reset()
                                }, e.prototype.clearToEndOfRow = function() {
                                    this.clearFromPos(this.pos)
                                }, e.prototype.getTextString = function() {
                                    for (var e = [], t = !0, n = 0; n < 100; n++) {
                                        var l = this.chars[n].uchar;
                                        " " !== l && (t = !1), e.push(l)
                                    }
                                    return t ? "" : e.join("")
                                }, e.prototype.setPenStyles = function(e) {
                                    this.currPenState.setStyles(e), this.chars[this.pos].setPenState(this.currPenState)
                                }, e
                            }(),
                            g = function() {
                                function e() {
                                    this.rows = [];
                                    for (var e = 0; e < 15; e++) this.rows.push(new h);
                                    this.currRow = 14, this.nrRollUpRows = null, this.reset()
                                }
                                return e.prototype.reset = function() {
                                    for (var e = 0; e < 15; e++) this.rows[e].clear();
                                    this.currRow = 14
                                }, e.prototype.equals = function(e) {
                                    for (var t = !0, n = 0; n < 15; n++)
                                        if (!this.rows[n].equals(e.rows[n])) {
                                            t = !1;
                                            break
                                        }
                                    return t
                                }, e.prototype.copy = function(e) {
                                    for (var t = 0; t < 15; t++) this.rows[t].copy(e.rows[t])
                                }, e.prototype.isEmpty = function() {
                                    for (var e = !0, t = 0; t < 15; t++)
                                        if (!this.rows[t].isEmpty()) {
                                            e = !1;
                                            break
                                        }
                                    return e
                                }, e.prototype.backSpace = function() {
                                    this.rows[this.currRow].backSpace()
                                }, e.prototype.clearToEndOfRow = function() {
                                    this.rows[this.currRow].clearToEndOfRow()
                                }, e.prototype.insertChar = function(e) {
                                    this.rows[this.currRow].insertChar(e)
                                }, e.prototype.setPen = function(e) {
                                    this.rows[this.currRow].setPenStyles(e)
                                }, e.prototype.moveCursor = function(e) {
                                    this.rows[this.currRow].moveCursor(e)
                                }, e.prototype.setCursor = function(e) {
                                    c.log("INFO", "setCursor: " + e), this.rows[this.currRow].setCursor(e)
                                }, e.prototype.setPAC = function(e) {
                                    c.log("INFO", "pacData = " + JSON.stringify(e));
                                    var t = e.row - 1;
                                    if (this.nrRollUpRows && t < this.nrRollUpRows - 1 && (t = this.nrRollUpRows - 1), this.nrRollUpRows && this.currRow !== t) {
                                        for (var n = 0; n < 15; n++) this.rows[n].clear();
                                        var l = this.currRow + 1 - this.nrRollUpRows,
                                            i = this.lastOutputScreen;
                                        if (i) {
                                            var r = i.rows[l].cueStartTime;
                                            if (r && r < c.time)
                                                for (n = 0; n < this.nrRollUpRows; n++) this.rows[t - this.nrRollUpRows + n + 1].copy(i.rows[l + n])
                                        }
                                    }
                                    this.currRow = t;
                                    var s = this.rows[this.currRow];
                                    if (null !== e.indent) {
                                        var o = Math.max(e.indent - 1, 0);
                                        s.setCursor(e.indent), e.color = s.chars[o].penState.foreground
                                    }
                                    this.setPen({
                                        foreground: e.color,
                                        underline: e.underline,
                                        italics: e.italics,
                                        background: "black",
                                        flash: !1
                                    })
                                }, e.prototype.setBkgData = function(e) {
                                    c.log("INFO", "bkgData = " + JSON.stringify(e)), this.backSpace(), this.setPen(e), this.insertChar(32)
                                }, e.prototype.setRollUpRows = function(e) {
                                    this.nrRollUpRows = e
                                }, e.prototype.rollUp = function() {
                                    if (null !== this.nrRollUpRows) {
                                        c.log("TEXT", this.getDisplayText());
                                        var e = this.rows.splice(this.currRow + 1 - this.nrRollUpRows, 1)[0];
                                        e.clear(), this.rows.splice(this.currRow, 0, e), c.log("INFO", "Rolling up")
                                    } else c.log("DEBUG", "roll_up but nrRollUpRows not set yet")
                                }, e.prototype.getDisplayText = function(e) {
                                    e = e || !1;
                                    for (var t = [], n = "", l = 0; l < 15; l++) {
                                        var i = this.rows[l].getTextString();
                                        i && t.push(e ? "Row " + (l + 1) + ": '" + i + "'" : i.trim())
                                    }
                                    return t.length > 0 && (n = e ? "[" + t.join(" | ") + "]" : t.join("\n")), n
                                }, e.prototype.getTextAndFormat = function() {
                                    return this.rows
                                }, e
                            }(),
                            m = function() {
                                function e(e, t) {
                                    this.chNr = e, this.outputFilter = t, this.mode = null, this.verbose = 0, this.displayedMemory = new g, this.nonDisplayedMemory = new g, this.lastOutputScreen = new g, this.currRollUpRow = this.displayedMemory.rows[14], this.writeScreen = this.displayedMemory, this.mode = null, this.cueStartTime = null
                                }
                                return e.prototype.reset = function() {
                                    this.mode = null, this.displayedMemory.reset(), this.nonDisplayedMemory.reset(), this.lastOutputScreen.reset(), this.currRollUpRow = this.displayedMemory.rows[14], this.writeScreen = this.displayedMemory, this.mode = null, this.cueStartTime = null, this.lastCueEndTime = null
                                }, e.prototype.getHandler = function() {
                                    return this.outputFilter
                                }, e.prototype.setHandler = function(e) {
                                    this.outputFilter = e
                                }, e.prototype.setPAC = function(e) {
                                    this.writeScreen.setPAC(e)
                                }, e.prototype.setBkgData = function(e) {
                                    this.writeScreen.setBkgData(e)
                                }, e.prototype.setMode = function(e) {
                                    e !== this.mode && (this.mode = e, c.log("INFO", "MODE=" + e), "MODE_POP-ON" === this.mode ? this.writeScreen = this.nonDisplayedMemory : (this.writeScreen = this.displayedMemory, this.writeScreen.reset()), "MODE_ROLL-UP" !== this.mode && (this.displayedMemory.nrRollUpRows = null, this.nonDisplayedMemory.nrRollUpRows = null), this.mode = e)
                                }, e.prototype.insertChars = function(e) {
                                    for (var t = 0; t < e.length; t++) this.writeScreen.insertChar(e[t]);
                                    c.log("INFO", (this.writeScreen === this.displayedMemory ? "DISP" : "NON_DISP") + ": " + this.writeScreen.getDisplayText(!0)), "MODE_PAINT-ON" !== this.mode && "MODE_ROLL-UP" !== this.mode || (c.log("TEXT", "DISPLAYED: " + this.displayedMemory.getDisplayText(!0)), this.outputDataUpdate())
                                }, e.prototype.ccRCL = function() {
                                    c.log("INFO", "RCL - Resume Caption Loading"), this.setMode("MODE_POP-ON")
                                }, e.prototype.ccBS = function() {
                                    c.log("INFO", "BS - BackSpace"), "MODE_TEXT" !== this.mode && (this.writeScreen.backSpace(), this.writeScreen === this.displayedMemory && this.outputDataUpdate())
                                }, e.prototype.ccAOF = function() {}, e.prototype.ccAON = function() {}, e.prototype.ccDER = function() {
                                    c.log("INFO", "DER- Delete to End of Row"), this.writeScreen.clearToEndOfRow(), this.outputDataUpdate()
                                }, e.prototype.ccRU = function(e) {
                                    c.log("INFO", "RU(" + e + ") - Roll Up"), this.writeScreen = this.displayedMemory, this.setMode("MODE_ROLL-UP"), this.writeScreen.setRollUpRows(e)
                                }, e.prototype.ccFON = function() {
                                    c.log("INFO", "FON - Flash On"), this.writeScreen.setPen({
                                        flash: !0
                                    })
                                }, e.prototype.ccRDC = function() {
                                    c.log("INFO", "RDC - Resume Direct Captioning"), this.setMode("MODE_PAINT-ON")
                                }, e.prototype.ccTR = function() {
                                    c.log("INFO", "TR"), this.setMode("MODE_TEXT")
                                }, e.prototype.ccRTD = function() {
                                    c.log("INFO", "RTD"), this.setMode("MODE_TEXT")
                                }, e.prototype.ccEDM = function() {
                                    c.log("INFO", "EDM - Erase Displayed Memory"), this.displayedMemory.reset(), this.outputDataUpdate(!0)
                                }, e.prototype.ccCR = function() {
                                    c.log("CR - Carriage Return"), this.writeScreen.rollUp(), this.outputDataUpdate(!0)
                                }, e.prototype.ccENM = function() {
                                    c.log("INFO", "ENM - Erase Non-displayed Memory"), this.nonDisplayedMemory.reset()
                                }, e.prototype.ccEOC = function() {
                                    if (c.log("INFO", "EOC - End Of Caption"), "MODE_POP-ON" === this.mode) {
                                        var e = this.displayedMemory;
                                        this.displayedMemory = this.nonDisplayedMemory, this.nonDisplayedMemory = e, this.writeScreen = this.nonDisplayedMemory, c.log("TEXT", "DISP: " + this.displayedMemory.getDisplayText())
                                    }
                                    this.outputDataUpdate(!0)
                                }, e.prototype.ccTO = function(e) {
                                    c.log("INFO", "TO(" + e + ") - Tab Offset"), this.writeScreen.moveCursor(e)
                                }, e.prototype.ccMIDROW = function(e) {
                                    var t = {
                                        flash: !1
                                    };
                                    if (t.underline = e % 2 == 1, t.italics = e >= 46, t.italics) t.foreground = "white";
                                    else {
                                        var n = Math.floor(e / 2) - 16;
                                        t.foreground = ["white", "green", "blue", "cyan", "red", "yellow", "magenta"][n]
                                    }
                                    c.log("INFO", "MIDROW: " + JSON.stringify(t)), this.writeScreen.setPen(t)
                                }, e.prototype.outputDataUpdate = function(e) {
                                    void 0 === e && (e = !1);
                                    var t = c.time;
                                    null !== t && this.outputFilter && (null !== this.cueStartTime || this.displayedMemory.isEmpty() ? this.displayedMemory.equals(this.lastOutputScreen) || (this.outputFilter.newCue && (this.outputFilter.newCue(this.cueStartTime, t, this.lastOutputScreen), !0 === e && this.outputFilter.dispatchCue && this.outputFilter.dispatchCue()), this.cueStartTime = this.displayedMemory.isEmpty() ? null : t) : this.cueStartTime = t, this.lastOutputScreen.copy(this.displayedMemory))
                                }, e.prototype.cueSplitAtTime = function(e) {
                                    this.outputFilter && (this.displayedMemory.isEmpty() || (this.outputFilter.newCue && this.outputFilter.newCue(this.cueStartTime, e, this.displayedMemory), this.cueStartTime = e))
                                }, e
                            }();
                        t.default = function() {
                            function e(e, t, n) {
                                this.field = e || 1, this.outputs = [t, n], this.channels = [new m(1, t), new m(2, n)], this.currChNr = -1, this.lastCmdA = null, this.lastCmdB = null, this.bufferedData = [], this.startTime = null, this.lastTime = null, this.dataCounters = {
                                    padding: 0,
                                    char: 0,
                                    cmd: 0,
                                    other: 0
                                }
                            }
                            return e.prototype.getHandler = function(e) {
                                return this.channels[e].getHandler()
                            }, e.prototype.setHandler = function(e, t) {
                                this.channels[e].setHandler(t)
                            }, e.prototype.addData = function(e, t) {
                                var n, l, i, r = !1;
                                this.lastTime = e, c.setTime(e);
                                for (var s = 0; s < t.length; s += 2) i = 127 & t[s + 1], 0 != (l = 127 & t[s]) || 0 !== i ? (c.log("DATA", "[" + d([t[s], t[s + 1]]) + "] -> (" + d([l, i]) + ")"), (n = this.parseCmd(l, i)) || (n = this.parseMidrow(l, i)), n || (n = this.parsePAC(l, i)), n || (n = this.parseBackgroundAttributes(l, i)), n || (r = this.parseChars(l, i)) && (this.currChNr && this.currChNr >= 0 ? this.channels[this.currChNr - 1].insertChars(r) : c.log("WARNING", "No channel found yet. TEXT-MODE?")), n ? this.dataCounters.cmd += 2 : r ? this.dataCounters.char += 2 : (this.dataCounters.other += 2, c.log("WARNING", "Couldn't parse cleaned data " + d([l, i]) + " orig: " + d([t[s], t[s + 1]])))) : this.dataCounters.padding += 2
                            }, e.prototype.parseCmd = function(e, t) {
                                var n;
                                if (!((20 === e || 28 === e) && t >= 32 && t <= 47 || (23 === e || 31 === e) && t >= 33 && t <= 35)) return !1;
                                if (e === this.lastCmdA && t === this.lastCmdB) return this.lastCmdA = null, this.lastCmdB = null, c.log("DEBUG", "Repeated command (" + d([e, t]) + ") is dropped"), !0;
                                var l = this.channels[(n = 20 === e || 23 === e ? 1 : 2) - 1];
                                return 20 === e || 28 === e ? 32 === t ? l.ccRCL() : 33 === t ? l.ccBS() : 34 === t ? l.ccAOF() : 35 === t ? l.ccAON() : 36 === t ? l.ccDER() : 37 === t ? l.ccRU(2) : 38 === t ? l.ccRU(3) : 39 === t ? l.ccRU(4) : 40 === t ? l.ccFON() : 41 === t ? l.ccRDC() : 42 === t ? l.ccTR() : 43 === t ? l.ccRTD() : 44 === t ? l.ccEDM() : 45 === t ? l.ccCR() : 46 === t ? l.ccENM() : 47 === t && l.ccEOC() : l.ccTO(t - 32), this.lastCmdA = e, this.lastCmdB = t, this.currChNr = n, !0
                            }, e.prototype.parseMidrow = function(e, t) {
                                var n = null;
                                return (17 === e || 25 === e) && t >= 32 && t <= 47 && ((n = 17 === e ? 1 : 2) !== this.currChNr ? (c.log("ERROR", "Mismatch channel in midrow parsing"), !1) : (this.channels[n - 1].ccMIDROW(t), c.log("DEBUG", "MIDROW (" + d([e, t]) + ")"), !0))
                            }, e.prototype.parsePAC = function(e, t) {
                                var n;
                                if (!((e >= 17 && e <= 23 || e >= 25 && e <= 31) && t >= 64 && t <= 127 || (16 === e || 24 === e) && t >= 64 && t <= 95)) return !1;
                                if (e === this.lastCmdA && t === this.lastCmdB) return this.lastCmdA = null, this.lastCmdB = null, !0;
                                n = e <= 23 ? 1 : 2;
                                var l = this.interpretPAC(t >= 64 && t <= 95 ? 1 === n ? r[e] : o[e] : 1 === n ? s[e] : a[e], t);
                                return this.channels[n - 1].setPAC(l), this.lastCmdA = e, this.lastCmdB = t, this.currChNr = n, !0
                            }, e.prototype.interpretPAC = function(e, t) {
                                var n, l = {
                                    color: null,
                                    italics: !1,
                                    indent: null,
                                    underline: !1,
                                    row: e
                                };
                                return l.underline = 1 == (1 & (n = t > 95 ? t - 96 : t - 64)), n <= 13 ? l.color = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "white"][Math.floor(n / 2)] : n <= 15 ? (l.italics = !0, l.color = "white") : l.indent = 4 * Math.floor((n - 16) / 2), l
                            }, e.prototype.parseChars = function(e, t) {
                                var n, l = null,
                                    r = null,
                                    s = null;
                                (e >= 25 ? (l = 2, s = e - 8) : (l = 1, s = e), s >= 17 && s <= 19) ? (c.log("INFO", "Special char '" + i(n = 17 === s ? t + 80 : 18 === s ? t + 112 : t + 144) + "' in channel " + l), r = [n]) : e >= 32 && e <= 127 && (r = 0 === t ? [e] : [e, t]);
                                if (r) {
                                    var o = d(r);
                                    c.log("DEBUG", "Char codes =  " + o.join(",")), this.lastCmdA = null, this.lastCmdB = null
                                }
                                return r
                            }, e.prototype.parseBackgroundAttributes = function(e, t) {
                                var n, l;
                                return ((16 === e || 24 === e) && t >= 32 && t <= 47 || (23 === e || 31 === e) && t >= 45 && t <= 47) && (n = {}, 16 === e || 24 === e ? (l = Math.floor((t - 32) / 2), n.background = u[l], t % 2 == 1 && (n.background = n.background + "_semi")) : 45 === t ? n.background = "transparent" : (n.foreground = "black", 47 === t && (n.underline = !0)), this.channels[(e < 24 ? 1 : 2) - 1].setBkgData(n), this.lastCmdA = null, this.lastCmdB = null, !0)
                            }, e.prototype.reset = function() {
                                for (var e = 0; e < this.channels.length; e++) this.channels[e] && this.channels[e].reset();
                                this.lastCmdA = null, this.lastCmdB = null
                            }, e.prototype.cueSplitAtTime = function(e) {
                                for (var t = 0; t < this.channels.length; t++) this.channels[t] && this.channels[t].cueSplitAtTime(e)
                            }, e
                        }()
                    },
                    "./src/utils/codecs.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = {
                            audio: {
                                a3ds: !0,
                                "ac-3": !0,
                                "ac-4": !0,
                                alac: !0,
                                alaw: !0,
                                dra1: !0,
                                "dts+": !0,
                                "dts-": !0,
                                dtsc: !0,
                                dtse: !0,
                                dtsh: !0,
                                "ec-3": !0,
                                enca: !0,
                                g719: !0,
                                g726: !0,
                                m4ae: !0,
                                mha1: !0,
                                mha2: !0,
                                mhm1: !0,
                                mhm2: !0,
                                mlpa: !0,
                                mp4a: !0,
                                "raw ": !0,
                                Opus: !0,
                                samr: !0,
                                sawb: !0,
                                sawp: !0,
                                sevc: !0,
                                sqcp: !0,
                                ssmv: !0,
                                twos: !0,
                                ulaw: !0
                            },
                            video: {
                                avc1: !0,
                                avc2: !0,
                                avc3: !0,
                                avc4: !0,
                                avcp: !0,
                                drac: !0,
                                dvav: !0,
                                dvhe: !0,
                                encv: !0,
                                hev1: !0,
                                hvc1: !0,
                                mjp2: !0,
                                mp4v: !0,
                                mvc1: !0,
                                mvc2: !0,
                                mvc3: !0,
                                mvc4: !0,
                                resv: !0,
                                rv60: !0,
                                s263: !0,
                                svc1: !0,
                                svc2: !0,
                                "vc-1": !0,
                                vp08: !0,
                                vp09: !0
                            }
                        };
                        t.isCodecType = function(e, t) {
                            var n = l[t];
                            return !!n && !0 === n[e.slice(0, 4)]
                        }, t.isCodecSupportedInMp4 = function(e, t) {
                            return window.MediaSource.isTypeSupported((t || "video") + '/mp4;codecs="' + e + '"')
                        }
                    },
                    "./src/utils/cues.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/utils/vttparser.js");
                        t.newCue = function(e, t, n, i) {
                            for (var r, s, o, a, u, c = window.VTTCue || window.TextTrackCue, d = 0; d < i.rows.length; d++)
                                if (o = !0, a = 0, u = "", !(r = i.rows[d]).isEmpty()) {
                                    for (var f = 0; f < r.chars.length; f++) r.chars[f].uchar.match(/\s/) && o ? a++ : (u += r.chars[f].uchar, o = !1);
                                    r.cueStartTime = t, t === n && (n += 1e-4), a >= 16 ? a-- : a++, (s = new c(t, n, l.fixLineBreaks(u.trim()))).line = navigator.userAgent.match(/Firefox\//) ? d + 1 : d > 7 ? d - 2 : d + 1, s.align = "left", s.position = Math.max(0, Math.min(100, a / 32 * 100 + (navigator.userAgent.match(/Firefox\//) ? 50 : 0))), e.addCue(s)
                                }
                        }
                    },
                    "./src/utils/discontinuities.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var l = n("./src/utils/binary-search.js"),
                                i = n("./src/utils/logger.js");

                            function r(e, t) {
                                for (var n = null, l = 0; l < e.length; l += 1) {
                                    var i = e[l];
                                    if (i && i.cc === t) {
                                        n = i;
                                        break
                                    }
                                }
                                return n
                            }

                            function s(e, t, n) {
                                var l = !1;
                                return t && t.details && n && (n.endCC > n.startCC || e && e.cc < n.startCC) && (l = !0), l
                            }

                            function o(e, t) {
                                var n = e.fragments,
                                    l = t.fragments;
                                if (l.length && n.length) {
                                    var s = r(n, l[0].cc);
                                    if (s && (!s || s.startPTS)) return s;
                                    i.logger.log("No frag in previous level to align on")
                                } else i.logger.log("No fragments to align")
                            }

                            function a(e, t) {
                                t.fragments.forEach((function(t) {
                                    if (t) {
                                        var n = t.start + e;
                                        t.start = t.startPTS = n, t.endPTS = n + t.duration
                                    }
                                })), t.PTSKnown = !0
                            }

                            function u(e, t, n) {
                                if (s(e, n, t)) {
                                    var l = o(n.details, t);
                                    l && (i.logger.log("Adjusting PTS using last level due to CC increase within current level"), a(l.start, t))
                                }
                            }

                            function c(t, n) {
                                if (n && n.fragments.length) {
                                    if (!t.hasProgramDateTime || !n.hasProgramDateTime) return;
                                    var l = (t.fragments[0].programDateTime - n.fragments[0].programDateTime) / 1e3 + n.fragments[0].start;
                                    e.isFinite(l) && (i.logger.log("adjusting PTS using programDateTime delta, sliding:" + l.toFixed(3)), a(l, t))
                                }
                            }
                            t.findFirstFragWithCC = r, t.findFragWithCC = function(e, t) {
                                return l.default.search(e, (function(e) {
                                    return e.cc < t ? 1 : e.cc > t ? -1 : 0
                                }))
                            }, t.shouldAlignOnDiscontinuities = s, t.findDiscontinuousReferenceFrag = o, t.adjustPts = a, t.alignStream = function(e, t, n) {
                                u(e, n, t), !n.PTSKnown && t && c(n, t.details)
                            }, t.alignDiscontinuities = u, t.alignPDT = c
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/utils/ewma-bandwidth-estimator.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/utils/ewma.js");
                        t.default = function() {
                            function e(e, t, n, i) {
                                this.hls = e, this.defaultEstimate_ = i, this.minWeight_ = .001, this.minDelayMs_ = 50, this.slow_ = new l.default(t), this.fast_ = new l.default(n)
                            }
                            return e.prototype.sample = function(e, t) {
                                var n = 8e3 * t / (e = Math.max(e, this.minDelayMs_)),
                                    l = e / 1e3;
                                this.fast_.sample(l, n), this.slow_.sample(l, n)
                            }, e.prototype.canEstimate = function() {
                                var e = this.fast_;
                                return e && e.getTotalWeight() >= this.minWeight_
                            }, e.prototype.getEstimate = function() {
                                return this.canEstimate() ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate()) : this.defaultEstimate_
                            }, e.prototype.destroy = function() {}, e
                        }()
                    },
                    "./src/utils/ewma.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.default = function() {
                            function e(e) {
                                this.alpha_ = e ? Math.exp(Math.log(.5) / e) : 0, this.estimate_ = 0, this.totalWeight_ = 0
                            }
                            return e.prototype.sample = function(e, t) {
                                var n = Math.pow(this.alpha_, e);
                                this.estimate_ = t * (1 - n) + n * this.estimate_, this.totalWeight_ += e
                            }, e.prototype.getTotalWeight = function() {
                                return this.totalWeight_
                            }, e.prototype.getEstimate = function() {
                                if (this.alpha_) {
                                    var e = 1 - Math.pow(this.alpha_, this.totalWeight_);
                                    return this.estimate_ / e
                                }
                                return this.estimate_
                            }, e
                        }()
                    },
                    "./src/utils/get-self-scope.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.getSelfScope = function() {
                            return "undefined" == typeof window ? self : window
                        }
                    },
                    "./src/utils/logger.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/utils/get-self-scope.js");

                        function i() {}
                        var r = {
                                trace: i,
                                debug: i,
                                log: i,
                                warn: i,
                                info: i,
                                error: i
                            },
                            s = r;

                        function o(e, t) {
                            return "[" + e + "] > " + t
                        }
                        var a = l.getSelfScope();

                        function u(e) {
                            var t = a.console[e];
                            return t ? function() {
                                for (var n = [], l = 0; l < arguments.length; l++) n[l] = arguments[l];
                                n[0] && (n[0] = o(e, n[0])), t.apply(a.console, n)
                            } : i
                        }
                        t.enableLogs = function(e) {
                            if (!0 === e || "object" == typeof e) {
                                ! function(e) {
                                    for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
                                    t.forEach((function(t) {
                                        s[t] = e[t] ? e[t].bind(e) : u(t)
                                    }))
                                }(e, "debug", "log", "info", "warn", "error");
                                try {
                                    s.log()
                                } catch (t) {
                                    s = r
                                }
                            } else s = r
                        }, t.logger = s
                    },
                    "./src/utils/mediakeys-helper.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = "undefined" != typeof window && window.navigator && window.navigator.requestMediaKeySystemAccess ? window.navigator.requestMediaKeySystemAccess.bind(window.navigator) : null;
                        t.requestMediaKeySystemAccess = l
                    },
                    "./src/utils/mediasource-helper.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.getMediaSource = function() {
                            if ("undefined" != typeof window) return window.MediaSource || window.WebKitMediaSource
                        }
                    },
                    "./src/utils/output-filter.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.default = function() {
                            function e(e, t) {
                                this.timelineController = e, this.trackName = t, this.startTime = null, this.endTime = null, this.screen = null
                            }
                            return e.prototype.dispatchCue = function() {
                                null !== this.startTime && (this.timelineController.addCues(this.trackName, this.startTime, this.endTime, this.screen), this.startTime = null)
                            }, e.prototype.newCue = function(e, t, n) {
                                (null === this.startTime || this.startTime > e) && (this.startTime = e), this.endTime = t, this.screen = n, this.timelineController.createCaptionsTrack(this.trackName)
                            }, e
                        }()
                    },
                    "./src/utils/texttrack-utils.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.sendAddTrackEvent = function(e, t) {
                            var n = null;
                            try {
                                n = new window.Event("addtrack")
                            } catch (l) {
                                (n = document.createEvent("Event")).initEvent("addtrack", !1, !1)
                            }
                            n.track = e, t.dispatchEvent(n)
                        }, t.clearCurrentCues = function(e) {
                            if (e && e.cues)
                                for (; e.cues.length > 0;) e.removeCue(e.cues[0])
                        }
                    },
                    "./src/utils/time-ranges.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.default = {
                            toString: function(e) {
                                for (var t = "", n = e.length, l = 0; l < n; l++) t += "[" + e.start(l).toFixed(3) + "," + e.end(l).toFixed(3) + "]";
                                return t
                            }
                        }
                    },
                    "./src/utils/vttcue.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        }), t.default = function() {
                            if ("undefined" != typeof window && window.VTTCue) return window.VTTCue;
                            var e = {
                                    "": !0,
                                    lr: !0,
                                    rl: !0
                                },
                                t = {
                                    start: !0,
                                    middle: !0,
                                    end: !0,
                                    left: !0,
                                    right: !0
                                };

                            function n(e) {
                                return "string" == typeof e && !!t[e.toLowerCase()] && e.toLowerCase()
                            }

                            function l(e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var n = arguments[t];
                                    for (var l in n) e[l] = n[l]
                                }
                                return e
                            }

                            function i(t, i, r) {
                                var s = this,
                                    o = function() {
                                        if ("undefined" != typeof navigator) return /MSIE\s8\.0/.test(navigator.userAgent)
                                    }(),
                                    a = {};
                                o ? s = document.createElement("custom") : a.enumerable = !0, s.hasBeenReset = !1;
                                var u = "",
                                    c = !1,
                                    d = t,
                                    f = i,
                                    p = r,
                                    h = null,
                                    g = "",
                                    m = !0,
                                    v = "auto",
                                    y = "start",
                                    b = 50,
                                    T = "middle",
                                    w = 50,
                                    S = "middle";
                                if (Object.defineProperty(s, "id", l({}, a, {
                                        get: function() {
                                            return u
                                        },
                                        set: function(e) {
                                            u = "" + e
                                        }
                                    })), Object.defineProperty(s, "pauseOnExit", l({}, a, {
                                        get: function() {
                                            return c
                                        },
                                        set: function(e) {
                                            c = !!e
                                        }
                                    })), Object.defineProperty(s, "startTime", l({}, a, {
                                        get: function() {
                                            return d
                                        },
                                        set: function(e) {
                                            if ("number" != typeof e) throw new TypeError("Start time must be set to a number.");
                                            d = e, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(s, "endTime", l({}, a, {
                                        get: function() {
                                            return f
                                        },
                                        set: function(e) {
                                            if ("number" != typeof e) throw new TypeError("End time must be set to a number.");
                                            f = e, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(s, "text", l({}, a, {
                                        get: function() {
                                            return p
                                        },
                                        set: function(e) {
                                            p = "" + e, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(s, "region", l({}, a, {
                                        get: function() {
                                            return h
                                        },
                                        set: function(e) {
                                            h = e, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(s, "vertical", l({}, a, {
                                        get: function() {
                                            return g
                                        },
                                        set: function(t) {
                                            var n = function(t) {
                                                return "string" == typeof t && !!e[t.toLowerCase()] && t.toLowerCase()
                                            }(t);
                                            if (!1 === n) throw new SyntaxError("An invalid or illegal string was specified.");
                                            g = n, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(s, "snapToLines", l({}, a, {
                                        get: function() {
                                            return m
                                        },
                                        set: function(e) {
                                            m = !!e, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(s, "line", l({}, a, {
                                        get: function() {
                                            return v
                                        },
                                        set: function(e) {
                                            if ("number" != typeof e && "auto" !== e) throw new SyntaxError("An invalid number or illegal string was specified.");
                                            v = e, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(s, "lineAlign", l({}, a, {
                                        get: function() {
                                            return y
                                        },
                                        set: function(e) {
                                            var t = n(e);
                                            if (!t) throw new SyntaxError("An invalid or illegal string was specified.");
                                            y = t, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(s, "position", l({}, a, {
                                        get: function() {
                                            return b
                                        },
                                        set: function(e) {
                                            if (e < 0 || e > 100) throw new Error("Position must be between 0 and 100.");
                                            b = e, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(s, "positionAlign", l({}, a, {
                                        get: function() {
                                            return T
                                        },
                                        set: function(e) {
                                            var t = n(e);
                                            if (!t) throw new SyntaxError("An invalid or illegal string was specified.");
                                            T = t, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(s, "size", l({}, a, {
                                        get: function() {
                                            return w
                                        },
                                        set: function(e) {
                                            if (e < 0 || e > 100) throw new Error("Size must be between 0 and 100.");
                                            w = e, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(s, "align", l({}, a, {
                                        get: function() {
                                            return S
                                        },
                                        set: function(e) {
                                            var t = n(e);
                                            if (!t) throw new SyntaxError("An invalid or illegal string was specified.");
                                            S = t, this.hasBeenReset = !0
                                        }
                                    })), s.displayState = void 0, o) return s
                            }
                            return i.prototype.getCueAsHTML = function() {
                                return window.WebVTT.convertCueToDOMTree(window, this.text)
                            }, i
                        }()
                    },
                    "./src/utils/vttparser.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/utils/vttcue.js"),
                            i = function() {
                                return {
                                    decode: function(e) {
                                        if (!e) return "";
                                        if ("string" != typeof e) throw new Error("Error - expected string data.");
                                        return decodeURIComponent(encodeURIComponent(e))
                                    }
                                }
                            };

                        function r() {
                            this.window = window, this.state = "INITIAL", this.buffer = "", this.decoder = new i, this.regionList = []
                        }

                        function s() {
                            this.values = Object.create(null)
                        }

                        function o(e, t, n, l) {
                            var i = l ? e.split(l) : [e];
                            for (var r in i)
                                if ("string" == typeof i[r]) {
                                    var s = i[r].split(n);
                                    2 === s.length && t(s[0], s[1])
                                }
                        }
                        s.prototype = {
                            set: function(e, t) {
                                this.get(e) || "" === t || (this.values[e] = t)
                            },
                            get: function(e, t, n) {
                                return n ? this.has(e) ? this.values[e] : t[n] : this.has(e) ? this.values[e] : t
                            },
                            has: function(e) {
                                return e in this.values
                            },
                            alt: function(e, t, n) {
                                for (var l = 0; l < n.length; ++l)
                                    if (t === n[l]) {
                                        this.set(e, t);
                                        break
                                    }
                            },
                            integer: function(e, t) {
                                /^-?\d+$/.test(t) && this.set(e, parseInt(t, 10))
                            },
                            percent: function(e, t) {
                                return !!(t.match(/^([\d]{1,3})(\.[\d]*)?%$/) && (t = parseFloat(t)) >= 0 && t <= 100) && (this.set(e, t), !0)
                            }
                        };
                        var a = new l.default(0, 0, 0),
                            u = "middle" === a.align ? "middle" : "center";

                        function c(e, t, n) {
                            var l = e;

                            function i() {
                                var t = function(e) {
                                    function t(e, t, n, l) {
                                        return 3600 * (0 | e) + 60 * (0 | t) + (0 | n) + (0 | l) / 1e3
                                    }
                                    var n = e.match(/^(\d+):(\d{2})(:\d{2})?\.(\d{3})/);
                                    return n ? n[3] ? t(n[1], n[2], n[3].replace(":", ""), n[4]) : n[1] > 59 ? t(n[1], n[2], 0, n[4]) : t(0, n[1], n[2], n[4]) : null
                                }(e);
                                if (null === t) throw new Error("Malformed timestamp: " + l);
                                return e = e.replace(/^[^\sa-zA-Z-]+/, ""), t
                            }

                            function r() {
                                e = e.replace(/^\s+/, "")
                            }
                            if (r(), t.startTime = i(), r(), "--\x3e" !== e.substr(0, 3)) throw new Error("Malformed time stamp (time stamps must be separated by '--\x3e'): " + l);
                            e = e.substr(3), r(), t.endTime = i(), r(),
                                function(e, t) {
                                    var l = new s;
                                    o(e, (function(e, t) {
                                        switch (e) {
                                            case "region":
                                                for (var i = n.length - 1; i >= 0; i--)
                                                    if (n[i].id === t) {
                                                        l.set(e, n[i].region);
                                                        break
                                                    }
                                                break;
                                            case "vertical":
                                                l.alt(e, t, ["rl", "lr"]);
                                                break;
                                            case "line":
                                                var r = t.split(","),
                                                    s = r[0];
                                                l.integer(e, s), l.percent(e, s) && l.set("snapToLines", !1), l.alt(e, s, ["auto"]), 2 === r.length && l.alt("lineAlign", r[1], ["start", u, "end"]);
                                                break;
                                            case "position":
                                                r = t.split(","), l.percent(e, r[0]), 2 === r.length && l.alt("positionAlign", r[1], ["start", u, "end", "line-left", "line-right", "auto"]);
                                                break;
                                            case "size":
                                                l.percent(e, t);
                                                break;
                                            case "align":
                                                l.alt(e, t, ["start", u, "end", "left", "right"])
                                        }
                                    }), /:/, /\s/), t.region = l.get("region", null), t.vertical = l.get("vertical", "");
                                    var i = l.get("line", "auto");
                                    "auto" === i && -1 === a.line && (i = -1), t.line = i, t.lineAlign = l.get("lineAlign", "start"), t.snapToLines = l.get("snapToLines", !0), t.size = l.get("size", 100), t.align = l.get("align", u);
                                    var r = l.get("position", "auto");
                                    "auto" === r && 50 === a.position && (r = "start" === t.align || "left" === t.align ? 0 : "end" === t.align || "right" === t.align ? 100 : 50), t.position = r
                                }(e, t)
                        }

                        function d(e) {
                            return e.replace(/<br(?: \/)?>/gi, "\n")
                        }
                        t.fixLineBreaks = d, r.prototype = {
                            parse: function(e) {
                                var t = this;

                                function n() {
                                    var e = t.buffer,
                                        n = 0;
                                    for (e = d(e); n < e.length && "\r" !== e[n] && "\n" !== e[n];) ++n;
                                    var l = e.substr(0, n);
                                    return "\r" === e[n] && ++n, "\n" === e[n] && ++n, t.buffer = e.substr(n), l
                                }
                                e && (t.buffer += t.decoder.decode(e, {
                                    stream: !0
                                }));
                                try {
                                    var i = void 0;
                                    if ("INITIAL" === t.state) {
                                        if (!/\r\n|\n/.test(t.buffer)) return this;
                                        var r = (i = n()).match(/^(\xef\xbb\xbf)?WEBVTT([ \t].*)?$/);
                                        if (!r || !r[0]) throw new Error("Malformed WebVTT signature.");
                                        t.state = "HEADER"
                                    }
                                    for (var s = !1; t.buffer;) {
                                        if (!/\r\n|\n/.test(t.buffer)) return this;
                                        switch (s ? s = !1 : i = n(), t.state) {
                                            case "HEADER":
                                                /:/.test(i) ? o(i, (function(e, t) {}), /:/) : i || (t.state = "ID");
                                                continue;
                                            case "NOTE":
                                                i || (t.state = "ID");
                                                continue;
                                            case "ID":
                                                if (/^NOTE($|[ \t])/.test(i)) {
                                                    t.state = "NOTE";
                                                    break
                                                }
                                                if (!i) continue;
                                                if (t.cue = new l.default(0, 0, ""), t.state = "CUE", -1 === i.indexOf("--\x3e")) {
                                                    t.cue.id = i;
                                                    continue
                                                }
                                            case "CUE":
                                                try {
                                                    c(i, t.cue, t.regionList)
                                                } catch (u) {
                                                    t.cue = null, t.state = "BADCUE";
                                                    continue
                                                }
                                                t.state = "CUETEXT";
                                                continue;
                                            case "CUETEXT":
                                                var a = -1 !== i.indexOf("--\x3e");
                                                if (!i || a && (s = !0)) {
                                                    t.oncue && t.oncue(t.cue), t.cue = null, t.state = "ID";
                                                    continue
                                                }
                                                t.cue.text && (t.cue.text += "\n"), t.cue.text += i;
                                                continue;
                                            case "BADCUE":
                                                i || (t.state = "ID");
                                                continue
                                        }
                                    }
                                } catch (u) {
                                    "CUETEXT" === t.state && t.cue && t.oncue && t.oncue(t.cue), t.cue = null, t.state = "INITIAL" === t.state ? "BADWEBVTT" : "BADCUE"
                                }
                                return this
                            },
                            flush: function() {
                                try {
                                    if (this.buffer += this.decoder.decode(), (this.cue || "HEADER" === this.state) && (this.buffer += "\n\n", this.parse()), "INITIAL" === this.state) throw new Error("Malformed WebVTT signature.")
                                } catch (e) {
                                    throw e
                                }
                                return this.onflush && this.onflush(), this
                            }
                        }, t.default = r
                    },
                    "./src/utils/webvtt-parser.js": function(e, t, n) {
                        "use strict";
                        (function(e) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var l = n("./src/utils/vttparser.js"),
                                i = n("./src/demux/id3.js"),
                                r = function(e, t, n) {
                                    return e.substr(n || 0, t.length) === t
                                },
                                s = function(e) {
                                    for (var t = 5381, n = e.length; n;) t = 33 * t ^ e.charCodeAt(--n);
                                    return (t >>> 0).toString()
                                };
                            t.default = {
                                parse: function(t, n, o, a, u, c) {
                                    var d, f = i.utf8ArrayToStr(new Uint8Array(t)).trim().replace(/\r\n|\n\r|\n|\r/g, "\n").split("\n"),
                                        p = "00:00.000",
                                        h = 0,
                                        g = 0,
                                        m = 0,
                                        v = [],
                                        y = !0,
                                        b = new l.default;
                                    b.oncue = function(e) {
                                        var t = o[a],
                                            n = o.ccOffset;
                                        t && t.new && (void 0 !== g ? n = o.ccOffset = t.start : function(e, t, n) {
                                            var l = e[t],
                                                i = e[l.prevCC];
                                            if (!i || !i.new && l.new) return e.ccOffset = e.presentationOffset = l.start, void(l.new = !1);
                                            for (; i && i.new;) e.ccOffset += l.start - i.start, l.new = !1, i = e[(l = i).prevCC];
                                            e.presentationOffset = n
                                        }(o, a, m)), m && (n = m - o.presentationOffset), e.startTime += n - g, e.endTime += n - g, e.id = s(e.startTime.toString()) + s(e.endTime.toString()) + s(e.text), e.text = decodeURIComponent(encodeURIComponent(e.text)), e.endTime > 0 && v.push(e)
                                    }, b.onparsingerror = function(e) {
                                        d = e
                                    }, b.onflush = function() {
                                        d && c ? c(d) : u(v)
                                    }, f.forEach((function(t) {
                                        if (y) {
                                            if (r(t, "X-TIMESTAMP-MAP=")) {
                                                y = !1, t.substr(16).split(",").forEach((function(e) {
                                                    r(e, "LOCAL:") ? p = e.substr(6) : r(e, "MPEGTS:") && (h = parseInt(e.substr(7)))
                                                }));
                                                try {
                                                    n + (9e4 * o[a].start || 0) < 0 && (n += 8589934592), h -= n, l = p, i = parseInt(l.substr(-3)), s = parseInt(l.substr(-6, 2)), u = parseInt(l.substr(-9, 2)), c = l.length > 9 ? parseInt(l.substr(0, l.indexOf(":"))) : 0, g = (e.isFinite(i) && e.isFinite(s) && e.isFinite(u) && e.isFinite(c) ? (i += 1e3 * s, i += 6e4 * u, i += 36e5 * c) : -1) / 1e3, m = h / 9e4, -1 === g && (d = new Error("Malformed X-TIMESTAMP-MAP: " + t))
                                                } catch (f) {
                                                    d = new Error("Malformed X-TIMESTAMP-MAP: " + t)
                                                }
                                                return
                                            }
                                            "" === t && (y = !1)
                                        }
                                        var l, i, s, u, c;
                                        b.parse(t + "\n")
                                    })), b.flush()
                                }
                            }
                        }).call(this, n("./src/polyfills/number.js").Number)
                    },
                    "./src/utils/xhr-loader.js": function(e, t, n) {
                        "use strict";
                        Object.defineProperty(t, "__esModule", {
                            value: !0
                        });
                        var l = n("./src/utils/logger.js"),
                            i = window.performance,
                            r = window.XMLHttpRequest;
                        t.default = function() {
                            function e(e) {
                                e && e.xhrSetup && (this.xhrSetup = e.xhrSetup)
                            }
                            return e.prototype.destroy = function() {
                                this.abort(), this.loader = null
                            }, e.prototype.abort = function() {
                                var e = this.loader;
                                e && 4 !== e.readyState && (this.stats.aborted = !0, e.abort()), window.clearTimeout(this.requestTimeout), this.requestTimeout = null, window.clearTimeout(this.retryTimeout), this.retryTimeout = null
                            }, e.prototype.load = function(e, t, n) {
                                this.context = e, this.config = t, this.callbacks = n, this.stats = {
                                    trequest: i.now(),
                                    retry: 0
                                }, this.retryDelay = t.retryDelay, this.loadInternal()
                            }, e.prototype.loadInternal = function() {
                                var e, t = this.context;
                                e = this.loader = new r;
                                var n = this.stats;
                                n.tfirst = 0, n.loaded = 0;
                                var l = this.xhrSetup;
                                try {
                                    if (l) try {
                                        l(e, t.url)
                                    } catch (i) {
                                        e.open("GET", t.url, !0), l(e, t.url)
                                    }
                                    e.readyState || e.open("GET", t.url, !0)
                                } catch (i) {
                                    return void this.callbacks.onError({
                                        code: e.status,
                                        text: i.message
                                    }, t, e)
                                }
                                t.rangeEnd && e.setRequestHeader("Range", "bytes=" + t.rangeStart + "-" + (t.rangeEnd - 1)), e.onreadystatechange = this.readystatechange.bind(this), e.onprogress = this.loadprogress.bind(this), e.responseType = t.responseType, this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout), e.send()
                            }, e.prototype.readystatechange = function(e) {
                                var t = e.currentTarget,
                                    n = t.readyState,
                                    r = this.stats,
                                    s = this.context,
                                    o = this.config;
                                if (!r.aborted && n >= 2)
                                    if (window.clearTimeout(this.requestTimeout), 0 === r.tfirst && (r.tfirst = Math.max(i.now(), r.trequest)), 4 === n) {
                                        var a = t.status;
                                        if (a >= 200 && a < 300) {
                                            r.tload = Math.max(r.tfirst, i.now());
                                            var u, c = void 0;
                                            u = "arraybuffer" === s.responseType ? (c = t.response).byteLength : (c = t.responseText).length, r.loaded = r.total = u, this.callbacks.onSuccess({
                                                url: t.responseURL,
                                                data: c
                                            }, r, s, t)
                                        } else r.retry >= o.maxRetry || a >= 400 && a < 499 ? (l.logger.error(a + " while loading " + s.url), this.callbacks.onError({
                                            code: a,
                                            text: t.statusText
                                        }, s, t)) : (l.logger.warn(a + " while loading " + s.url + ", retrying in " + this.retryDelay + "..."), this.destroy(), this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay), this.retryDelay = Math.min(2 * this.retryDelay, o.maxRetryDelay), r.retry++)
                                    } else this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), o.timeout)
                            }, e.prototype.loadtimeout = function() {
                                l.logger.warn("timeout while loading " + this.context.url), this.callbacks.onTimeout(this.stats, this.context, null)
                            }, e.prototype.loadprogress = function(e) {
                                var t = e.currentTarget,
                                    n = this.stats;
                                n.loaded = e.loaded, e.lengthComputable && (n.total = e.total);
                                var l = this.callbacks.onProgress;
                                l && l(n, this.context, null, t)
                            }, e
                        }()
                    }
                }).default
            }, e.exports = l())
        }
    }
]);